{"version":3,"file":"debounce-change.directive.d.ts","sources":["debounce-change.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nexport declare class DebounceChangeDirective implements AfterViewInit, OnDestroy {\n    private _el;\n    private _ngZone;\n    private _defaultDebounceTime;\n    constructor(_el: ElementRef, _ngZone: NgZone, _defaultDebounceTime: number);\n    /**\n     * time to forward to the debounceTime pipe\n     */\n    debounceTime: any;\n    /**\n     * Any valid html event\n     */\n    debounceChangeEventType: string;\n    /**\n     * If true and the event has a 'target.value'\n     * we listen for it and only emit if the value changed\n     */\n    emitOnlyOnChange: boolean;\n    /**\n     * Emits original event after debounce\n     */\n    jpDebounceChange: EventEmitter<string>;\n    subscription: Subscription;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n}\n"]}