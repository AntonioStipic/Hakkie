{"version":3,"file":"click-outside.directive.d.ts","sources":["click-outside.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n/**\n * Emits an event when a click action occurs that does not target the element\n *\n * @example\n * <div (jpClickOutside)=\"doSomething()\"></div>\n */\nexport declare class ClickOutsideDirective implements AfterViewInit, OnDestroy {\n    private _el;\n    private _ngZone;\n    constructor(_el: ElementRef, _ngZone: NgZone);\n    /**\n     * Any valid html event\n     */\n    clickOutsideEventType: string;\n    /**\n     * if true jpClickOutside doesn't emit\n     */\n    clickOutsideBlock: boolean;\n    /**\n     * Emits when triggered event doesn't contain this e\n     */\n    jpClickOutside: EventEmitter<MouseEvent>;\n    subscription: Subscription;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n}\n"]}