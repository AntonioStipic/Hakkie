/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';
export class FormTouchOnHoverDirective {
    constructor() {
        this.jpFormTouched = new EventEmitter();
    }
    /**
     * @return {?}
     */
    enter() {
        if (Array.isArray(this.jpFormTouchOnHover)) {
            this.jpFormTouchOnHover.forEach(form => form.markAllAsTouched());
        }
        else {
            this.jpFormTouchOnHover.markAllAsTouched();
        }
        this.jpFormTouched.emit();
    }
}
FormTouchOnHoverDirective.decorators = [
    { type: Directive, args: [{
                selector: '[jpFormTouchOnHover]'
            },] }
];
FormTouchOnHoverDirective.propDecorators = {
    jpFormTouchOnHover: [{ type: Input }],
    jpFormTouched: [{ type: Output }],
    enter: [{ type: HostListener, args: ['mouseenter',] }]
};
if (false) {
    /** @type {?} */
    FormTouchOnHoverDirective.prototype.jpFormTouchOnHover;
    /** @type {?} */
    FormTouchOnHoverDirective.prototype.jpFormTouched;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS10b3VjaC1vbi1ob3Zlci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1oZWxwZXJzL3NyYy9kaXJlY3RpdmVzL2Zvcm0tdG91Y2gtb24taG92ZXIvZm9ybS10b3VjaC1vbi1ob3Zlci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsWUFBWSxFQUNaLFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxFQUNQLE1BQU0sZUFBZSxDQUFDO0FBUXZCLE1BQU0sT0FBTyx5QkFBeUI7SUFIdEM7UUFNWSxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFZL0MsQ0FBQzs7OztJQVRDLEtBQUs7UUFDSCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEVBQUU7WUFDMUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLENBQUM7U0FDbEU7YUFBTTtZQUNMLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1NBQzVDO1FBRUQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUM1QixDQUFDOzs7WUFqQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxzQkFBc0I7YUFDakM7OztpQ0FFRSxLQUFLOzRCQUVMLE1BQU07b0JBRU4sWUFBWSxTQUFDLFlBQVk7Ozs7SUFKMUIsdURBQWtEOztJQUVsRCxrREFBNkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEV2ZW50RW1pdHRlcixcbiAgSG9zdExpc3RlbmVyLFxuICBJbnB1dCxcbiAgT3V0cHV0XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGb3JtR3JvdXAsIEZvcm1BcnJheSwgRm9ybUNvbnRyb2x9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxudHlwZSBlbnRyeSA9IEZvcm1Db250cm9sIHwgRm9ybUdyb3VwIHwgRm9ybUFycmF5O1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbanBGb3JtVG91Y2hPbkhvdmVyXSdcbn0pXG5leHBvcnQgY2xhc3MgRm9ybVRvdWNoT25Ib3ZlckRpcmVjdGl2ZSB7XG4gIEBJbnB1dCgpIGpwRm9ybVRvdWNoT25Ib3ZlcjogZW50cnkgfCBBcnJheTxlbnRyeT47XG5cbiAgQE91dHB1dCgpIGpwRm9ybVRvdWNoZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQEhvc3RMaXN0ZW5lcignbW91c2VlbnRlcicpXG4gIGVudGVyKCkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMuanBGb3JtVG91Y2hPbkhvdmVyKSkge1xuICAgICAgdGhpcy5qcEZvcm1Ub3VjaE9uSG92ZXIuZm9yRWFjaChmb3JtID0+IGZvcm0ubWFya0FsbEFzVG91Y2hlZCgpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5qcEZvcm1Ub3VjaE9uSG92ZXIubWFya0FsbEFzVG91Y2hlZCgpO1xuICAgIH1cblxuICAgIHRoaXMuanBGb3JtVG91Y2hlZC5lbWl0KCk7XG4gIH1cbn1cbiJdfQ==