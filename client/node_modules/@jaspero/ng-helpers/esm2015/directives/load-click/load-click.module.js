/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { LoadClickDirective } from './load-click.directive';
import { LOAD_CLICK_CLASS } from './load-click-class.const';
export class LoadClickModule {
    /**
     * @param {?} value
     * @return {?}
     */
    static defaultLoadingClass(value) {
        return {
            ngModule: LoadClickModule,
            providers: [
                {
                    provide: LOAD_CLICK_CLASS,
                    useValue: value
                }
            ]
        };
    }
}
LoadClickModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    LoadClickDirective
                ],
                exports: [
                    LoadClickDirective
                ],
                providers: [
                    {
                        provide: LOAD_CLICK_CLASS,
                        useValue: 'loading'
                    }
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZC1jbGljay5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1oZWxwZXJzL3NyYy9kaXJlY3RpdmVzL2xvYWQtY2xpY2svbG9hZC1jbGljay5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM3QyxPQUFPLEVBQXNCLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUMxRCxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQW1CMUQsTUFBTSxPQUFPLGVBQWU7Ozs7O0lBQzFCLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxLQUFhO1FBQ3RDLE9BQU87WUFDTCxRQUFRLEVBQUUsZUFBZTtZQUN6QixTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLGdCQUFnQjtvQkFDekIsUUFBUSxFQUFFLEtBQUs7aUJBQ2hCO2FBQ0Y7U0FDRixDQUFDO0lBQ0osQ0FBQzs7O1lBNUJGLFFBQVEsU0FBQztnQkFDUixPQUFPLEVBQUU7b0JBQ1AsWUFBWTtpQkFDYjtnQkFDRCxZQUFZLEVBQUU7b0JBQ1osa0JBQWtCO2lCQUNuQjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1Asa0JBQWtCO2lCQUNuQjtnQkFDRCxTQUFTLEVBQUU7b0JBQ1Q7d0JBQ0UsT0FBTyxFQUFFLGdCQUFnQjt3QkFDekIsUUFBUSxFQUFFLFNBQVM7cUJBQ3BCO2lCQUNGO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtMb2FkQ2xpY2tEaXJlY3RpdmV9IGZyb20gJy4vbG9hZC1jbGljay5kaXJlY3RpdmUnO1xuaW1wb3J0IHtMT0FEX0NMSUNLX0NMQVNTfSBmcm9tICcuL2xvYWQtY2xpY2stY2xhc3MuY29uc3QnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIExvYWRDbGlja0RpcmVjdGl2ZVxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgTG9hZENsaWNrRGlyZWN0aXZlXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IExPQURfQ0xJQ0tfQ0xBU1MsXG4gICAgICB1c2VWYWx1ZTogJ2xvYWRpbmcnXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIExvYWRDbGlja01vZHVsZSB7XG4gIHN0YXRpYyBkZWZhdWx0TG9hZGluZ0NsYXNzKHZhbHVlOiBzdHJpbmcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPExvYWRDbGlja01vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTG9hZENsaWNrTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBMT0FEX0NMSUNLX0NMQVNTLFxuICAgICAgICAgIHVzZVZhbHVlOiB2YWx1ZVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19