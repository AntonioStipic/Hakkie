/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
/**
 * Returns an array of {key: number, value: string} objects.
 * Most useful in *ngFor iterations
 *
 * \@example
 * <div *ngFor="let item of someEnum | enum></div>
 *
 */
export class EnumPipe {
    /**
     * @param {?} value
     * @return {?}
     */
    transform(value) {
        /** @type {?} */
        const keys = [];
        for (const enumMember in value) {
            if (value[enumMember]) {
                /** @type {?} */
                const val = parseInt(enumMember, 10);
                if (!isNaN(val)) {
                    keys.push({ key: val, value: value[enumMember] });
                }
            }
        }
        return keys;
    }
}
EnumPipe.decorators = [
    { type: Pipe, args: [{
                name: 'jpEnum'
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bS5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctaGVscGVycy9zcmMvcGlwZXMvZW51bS9lbnVtLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxJQUFJLEVBQWdCLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7QUFhbEQsTUFBTSxPQUFPLFFBQVE7Ozs7O0lBQ1osU0FBUyxDQUFDLEtBQUs7O2NBQ2QsSUFBSSxHQUFHLEVBQUU7UUFDZixLQUFLLE1BQU0sVUFBVSxJQUFJLEtBQUssRUFBRTtZQUM5QixJQUFJLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRTs7c0JBQ2YsR0FBRyxHQUFHLFFBQVEsQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDO2dCQUNwQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFO29CQUNmLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLEVBQUMsQ0FBQyxDQUFDO2lCQUNqRDthQUNGO1NBQ0Y7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7OztZQWZGLElBQUksU0FBQztnQkFDSixJQUFJLEVBQUUsUUFBUTthQUNmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQaXBlLCBQaXBlVHJhbnNmb3JtfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBSZXR1cm5zIGFuIGFycmF5IG9mIHtrZXk6IG51bWJlciwgdmFsdWU6IHN0cmluZ30gb2JqZWN0cy5cbiAqIE1vc3QgdXNlZnVsIGluICpuZ0ZvciBpdGVyYXRpb25zXG4gKlxuICogQGV4YW1wbGVcbiAqIDxkaXYgKm5nRm9yPVwibGV0IGl0ZW0gb2Ygc29tZUVudW0gfCBlbnVtPjwvZGl2PlxuICpcbiAqL1xuQFBpcGUoe1xuICBuYW1lOiAnanBFbnVtJ1xufSlcbmV4cG9ydCBjbGFzcyBFbnVtUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICBwdWJsaWMgdHJhbnNmb3JtKHZhbHVlKTogQXJyYXk8e2tleTogbnVtYmVyOyB2YWx1ZTogc3RyaW5nfT4ge1xuICAgIGNvbnN0IGtleXMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IGVudW1NZW1iZXIgaW4gdmFsdWUpIHtcbiAgICAgIGlmICh2YWx1ZVtlbnVtTWVtYmVyXSkge1xuICAgICAgICBjb25zdCB2YWwgPSBwYXJzZUludChlbnVtTWVtYmVyLCAxMCk7XG4gICAgICAgIGlmICghaXNOYU4odmFsKSkge1xuICAgICAgICAgIGtleXMucHVzaCh7a2V5OiB2YWwsIHZhbHVlOiB2YWx1ZVtlbnVtTWVtYmVyXX0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBrZXlzO1xuICB9XG59XG4iXX0=