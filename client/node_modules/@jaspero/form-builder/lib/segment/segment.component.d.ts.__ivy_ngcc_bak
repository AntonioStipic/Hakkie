import { Injector, OnInit } from '@angular/core';
import { CompiledField } from '../interfaces/compiled-field.interface';
import { CompiledSegment } from '../interfaces/compiled-segment.interface';
import { Definitions } from '../interfaces/definitions.interface';
import { Parser, Pointers } from '../utils/parser';
export interface SegmentData {
    segment: CompiledSegment;
    parser: Parser;
    definitions: Definitions;
    parent?: string;
}
export declare class SegmentComponent<T = any> implements OnInit {
    sData: SegmentData;
    injector: Injector;
    constructor(sData: SegmentData, injector: Injector);
    segment: CompiledSegment<T>;
    pointers: Pointers;
    nestedSegments: CompiledSegment<T>[];
    nestedArraySegments: Array<CompiledSegment[]>;
    arrayFields: Array<CompiledField[]>;
    classes: string;
    id: string;
    ngOnInit(): void;
    addArrayItem(loadHook?: boolean): void;
    moveArray(up: boolean, fromIndex: number): void;
    removeArrayItem(index: number): void;
}
