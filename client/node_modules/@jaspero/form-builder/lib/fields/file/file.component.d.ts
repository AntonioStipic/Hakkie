import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';
import { MatSnackBar } from '@angular/material/snack-bar';
import { TranslocoService } from '@ngneat/transloco';
import { FieldComponent } from '../../field/field.component';
import { FormBuilderService } from '../../form-builder.service';
import { FieldData } from '../../interfaces/field-data.interface';
import { StorageService } from '../../services/storage.service';
import * as ɵngcc0 from '@angular/core';
interface FileData extends FieldData {
    emptyLabel?: string;
    preventClear?: boolean;
    allowedFileTypes?: string[];
    forbiddenFileTypes?: string[];
    minSize?: string | number;
    maxSize?: string | number;
}
export declare class FileComponent extends FieldComponent<FileData> implements OnInit {
    cData: FileData;
    private storage;
    private cdr;
    private formBuilderService;
    private transloco;
    private snackBar;
    fileEl: ElementRef<HTMLInputElement>;
    value: File;
    name: string;
    emptyLabel: string;
    allowedFileTypes: string[];
    forbiddenFileTypes: string[];
    minSizeBytes: number;
    maxSizeBytes: number;
    constructor(cData: FileData, storage: StorageService, cdr: ChangeDetectorRef, formBuilderService: FormBuilderService, transloco: TranslocoService, snackBar: MatSnackBar);
    ngOnInit(): void;
    errorSnack(message?: string, dismiss?: string): void;
    fileChange(ev: Event): import("rxjs").Observable<never> | undefined;
    clear(): void;
    save(moduleId: string, documentId: string): import("rxjs").Observable<unknown>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FileComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<FileComponent, "fb-file", never, {}, {}, never, never>;
}
export {};

//# sourceMappingURL=file.component.d.ts.map