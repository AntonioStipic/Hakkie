import { OnInit } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { FieldComponent } from '../../field/field.component';
import { FieldData } from '../../interfaces/field-data.interface';
import { Option } from '../../interfaces/option.interface';
import { WhereFilter } from '../../interfaces/where-filter.interface';
import { DbService } from '../../services/db.service';
import * as ɵngcc0 from '@angular/core';
interface Populate {
    collection?: string;
    nameKey?: string;
    valueKey?: string;
    orderBy?: string;
    /**
     * A method for mapping all of the results
     * (items: T[]) => any[]
     */
    mapResults?: string;
    /**
     * If a filter is a string
     * it represents the id of the document
     */
    filter?: WhereFilter | string;
    /**
     * A stringified function that receives
     * an object with {fieldData: SelectData, value: form.getRawValue(), role: string, additionalContext?: any}
     * and should return a WhereFilter.
     * This doesn't work in combination with the dependency property
     */
    dynamicFilter?: string;
    /**
     * Use this property if the field depends on changes
     * of a different field in the form
     */
    dependency?: {
        key: string;
        /**
         * A method for defining query dynamically
         * (value) => {collection: string; orderBy: string; filter: WhereFilter | string}
         */
        method: string;
    };
}
interface SelectData extends FieldData {
    dataSet?: Option[];
    multiple?: boolean;
    populate?: Populate;
    autocomplete?: string;
}
export declare class SelectComponent extends FieldComponent<SelectData> implements OnInit {
    cData: SelectData;
    private dbService;
    private role;
    private additionalContext;
    dataSet$: Observable<Option[]>;
    loading$: BehaviorSubject<boolean>;
    constructor(cData: SelectData, dbService: DbService, role: string, additionalContext: any);
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SelectComponent, [null, null, null, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SelectComponent, "fb-select", never, {}, {}, never, never>;
}
export {};

//# sourceMappingURL=select.component.d.ts.map