{"version":3,"file":"gallery.component.d.ts","sources":["gallery.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { CdkDragDrop, CdkDragMove, CdkDropList, CdkDropListGroup } from '@angular/cdk/drag-drop';\nimport { ViewportRuler } from '@angular/cdk/overlay';\nimport { HttpClient } from '@angular/common/http';\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, OnInit, TemplateRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { FieldComponent } from '../../field/field.component';\nimport { FormBuilderService } from '../../form-builder.service';\nimport { FieldData } from '../../interfaces/field-data.interface';\nimport { GeneratedImage } from '../../interfaces/generated-image.interface';\nimport { StorageService } from '../../services/storage.service';\ninterface GalleryData extends FieldData {\n    allowUrl?: boolean;\n    allowServerUpload?: boolean;\n    generatedImages?: GeneratedImage[];\n    allowedImageTypes?: string[];\n    forbiddenImageTypes?: string[];\n    minSize?: string | number;\n    maxSize?: string | number;\n}\nexport declare class GalleryComponent extends FieldComponent<GalleryData> implements OnInit, AfterViewInit {\n    cData: GalleryData;\n    private storageUrl;\n    private dialog;\n    private cdr;\n    private http;\n    private storage;\n    private formBuilderService;\n    private viewportRuler;\n    private transloco;\n    private snackBar;\n    constructor(cData: GalleryData, storageUrl: string, dialog: MatDialog, cdr: ChangeDetectorRef, http: HttpClient, storage: StorageService, formBuilderService: FormBuilderService, viewportRuler: ViewportRuler, transloco: TranslocoService, snackBar: MatSnackBar);\n    listGroup: CdkDropListGroup<CdkDropList>;\n    placeholder: CdkDropList;\n    modalTemplate: TemplateRef<any>;\n    imagesSort: TemplateRef<any>;\n    fileEl: ElementRef<HTMLInputElement>;\n    target: CdkDropList | null;\n    targetIndex: number;\n    source: CdkDropList | null;\n    sourceIndex: number;\n    activeContainer: any;\n    files: File[];\n    toRemove: any[];\n    allowedImageTypes: string[];\n    forbiddenImageTypes: string[];\n    minSizeBytes: number;\n    maxSizeBytes: number;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    openUploadDialog(): void;\n    addImage(image: string): void;\n    openFileUpload(): void;\n    openSortImages(): void;\n    drop(event: CdkDragDrop<string[]>): void;\n    move(up: boolean | undefined, index: number): void;\n    errorSnack(message?: string, dismiss?: string): void;\n    filesUploaded(el: HTMLInputElement | FileList): import(\"rxjs\").Observable<never> | undefined;\n    removeImage(index: number, item: any): void;\n    sortDrop(event: CdkDragDrop<string[]>): void;\n    /**\n     * Drag and Drop\n     */\n    dragMoved(e: CdkDragMove): void;\n    dropListDropped(): void;\n    /** Determines the point of the page that was touched by the user. */\n    getPointerPositionOnPage(event: MouseEvent | TouchEvent): {\n        x: number;\n        y: number;\n    };\n    /**\n     * Executes all uploads/removes to persist\n     * the changes on server\n     */\n    save(moduleId: string, documentId: string): import(\"rxjs\").Observable<unknown[]>;\n}\nexport {};\n"]}