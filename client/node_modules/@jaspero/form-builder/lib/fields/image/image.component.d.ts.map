{"version":3,"file":"image.component.d.ts","sources":["image.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { FieldComponent } from '../../field/field.component';\nimport { FormBuilderService } from '../../form-builder.service';\nimport { FieldData } from '../../interfaces/field-data.interface';\nimport { GeneratedImage } from '../../interfaces/generated-image.interface';\nimport { StorageService } from '../../services/storage.service';\ninterface ImageData extends FieldData {\n    preventServerUpload?: boolean;\n    generatedImages?: GeneratedImage[];\n    allowedImageTypes?: string[];\n    forbiddenImageTypes?: string[];\n    minSize?: string | number;\n    maxSize?: string | number;\n}\nexport declare class ImageComponent extends FieldComponent<ImageData> implements OnInit {\n    cData: ImageData;\n    private storage;\n    private cdr;\n    private formBuilderService;\n    private transloco;\n    private snackBar;\n    private domSanitizer;\n    constructor(cData: ImageData, storage: StorageService, cdr: ChangeDetectorRef, formBuilderService: FormBuilderService, transloco: TranslocoService, snackBar: MatSnackBar, domSanitizer: DomSanitizer);\n    fileEl: ElementRef<HTMLInputElement>;\n    value: File | null;\n    imageUrl: FormControl;\n    disInput: boolean;\n    imageSrc: SafeResourceUrl;\n    allowedImageTypes: string[];\n    forbiddenImageTypes: string[];\n    minSizeBytes: number;\n    maxSizeBytes: number;\n    ngOnInit(): void;\n    errorSnack(message?: string, dismiss?: string): void;\n    openFileUpload(): void;\n    filesImage(event: Event): import(\"rxjs\").Observable<never> | undefined;\n    remove(): void;\n    save(moduleId: string, documentId: string): import(\"rxjs\").Observable<any>;\n}\nexport {};\n"]}