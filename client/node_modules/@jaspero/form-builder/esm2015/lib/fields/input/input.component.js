import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldComponent } from '../../field/field.component';
import { getHsd } from '../../utils/get-hsd';
export class InputComponent extends FieldComponent {
    ngOnInit() {
        this.prefix$ = getHsd('prefix', this.cData);
        this.suffix$ = getHsd('suffix', this.cData);
    }
}
InputComponent.decorators = [
    { type: Component, args: [{
                selector: 'fb-input',
                template: "<!--TODO: Format this when fixed. For some reason if the type is passed through a variable angular doesn't properly parse-->\n<ng-container [ngSwitch]=\"cData.type\">\n  <mat-form-field *ngSwitchCase=\"'number'\" class=\"w-full\" appearance=\"outline\" [class.mat-form-field-has-hint]=\"cData.hint\">\n    <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n    <span *ngIf=\"cData.prefix\" matPrefix [innerHTML]=\"((prefix$ | async) || '') | jpSanitize\"></span>\n    <input\n      matInput\n      type=\"number\"\n      [attr.autocomplete]=\"cData.autocomplete || 'on'\"\n      [placeholder]=\"(cData.placeholder || '') | transloco\"\n      [formControl]=\"cData.control\">\n    <span *ngIf=\"cData.suffix\" matSuffix [innerHTML]=\"((suffix$ | async) || '') | jpSanitize\"></span>\n    <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n  </mat-form-field>\n\n  <mat-form-field *ngSwitchDefault class=\"w-full\" appearance=\"outline\" [class.mat-form-field-has-hint]=\"cData.hint\">\n    <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n    <span *ngIf=\"cData.prefix\" matPrefix [innerHTML]=\"((prefix$ | async) || '') | jpSanitize\"></span>\n    <input\n        matInput\n        [attr.autocomplete]=\"cData.autocomplete || 'on'\"\n        [attr.type]=\"cData.type\"\n        [placeholder]=\"(cData.placeholder || '') | transloco\"\n        [formControl]=\"cData.control\">\n    <span *ngIf=\"cData.suffix\" matSuffix [innerHTML]=\"((suffix$ | async) || '') | jpSanitize\"></span>\n    <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n  </mat-form-field>\n</ng-container>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZm9ybS1idWlsZGVyL3NyYy9saWIvZmllbGRzL2lucHV0L2lucHV0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFTLE1BQU0sZUFBZSxDQUFDO0FBRXpFLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUUzRCxPQUFPLEVBQUMsTUFBTSxFQUFNLE1BQU0scUJBQXFCLENBQUM7QUFlaEQsTUFBTSxPQUFPLGNBQWUsU0FBUSxjQUF5QjtJQUszRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlDLENBQUM7OztZQWRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsVUFBVTtnQkFDcEIsNG9EQUFxQztnQkFFckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O2FBQ2hEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7RmllbGRDb21wb25lbnR9IGZyb20gJy4uLy4uL2ZpZWxkL2ZpZWxkLmNvbXBvbmVudCc7XG5pbXBvcnQge0ZpZWxkRGF0YX0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9maWVsZC1kYXRhLmludGVyZmFjZSc7XG5pbXBvcnQge2dldEhzZCwgSFNEfSBmcm9tICcuLi8uLi91dGlscy9nZXQtaHNkJztcblxuaW50ZXJmYWNlIElucHV0RGF0YSBleHRlbmRzIEZpZWxkRGF0YSB7XG4gIHR5cGU6ICd0ZXh0JyB8ICdudW1iZXInIHwgJ2VtYWlsJztcbiAgYXV0b2NvbXBsZXRlPzogc3RyaW5nO1xuICBzdWZmaXg/OiBIU0Q7XG4gIHByZWZpeD86IEhTRDtcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZmItaW5wdXQnLFxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9pbnB1dC5jb21wb25lbnQuc2NzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBJbnB1dENvbXBvbmVudCBleHRlbmRzIEZpZWxkQ29tcG9uZW50PElucHV0RGF0YT4gaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIHByZWZpeCQ6IE9ic2VydmFibGU8c3RyaW5nPjtcbiAgc3VmZml4JDogT2JzZXJ2YWJsZTxzdHJpbmc+O1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMucHJlZml4JCA9IGdldEhzZCgncHJlZml4JywgdGhpcy5jRGF0YSk7XG4gICAgdGhpcy5zdWZmaXgkID0gZ2V0SHNkKCdzdWZmaXgnLCB0aGlzLmNEYXRhKTtcbiAgfVxufVxuIl19