import { ChangeDetectorRef, Component, Inject } from '@angular/core';
import { FormControl, Validators } from '@angular/forms';
import { of } from 'rxjs';
import { tap } from 'rxjs/operators';
import { FieldComponent } from '../../field/field.component';
import { FormBuilderService } from '../../form-builder.service';
import { cloneAbstractControl } from '../../utils/clone-abstract-control';
import { COMPONENT_DATA } from '../../utils/create-component-injector';
export class RangeComponent extends FieldComponent {
    constructor(cData, cdr, formBuilderService) {
        super(cData);
        this.cData = cData;
        this.cdr = cdr;
        this.formBuilderService = formBuilderService;
    }
    ngOnInit() {
        this.formBuilderService.saveComponents.push(this);
        this.min = new Date(this.cData.min || 0);
        this.max = new Date(this.cData.max || Date.now() * 2);
        this.entryControl = cloneAbstractControl(this.cData.control);
        this.start = new FormControl({ value: this.entryControl.value.start || '', disabled: this.cData.control.disabled }, [Validators.min(this.cData.min || 0)]);
        this.end = new FormControl({ value: this.entryControl.value.end || '', disabled: this.cData.control.disabled }, [Validators.max(this.cData.max || Date.now() * 2)]);
    }
    save() {
        return of({}).pipe(tap(() => {
            const start = this.start.value;
            const end = this.end.value;
            this.cData.control.setValue({ start, end });
        }));
    }
}
RangeComponent.decorators = [
    { type: Component, args: [{
                selector: 'fb-range',
                template: "<div class=\"mat-form-field-wrapper\">\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{(cData.label || '') | transloco}}</p>\n\n  <mat-form-field appearance=\"outline\" class=\"w-full\">\n    <mat-label>Enter a date range</mat-label>\n    <mat-date-range-input [rangePicker]=\"picker\">\n      <input matStartDate placeholder=\"Start date\" [formControl]=\"start\" [min]=\"min\">\n      <input matEndDate placeholder=\"End date\" [formControl]=\"end\" [max]=\"max\">\n    </mat-date-range-input>\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-date-range-picker #picker></mat-date-range-picker>\n  </mat-form-field>\n\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.hint\">\n    {{(cData.hint | transloco) | transloco}}\n  </p>\n</div>\n",
                styles: [""]
            },] }
];
RangeComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [COMPONENT_DATA,] }] },
    { type: ChangeDetectorRef },
    { type: FormBuilderService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZm9ybS1idWlsZGVyL3NyYy9saWIvZmllbGRzL3JhbmdlL3JhbmdlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBUyxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUMsV0FBVyxFQUFFLFVBQVUsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3ZELE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDeEIsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ25DLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUMzRCxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQztBQUU5RCxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUN4RSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sdUNBQXVDLENBQUM7QUFZckUsTUFBTSxPQUFPLGNBQWUsU0FBUSxjQUF5QjtJQVEzRCxZQUNpQyxLQUFnQixFQUN2QyxHQUFzQixFQUN0QixrQkFBc0M7UUFFOUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBSmtCLFVBQUssR0FBTCxLQUFLLENBQVc7UUFDdkMsUUFBRyxHQUFILEdBQUcsQ0FBbUI7UUFDdEIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtJQUdoRCxDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRWxELElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLFlBQVksR0FBRyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTdELElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxXQUFXLENBQzFCLEVBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBQyxFQUNuRixDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDdEMsQ0FBQztRQUVGLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxXQUFXLENBQ3hCLEVBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBQyxFQUNqRixDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQ25ELENBQUM7SUFDSixDQUFDO0lBRUQsSUFBSTtRQUNGLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FDaEIsR0FBRyxDQUFDLEdBQUcsRUFBRTtZQUNQLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO1lBQy9CLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDO1lBQzNCLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFDLEtBQUssRUFBRSxHQUFHLEVBQUMsQ0FBQyxDQUFDO1FBQzVDLENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDOzs7WUEvQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxVQUFVO2dCQUNwQix5eUJBQXFDOzthQUV0Qzs7OzRDQVVJLE1BQU0sU0FBQyxjQUFjO1lBN0JsQixpQkFBaUI7WUFLakIsa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBJbmplY3QsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Zvcm1Db250cm9sLCBWYWxpZGF0b3JzfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge29mfSBmcm9tICdyeGpzJztcbmltcG9ydCB7dGFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge0ZpZWxkQ29tcG9uZW50fSBmcm9tICcuLi8uLi9maWVsZC9maWVsZC5jb21wb25lbnQnO1xuaW1wb3J0IHtGb3JtQnVpbGRlclNlcnZpY2V9IGZyb20gJy4uLy4uL2Zvcm0tYnVpbGRlci5zZXJ2aWNlJztcbmltcG9ydCB7RmllbGREYXRhfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzL2ZpZWxkLWRhdGEuaW50ZXJmYWNlJztcbmltcG9ydCB7Y2xvbmVBYnN0cmFjdENvbnRyb2x9IGZyb20gJy4uLy4uL3V0aWxzL2Nsb25lLWFic3RyYWN0LWNvbnRyb2wnO1xuaW1wb3J0IHtDT01QT05FTlRfREFUQX0gZnJvbSAnLi4vLi4vdXRpbHMvY3JlYXRlLWNvbXBvbmVudC1pbmplY3Rvcic7XG5cbmludGVyZmFjZSBSYW5nZURhdGEgZXh0ZW5kcyBGaWVsZERhdGEge1xuICBtaW4/OiBudW1iZXI7XG4gIG1heD86IG51bWJlcjtcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZmItcmFuZ2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vcmFuZ2UuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9yYW5nZS5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgUmFuZ2VDb21wb25lbnQgZXh0ZW5kcyBGaWVsZENvbXBvbmVudDxSYW5nZURhdGE+IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBlbnRyeUNvbnRyb2w6IEZvcm1Db250cm9sO1xuICBzdGFydDogRm9ybUNvbnRyb2w7XG4gIGVuZDogRm9ybUNvbnRyb2w7XG4gIG1pbjogRGF0ZTtcbiAgbWF4OiBEYXRlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBJbmplY3QoQ09NUE9ORU5UX0RBVEEpIHB1YmxpYyBjRGF0YTogUmFuZ2VEYXRhLFxuICAgIHByaXZhdGUgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBwcml2YXRlIGZvcm1CdWlsZGVyU2VydmljZTogRm9ybUJ1aWxkZXJTZXJ2aWNlXG4gICkge1xuICAgIHN1cGVyKGNEYXRhKTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuZm9ybUJ1aWxkZXJTZXJ2aWNlLnNhdmVDb21wb25lbnRzLnB1c2godGhpcyk7XG5cbiAgICB0aGlzLm1pbiA9IG5ldyBEYXRlKHRoaXMuY0RhdGEubWluIHx8IDApO1xuICAgIHRoaXMubWF4ID0gbmV3IERhdGUodGhpcy5jRGF0YS5tYXggfHwgRGF0ZS5ub3coKSAqIDIpO1xuICAgIHRoaXMuZW50cnlDb250cm9sID0gY2xvbmVBYnN0cmFjdENvbnRyb2wodGhpcy5jRGF0YS5jb250cm9sKTtcblxuICAgIHRoaXMuc3RhcnQgPSBuZXcgRm9ybUNvbnRyb2woXG4gICAgICB7dmFsdWU6IHRoaXMuZW50cnlDb250cm9sLnZhbHVlLnN0YXJ0IHx8ICcnLCBkaXNhYmxlZDogdGhpcy5jRGF0YS5jb250cm9sLmRpc2FibGVkfSxcbiAgICAgIFtWYWxpZGF0b3JzLm1pbih0aGlzLmNEYXRhLm1pbiB8fCAwKV1cbiAgICApO1xuXG4gICAgdGhpcy5lbmQgPSBuZXcgRm9ybUNvbnRyb2woXG4gICAgICB7dmFsdWU6IHRoaXMuZW50cnlDb250cm9sLnZhbHVlLmVuZCB8fCAnJywgZGlzYWJsZWQ6IHRoaXMuY0RhdGEuY29udHJvbC5kaXNhYmxlZH0sXG4gICAgICBbVmFsaWRhdG9ycy5tYXgodGhpcy5jRGF0YS5tYXggfHwgRGF0ZS5ub3coKSAqIDIpXVxuICAgICk7XG4gIH1cblxuICBzYXZlKCkge1xuICAgIHJldHVybiBvZih7fSkucGlwZShcbiAgICAgIHRhcCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy5zdGFydC52YWx1ZTtcbiAgICAgICAgY29uc3QgZW5kID0gdGhpcy5lbmQudmFsdWU7XG4gICAgICAgIHRoaXMuY0RhdGEuY29udHJvbC5zZXRWYWx1ZSh7c3RhcnQsIGVuZH0pO1xuICAgICAgfSlcbiAgICApO1xuICB9XG59XG4iXX0=