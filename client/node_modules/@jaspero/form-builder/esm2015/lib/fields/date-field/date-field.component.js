import { DatePipe } from '@angular/common';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core';
import { FormControl, Validators } from '@angular/forms';
import { of } from 'rxjs';
import { tap } from 'rxjs/operators';
import { FieldComponent } from '../../field/field.component';
import { FormBuilderService } from '../../form-builder.service';
import { COMPONENT_DATA } from '../../utils/create-component-injector';
import { cloneAbstractControl } from '../../utils/clone-abstract-control';
export class DateFieldComponent extends FieldComponent {
    constructor(cData, cdr, formBuilderService) {
        super(cData);
        this.cData = cData;
        this.cdr = cdr;
        this.formBuilderService = formBuilderService;
    }
    ngOnInit() {
        this.formBuilderService.saveComponents.push(this);
        this.startDate = this.cData.startAt
            ? new Date(this.cData.startAt)
            : new Date();
        const date = new Date(this.cData.control.value);
        this.entryControl = cloneAbstractControl(this.cData.control);
        this.hoursControl = new FormControl({ value: date.getHours() || 0, disabled: this.cData.control.disabled }, [Validators.min(0), Validators.max(23)]);
        this.minutesControl = new FormControl({ value: date.getMinutes() || 0, disabled: this.cData.control.disabled }, [Validators.min(0), Validators.max(59)]);
        /**
         * Dirty hack for getting numbers to display properly might need revisiting
         */
        if (typeof this.entryControl.value === 'number' ||
            typeof this.entryControl.value === 'string') {
            this.entryControl.setValue(new Date(this.entryControl.value));
        }
    }
    save() {
        return of({}).pipe(tap(() => {
            let value = this.entryControl.value;
            if (value) {
                if (this.cData.includeTime) {
                    value.setHours(this.hoursControl.value || 0);
                    value.setMinutes(this.minutesControl.value || 0);
                }
                if (this.cData.format) {
                    if (this.cData.format === 'number') {
                        value = value.getTime();
                    }
                    else {
                        const pipe = new DatePipe('en');
                        value = pipe.transform(value, this.cData.format);
                    }
                }
            }
            this.cData.control.setValue(value);
        }));
    }
}
DateFieldComponent.decorators = [
    { type: Component, args: [{
                selector: 'fb-date-field',
                template: "<div class=\"grid\">\n  <div class=\"p-l-0 {{!cData.includeTime ? 'col-12' : 'col-8'}}\">\n    <mat-form-field class=\"w-full\" appearance=\"outline\">\n      <mat-label>\n        {{(cData.label || '') | transloco}}\n      </mat-label>\n      <input\n        matInput\n        [attr.autocomplete]=\"cData.autocomplete || 'off'\"\n        [matDatepicker]=\"picker\"\n        [placeholder]=\"(cData.placeholder || '') | transloco\"\n        [formControl]=\"entryControl\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker\n        #picker\n        [touchUi]=\"cData.touchUi || false\"\n        [startView]=\"cData.startView || 'month'\"\n        [startAt]=\"startDate\">\n      </mat-datepicker>\n      <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n    </mat-form-field>\n  </div>\n  <ng-container *ngIf=\"cData.includeTime\">\n    <div class=\"col-2\">\n      <mat-form-field class=\"w-full\" class=\"w-full\" appearance=\"outline\">\n        <mat-label>{{(cData.labelHours || 'HOURS') | transloco}}</mat-label>\n        <input matInput type=\"number\" [placeholder]=\"cData.placeholderHours || 'HH'\" [formControl]=\"hoursControl\">\n      </mat-form-field>\n    </div>\n    <div class=\"col-2 p-r-0\">\n      <mat-form-field class=\"w-full\" appearance=\"outline\">\n        <mat-label>{{(cData.labelMinutes || 'MINUTES') | transloco}}</mat-label>\n        <input matInput type=\"number\" [placeholder]=\"cData.placeholderMinutes || 'MM'\" [formControl]=\"minutesControl\">\n      </mat-form-field>\n    </div>\n  </ng-container>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            },] }
];
DateFieldComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [COMPONENT_DATA,] }] },
    { type: ChangeDetectorRef },
    { type: FormBuilderService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1maWVsZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9mb3JtLWJ1aWxkZXIvc3JjL2xpYi9maWVsZHMvZGF0ZS1maWVsZC9kYXRlLWZpZWxkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDekMsT0FBTyxFQUFDLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQVMsTUFBTSxlQUFlLENBQUM7QUFDcEcsT0FBTyxFQUFDLFdBQVcsRUFBYSxVQUFVLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQ3hCLE9BQU8sRUFBQyxHQUFHLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNuQyxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sNkJBQTZCLENBQUM7QUFDM0QsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFFOUQsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLHVDQUF1QyxDQUFDO0FBQ3JFLE9BQU8sRUFBQyxvQkFBb0IsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBc0J4RSxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsY0FBd0I7SUFFOUQsWUFDaUMsS0FBZSxFQUN0QyxHQUFzQixFQUN0QixrQkFBc0M7UUFFOUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBSmtCLFVBQUssR0FBTCxLQUFLLENBQVU7UUFDdEMsUUFBRyxHQUFILEdBQUcsQ0FBbUI7UUFDdEIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtJQUdoRCxDQUFDO0lBUUQsUUFBUTtRQUNOLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FB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QyxNQUFNOzthQUNoRDs7OzRDQUlJLE1BQU0sU0FBQyxjQUFjO1lBakNPLGlCQUFpQjtZQUsxQyxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RhdGVQaXBlfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgSW5qZWN0LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGb3JtQ29udHJvbCwgRm9ybUdyb3VwLCBWYWxpZGF0b3JzfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge29mfSBmcm9tICdyeGpzJztcbmltcG9ydCB7dGFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge0ZpZWxkQ29tcG9uZW50fSBmcm9tICcuLi8uLi9maWVsZC9maWVsZC5jb21wb25lbnQnO1xuaW1wb3J0IHtGb3JtQnVpbGRlclNlcnZpY2V9IGZyb20gJy4uLy4uL2Zvcm0tYnVpbGRlci5zZXJ2aWNlJztcbmltcG9ydCB7RmllbGREYXRhfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzL2ZpZWxkLWRhdGEuaW50ZXJmYWNlJztcbmltcG9ydCB7Q09NUE9ORU5UX0RBVEF9IGZyb20gJy4uLy4uL3V0aWxzL2NyZWF0ZS1jb21wb25lbnQtaW5qZWN0b3InO1xuaW1wb3J0IHtjbG9uZUFic3RyYWN0Q29udHJvbH0gZnJvbSAnLi4vLi4vdXRpbHMvY2xvbmUtYWJzdHJhY3QtY29udHJvbCc7XG5cbmludGVyZmFjZSBEYXRlRGF0YSBleHRlbmRzIEZpZWxkRGF0YSB7XG4gIHN0YXJ0WWVhcj86IG51bWJlcjtcbiAgc3RhcnRBdD86IG51bWJlcjtcbiAgdG91Y2hVaT86IGJvb2xlYW47XG4gIHN0YXJ0Vmlldz86ICdtb250aCcgfCAneWVhcicgfCAnbXVsdGkteWVhcic7XG4gIGZvcm1hdD86ICdudW1iZXInIHwgc3RyaW5nO1xuICBhdXRvY29tcGxldGU/OiBzdHJpbmc7XG4gIGluY2x1ZGVUaW1lPzogYm9vbGVhbjtcbiAgbGFiZWxIb3Vycz86IHN0cmluZztcbiAgbGFiZWxNaW51dGVzPzogc3RyaW5nO1xuICBwbGFjZWhvbGRlckhvdXJzPzogc3RyaW5nO1xuICBwbGFjZWhvbGRlck1pbnV0ZXM/OiBzdHJpbmc7XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2ZiLWRhdGUtZmllbGQnLFxuICB0ZW1wbGF0ZVVybDogJy4vZGF0ZS1maWVsZC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2RhdGUtZmllbGQuY29tcG9uZW50LnNjc3MnXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgRGF0ZUZpZWxkQ29tcG9uZW50IGV4dGVuZHMgRmllbGRDb21wb25lbnQ8RGF0ZURhdGE+XG4gIGltcGxlbWVudHMgT25Jbml0IHtcbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChDT01QT05FTlRfREFUQSkgcHVibGljIGNEYXRhOiBEYXRlRGF0YSxcbiAgICBwcml2YXRlIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgcHJpdmF0ZSBmb3JtQnVpbGRlclNlcnZpY2U6IEZvcm1CdWlsZGVyU2VydmljZVxuICApIHtcbiAgICBzdXBlcihjRGF0YSk7XG4gIH1cblxuICBmb3JtOiBGb3JtR3JvdXA7XG4gIHN0YXJ0RGF0ZTogRGF0ZTtcbiAgZW50cnlDb250cm9sOiBGb3JtQ29udHJvbDtcbiAgaG91cnNDb250cm9sOiBGb3JtQ29udHJvbDtcbiAgbWludXRlc0NvbnRyb2w6IEZvcm1Db250cm9sO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuZm9ybUJ1aWxkZXJTZXJ2aWNlLnNhdmVDb21wb25lbnRzLnB1c2godGhpcyk7XG4gICAgdGhpcy5zdGFydERhdGUgPSB0aGlzLmNEYXRhLnN0YXJ0QXRcbiAgICAgID8gbmV3IERhdGUodGhpcy5jRGF0YS5zdGFydEF0KVxuICAgICAgOiBuZXcgRGF0ZSgpO1xuXG4gICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHRoaXMuY0RhdGEuY29udHJvbC52YWx1ZSk7XG5cbiAgICB0aGlzLmVudHJ5Q29udHJvbCA9IGNsb25lQWJzdHJhY3RDb250cm9sKHRoaXMuY0RhdGEuY29udHJvbCk7XG4gICAgdGhpcy5ob3Vyc0NvbnRyb2wgPSBuZXcgRm9ybUNvbnRyb2woXG4gICAgICB7dmFsdWU6IGRhdGUuZ2V0SG91cnMoKSB8fCAwLCBkaXNhYmxlZDogdGhpcy5jRGF0YS5jb250cm9sLmRpc2FibGVkfSxcbiAgICAgIFtWYWxpZGF0b3JzLm1pbigwKSwgVmFsaWRhdG9ycy5tYXgoMjMpXVxuICAgICk7XG4gICAgdGhpcy5taW51dGVzQ29udHJvbCA9IG5ldyBGb3JtQ29udHJvbChcbiAgICAgIHt2YWx1ZTogZGF0ZS5nZXRNaW51dGVzKCkgfHwgMCwgZGlzYWJsZWQ6IHRoaXMuY0RhdGEuY29udHJvbC5kaXNhYmxlZH0sXG4gICAgICBbVmFsaWRhdG9ycy5taW4oMCksIFZhbGlkYXRvcnMubWF4KDU5KV1cbiAgICApO1xuXG4gICAgLyoqXG4gICAgICogRGlydHkgaGFjayBmb3IgZ2V0dGluZyBudW1iZXJzIHRvIGRpc3BsYXkgcHJvcGVybHkgbWlnaHQgbmVlZCByZXZpc2l0aW5nXG4gICAgICovXG4gICAgaWYgKFxuICAgICAgdHlwZW9mIHRoaXMuZW50cnlDb250cm9sLnZhbHVlID09PSAnbnVtYmVyJyB8fFxuICAgICAgdHlwZW9mIHRoaXMuZW50cnlDb250cm9sLnZhbHVlID09PSAnc3RyaW5nJ1xuICAgICkge1xuICAgICAgdGhpcy5lbnRyeUNvbnRyb2wuc2V0VmFsdWUobmV3IERhdGUodGhpcy5lbnRyeUNvbnRyb2wudmFsdWUpKTtcbiAgICB9XG4gIH1cblxuICBzYXZlKCkge1xuICAgIHJldHVybiBvZih7fSkucGlwZShcbiAgICAgIHRhcCgoKSA9PiB7XG4gICAgICAgIGxldCB2YWx1ZSA9IHRoaXMuZW50cnlDb250cm9sLnZhbHVlO1xuXG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgIGlmICh0aGlzLmNEYXRhLmluY2x1ZGVUaW1lKSB7XG4gICAgICAgICAgICB2YWx1ZS5zZXRIb3Vycyh0aGlzLmhvdXJzQ29udHJvbC52YWx1ZSB8fCAwKTtcbiAgICAgICAgICAgIHZhbHVlLnNldE1pbnV0ZXModGhpcy5taW51dGVzQ29udHJvbC52YWx1ZSB8fCAwKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodGhpcy5jRGF0YS5mb3JtYXQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNEYXRhLmZvcm1hdCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS5nZXRUaW1lKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBjb25zdCBwaXBlID0gbmV3IERhdGVQaXBlKCdlbicpO1xuXG4gICAgICAgICAgICAgIHZhbHVlID0gcGlwZS50cmFuc2Zvcm0odmFsdWUsIHRoaXMuY0RhdGEuZm9ybWF0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNEYXRhLmNvbnRyb2wuc2V0VmFsdWUodmFsdWUpO1xuICAgICAgfSlcbiAgICApO1xuICB9XG59XG4iXX0=