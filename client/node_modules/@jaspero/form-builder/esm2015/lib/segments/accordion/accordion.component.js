import { ChangeDetectionStrategy, Component } from '@angular/core';
import { SegmentComponent } from '../../segment/segment.component';
import { filterAndCompileSegments } from '../../utils/filter-and-compile-segments';
export class AccordionComponent extends SegmentComponent {
    ngOnInit() {
        super.ngOnInit();
        this.accordions = (this.sData.segment.configuration || []).map((accord) => ({
            title: accord.title,
            fields: (accord.fields || []).map(key => this.sData.parser.field(key, this.pointers[key], this.sData.definitions)),
            nestedSegments: filterAndCompileSegments(accord.nestedSegments || [], this.sData.parser, this.sData.definitions, this.injector, this.segment.entryValue)
        }));
    }
}
AccordionComponent.decorators = [
    { type: Component, args: [{
                selector: 'fb-accordion',
                template: "<ng-container *ngIf=\"segment.title || segment.subTitle\">\n  <h4 *ngIf=\"segment.title\">{{segment.title}}</h4>\n  <h5 *ngIf=\"segment.subTitle\">{{segment.subTitle}}</h5>\n  <div class=\"p-y-m\">\n    <mat-divider></mat-divider>\n  </div>\n</ng-container>\n\n<p *ngIf=\"segment.description\">{{segment.description}}</p>\n\n<mat-accordion>\n  <mat-expansion-panel *ngFor=\"let accord of accordions\" [expanded]=\"accord.expanded || false\">\n    <mat-expansion-panel-header>\n      <mat-panel-title *ngIf=\"accord.title\">{{accord.title}}</mat-panel-title>\n      <mat-panel-description *ngIf=\"accord.description\">\n        {{accord.description}}\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n\n    <ng-container *ngFor=\"let field of accord.fields | showField:sData.parser\">\n      <ng-template [cdkPortalOutlet]=\"field.portal\"></ng-template>\n    </ng-container>\n\n    <ng-container *ngFor=\"let nested of accord.nestedSegments\">\n      <ng-template [cdkPortalOutlet]=\"nested.component\"></ng-template>\n    </ng-container>\n  </mat-expansion-panel>\n</mat-accordion>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Zvcm0tYnVpbGRlci9zcmMvbGliL3NlZ21lbnRzL2FjY29yZGlvbi9hY2NvcmRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyx1QkFBdUIsRUFBRSxTQUFTLEVBQVMsTUFBTSxlQUFlLENBQUM7QUFJekUsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0saUNBQWlDLENBQUM7QUFDakUsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0seUNBQXlDLENBQUM7QUF3QmpGLE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxnQkFBZ0I7SUFJdEQsUUFBUTtRQUNOLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVqQixJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsYUFBYSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FDNUQsQ0FBQyxNQUFxQixFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQzFCLEtBQUssRUFBRSxNQUFNLENBQUMsS0FBSztZQUNuQixNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUN0QyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQ3JCLEdBQUcsRUFDSCxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUNsQixJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FDdkIsQ0FDRjtZQUNELGNBQWMsRUFBRSx3QkFBd0IsQ0FDdEMsTUFBTSxDQUFDLGNBQWMsSUFBSSxFQUFFLEVBQzNCLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUNqQixJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFDdEIsSUFBSSxDQUFDLFFBQVEsRUFDYixJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FDeEI7U0FDRixDQUFDLENBQ0gsQ0FBQztJQUNKLENBQUM7OztZQWhDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGNBQWM7Z0JBQ3hCLDBsQ0FBeUM7Z0JBRXpDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOzthQUNoRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q29tcGlsZWRGaWVsZH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9jb21waWxlZC1maWVsZC5pbnRlcmZhY2UnO1xuaW1wb3J0IHtDb21waWxlZFNlZ21lbnR9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvY29tcGlsZWQtc2VnbWVudC5pbnRlcmZhY2UnO1xuaW1wb3J0IHtTZWdtZW50fSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzL3NlZ21lbnQuaW50ZXJmYWNlJztcbmltcG9ydCB7U2VnbWVudENvbXBvbmVudH0gZnJvbSAnLi4vLi4vc2VnbWVudC9zZWdtZW50LmNvbXBvbmVudCc7XG5pbXBvcnQge2ZpbHRlckFuZENvbXBpbGVTZWdtZW50c30gZnJvbSAnLi4vLi4vdXRpbHMvZmlsdGVyLWFuZC1jb21waWxlLXNlZ21lbnRzJztcblxuaW50ZXJmYWNlIFNlZ21lbnRBY2NvcmQge1xuICB0aXRsZT86IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIGZpZWxkcz86IHN0cmluZ1tdO1xuICBuZXN0ZWRTZWdtZW50cz86IFNlZ21lbnRbXTtcbiAgZXhwYW5kZWQ/OiBib29sZWFuO1xufVxuXG5pbnRlcmZhY2UgQ29tcGlsZWRTZWdtZW50QWNjb3JkIHtcbiAgdGl0bGU/OiBzdHJpbmc7XG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICBmaWVsZHM/OiBDb21waWxlZEZpZWxkW107XG4gIG5lc3RlZFNlZ21lbnRzPzogQ29tcGlsZWRTZWdtZW50W107XG4gIGV4cGFuZGVkPzogYm9vbGVhbjtcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZmItYWNjb3JkaW9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FjY29yZGlvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2FjY29yZGlvbi5jb21wb25lbnQuc2NzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBBY2NvcmRpb25Db21wb25lbnQgZXh0ZW5kcyBTZWdtZW50Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBhY2NvcmRpb25zOiBDb21waWxlZFNlZ21lbnRBY2NvcmRbXTtcblxuICBuZ09uSW5pdCgpIHtcbiAgICBzdXBlci5uZ09uSW5pdCgpO1xuXG4gICAgdGhpcy5hY2NvcmRpb25zID0gKHRoaXMuc0RhdGEuc2VnbWVudC5jb25maWd1cmF0aW9uIHx8IFtdKS5tYXAoXG4gICAgICAoYWNjb3JkOiBTZWdtZW50QWNjb3JkKSA9PiAoe1xuICAgICAgICB0aXRsZTogYWNjb3JkLnRpdGxlLFxuICAgICAgICBmaWVsZHM6IChhY2NvcmQuZmllbGRzIHx8IFtdKS5tYXAoa2V5ID0+XG4gICAgICAgICAgdGhpcy5zRGF0YS5wYXJzZXIuZmllbGQoXG4gICAgICAgICAgICBrZXksXG4gICAgICAgICAgICB0aGlzLnBvaW50ZXJzW2tleV0sXG4gICAgICAgICAgICB0aGlzLnNEYXRhLmRlZmluaXRpb25zXG4gICAgICAgICAgKVxuICAgICAgICApLFxuICAgICAgICBuZXN0ZWRTZWdtZW50czogZmlsdGVyQW5kQ29tcGlsZVNlZ21lbnRzKFxuICAgICAgICAgIGFjY29yZC5uZXN0ZWRTZWdtZW50cyB8fCBbXSxcbiAgICAgICAgICB0aGlzLnNEYXRhLnBhcnNlcixcbiAgICAgICAgICB0aGlzLnNEYXRhLmRlZmluaXRpb25zLFxuICAgICAgICAgIHRoaXMuaW5qZWN0b3IsXG4gICAgICAgICAgdGhpcy5zZWdtZW50LmVudHJ5VmFsdWVcbiAgICAgICAgKVxuICAgICAgfSlcbiAgICApO1xuICB9XG59XG4iXX0=