{"__symbolic":"module","version":4,"metadata":{"FormBuilderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":26,"character":1},"arguments":[{"selector":"fb-form-builder","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":29,"character":19},"member":"OnPush"},"providers":[{"__symbolic":"reference","name":"FormBuilderService"}],"template":"<div class=\"grid\">\n  <ng-container *ngFor=\"let segment of segments\">\n    <ng-template [cdkPortalOutlet]=\"segment.component\"></ng-template>\n  </ng-container>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":35,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":36,"character":5},"arguments":[{"__symbolic":"reference","name":"ROLE"}]}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":38,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":39,"character":5},"arguments":[{"__symbolic":"reference","name":"CUSTOM_FIELDS"}]}],null,null],"parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":34,"character":22},{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"CustomFields"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":41,"character":17},{"__symbolic":"reference","name":"FormBuilderService"}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":3}}]}],"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":48,"character":3}}]}],"id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":3}}]}],"valueChanges":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":54,"character":3}}]}],"validityChanges":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":57,"character":3}}]}],"state":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":3}}]}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"process":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"saveAndProcess":[{"__symbolic":"method"}],"render":[{"__symbolic":"method"}]}},"FormBuilderModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":54,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"FieldComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵy"},{"__symbolic":"reference","name":"FormBuilderComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":103,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":104,"character":4},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":109,"character":4},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":110,"character":4},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":111,"character":4},{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteModule","line":112,"character":4},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":113,"character":4},{"__symbolic":"reference","module":"@angular/material/slider","name":"MatSliderModule","line":114,"character":4},{"__symbolic":"reference","module":"@angular/material/slide-toggle","name":"MatSlideToggleModule","line":115,"character":4},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":116,"character":4},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":117,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":118,"character":4},{"__symbolic":"reference","module":"@angular/material/datepicker","name":"MatDatepickerModule","line":119,"character":4},{"__symbolic":"reference","module":"@angular/material/core","name":"MatNativeDateModule","line":120,"character":4},{"__symbolic":"reference","module":"@angular/cdk/drag-drop","name":"DragDropModule","line":121,"character":4},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":122,"character":4},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":123,"character":4},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":124,"character":4},{"__symbolic":"reference","module":"@angular/material/expansion","name":"MatExpansionModule","line":125,"character":4},{"__symbolic":"reference","module":"@angular/material/divider","name":"MatDividerModule","line":126,"character":4},{"__symbolic":"reference","module":"@angular/cdk/portal","name":"PortalModule","line":127,"character":4},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":128,"character":4},{"__symbolic":"reference","module":"@angular/material/tabs","name":"MatTabsModule","line":129,"character":4},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":130,"character":4},{"__symbolic":"reference","module":"@jaspero/ng-helpers","name":"SanitizeModule","line":135,"character":4},{"__symbolic":"reference","module":"@ngneat/transloco","name":"TranslocoModule","line":140,"character":4}],"exports":[{"__symbolic":"reference","name":"FormBuilderComponent"}]}]}],"members":{}},"FormBuilderService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ngneat/transloco","name":"TranslocoService","line":9,"character":23},{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBar","line":10,"character":22}]}],"notify":[{"__symbolic":"method"}]}},"FieldComponent":{"__symbolic":"class","arity":1,"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"fb-field","template":""}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":11,"character":5},"arguments":[{"__symbolic":"reference","name":"COMPONENT_DATA"}]}]],"parameters":[{"__symbolic":"error","message":"Could not resolve type","line":11,"character":42,"context":{"typeName":"T"},"module":"./lib/field/field.component"}]}],"class":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":33,"character":3},"arguments":["class"]}]}]}},"DbService":{"__symbolic":"class","members":{"getDocuments":[{"__symbolic":"method"}],"getDocumentsSimple":[{"__symbolic":"method"}],"getStateChanges":[{"__symbolic":"method"}],"getDocument":[{"__symbolic":"method"}],"setDocument":[{"__symbolic":"method"}],"removeDocument":[{"__symbolic":"method"}],"createUserAccount":[{"__symbolic":"method"}],"removeUserAccount":[{"__symbolic":"method"}]}},"StorageService":{"__symbolic":"class","members":{"upload":[{"__symbolic":"method"}]}},"PropertyDefinition":{"__symbolic":"interface"},"StringPropertyDefinition":{"__symbolic":"interface"},"NumberPropertyDefinition":{"__symbolic":"interface"},"BooleanPropertyDefinition":{"__symbolic":"interface"},"ArrayPropertyDefinition":{"__symbolic":"interface"},"Pointer":{"__symbolic":"interface"},"Pointers":{"__symbolic":"interface"},"Parser":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":82,"character":21},{"__symbolic":"reference","name":"State"},{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"Definitions"},{"__symbolic":"reference","name":"CustomFields"}]}],"buildForm":[{"__symbolic":"method"}],"buildProperties":[{"__symbolic":"method"}],"field":[{"__symbolic":"method"}],"addArrayItem":[{"__symbolic":"method"}],"moveArrayItem":[{"__symbolic":"method"}],"removeArrayItem":[{"__symbolic":"method"}],"loadHooks":[{"__symbolic":"method"}],"preSaveHooks":[{"__symbolic":"method"}],"getFromDefinitions":[{"__symbolic":"method"}],"buildArray":[{"__symbolic":"method"}]}},"parseTemplate":{"__symbolic":"function"},"safeEval":{"__symbolic":"function"},"formatGeneratedImages":{"__symbolic":"function","parameters":["data"],"value":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"data"},"member":"reduce"},"arguments":[{"__symbolic":"error","message":"Lambda not supported","line":3,"character":21,"module":"./lib/utils/format-generated-images"},{}]}},"formatFileName":{"__symbolic":"error","message":"Lambda not supported","line":9,"character":30,"module":"./lib/utils/format-file-name"},"cloneAbstractControl":{"__symbolic":"function"},"switchItemLocations":{"__symbolic":"function"},"Definition":{"__symbolic":"interface"},"Definitions":{"__symbolic":"interface"},"Option":{"__symbolic":"interface"},"Segment":{"__symbolic":"interface"},"FieldData":{"__symbolic":"interface"},"FormBuilderData":{"__symbolic":"interface"},"ComponentType":{"Input":"input","Select":"select","File":"file","Image":"image","Gallery":"gallery","Toggle":"toggle","Checkbox":"checkbox","Date":"date","Range":"range","Radio":"radio","Slider":"slider","Autocomplete":"autocomplete","Wysiwyg":"wysiwyg","Chips":"chips","Draggable":"draggable","Textarea":"textarea"},"SchemaType":{"Object":"object","Array":"array","String":"string","Number":"number","Integer":"integer","Boolean":"boolean","Null":"null"},"SegmentType":{"Empty":"empty","Card":"card","Accordion":"accordion","Tabs":"tabs","Stepper":"stepper"},"State":{"Create":"create","Edit":"edit"},"ROLE":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":2,"character":24},"arguments":["ROLE"]},"ADDITIONAL_CONTEXT":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":2,"character":38},"arguments":["ADDITIONAL_CONTEXT"]},"STORAGE_URL":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":2,"character":31},"arguments":["STORAGE_URL"]},"CustomFields":{"__symbolic":"interface"},"CUSTOM_FIELDS":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":6,"character":33},"arguments":["CUSTOM_FIELDS"]},"COMPONENT_DATA":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":3,"character":34},"arguments":["COMPONENT_DATA"]},"ɵa":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":29,"character":1},"arguments":[{"selector":"fb-autocomplete","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":33,"character":19},"member":"OnPush"},"template":"<mat-form-field appearance=\"outline\" class=\"w-full\">\n  <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n  <input\n    matInput\n    [placeholder]=\"(cData.placeholder || '') | transloco\"\n    [attr.autocomplete]=\"cData.autocomplete || 'on'\"\n    [formControl]=\"cData.control\"\n    [matAutocomplete]=\"auto\">\n  <mat-autocomplete #auto=\"matAutocomplete\">\n    <mat-option *ngFor=\"let data of filteredSet$ | async\" [value]=\"data.value\">\n      {{data.name}}\n    </mat-option>\n  </mat-autocomplete>\n  <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n  <span *ngIf=\"cData.suffix\" matSuffix [innerHTML]=\"((suffix$ | async) || '') | jpSanitize\"></span>\n  <span *ngIf=\"cData.prefix\" matPrefix [innerHTML]=\"((prefix$ | async) || '') | jpSanitize\"></span>\n</mat-form-field>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":38,"character":5},"arguments":[{"__symbolic":"reference","name":"COMPONENT_DATA"}]}],null],"parameters":[{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","name":"DbService"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"fb-checkbox","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":8,"character":19},"member":"OnPush"},"template":"<div class=\"mat-form-field-wrapper\">\n  <mat-checkbox [formControl]=\"cData.control\">\n    <mat-label>{{cData.label | transloco}}</mat-label>\n  </mat-checkbox>\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.hint\">\n    {{cData.hint | transloco}}\n  </p>\n</div>\n","styles":[""]}]}],"members":{}},"ɵc":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":17,"character":1},"arguments":[{"selector":"fb-chips","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":21,"character":19},"member":"OnPush"},"template":"<mat-form-field class=\"w-full\" appearance=\"outline\">\n  <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n  <mat-chip-list #chipList>\n    <mat-chip\n      *ngFor=\"let chip of data\"\n      [selectable]=\"cData.selectable\"\n      [removable]=\"removable\"\n      (removed)=\"remove(chip)\">\n      {{chip}}\n      <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n    </mat-chip>\n    <input\n      matInput\n      [attr.autocomplete]=\"cData.autocomplete || 'on'\"\n      [placeholder]=\"(cData.placeholder || '') | transloco\"\n      (matChipInputTokenEnd)=\"add($event)\"\n      [matChipInputFor]=\"chipList\">\n  </mat-chip-list>\n  <span *ngIf=\"cData.suffix\" matSuffix [innerHTML]=\"((suffix$ | async) || '') | jpSanitize\"></span>\n  <span *ngIf=\"cData.prefix\" matPrefix [innerHTML]=\"((prefix$ | async) || '') | jpSanitize\"></span>\n  <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n</mat-form-field>\n","styles":[""]}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"remove":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"fb-date-field","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":29,"character":19},"member":"OnPush"},"template":"<div class=\"grid\">\n  <div class=\"p-l-0 {{!cData.includeTime ? 'col-12' : 'col-8'}}\">\n    <mat-form-field class=\"w-full\" appearance=\"outline\">\n      <mat-label>\n        {{(cData.label || '') | transloco}}\n      </mat-label>\n      <input\n        matInput\n        [attr.autocomplete]=\"cData.autocomplete || 'off'\"\n        [matDatepicker]=\"picker\"\n        [placeholder]=\"(cData.placeholder || '') | transloco\"\n        [formControl]=\"entryControl\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker\n        #picker\n        [touchUi]=\"cData.touchUi || false\"\n        [startView]=\"cData.startView || 'month'\"\n        [startAt]=\"startDate\">\n      </mat-datepicker>\n      <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n    </mat-form-field>\n  </div>\n  <ng-container *ngIf=\"cData.includeTime\">\n    <div class=\"col-2\">\n      <mat-form-field class=\"w-full\" class=\"w-full\" appearance=\"outline\">\n        <mat-label>{{(cData.labelHours || 'HOURS') | transloco}}</mat-label>\n        <input matInput type=\"number\" [placeholder]=\"cData.placeholderHours || 'HH'\" [formControl]=\"hoursControl\">\n      </mat-form-field>\n    </div>\n    <div class=\"col-2 p-r-0\">\n      <mat-form-field class=\"w-full\" appearance=\"outline\">\n        <mat-label>{{(cData.labelMinutes || 'MINUTES') | transloco}}</mat-label>\n        <input matInput type=\"number\" [placeholder]=\"cData.placeholderMinutes || 'MM'\" [formControl]=\"minutesControl\">\n      </mat-form-field>\n    </div>\n  </ng-container>\n</div>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":34,"character":5},"arguments":[{"__symbolic":"reference","name":"COMPONENT_DATA"}]}],null,null],"parameters":[{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":35,"character":17},{"__symbolic":"reference","name":"FormBuilderService"}]}],"ngOnInit":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":15,"character":1},"arguments":[{"selector":"fb-range","template":"<div class=\"mat-form-field-wrapper\">\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{(cData.label || '') | transloco}}</p>\n\n  <mat-form-field appearance=\"outline\" class=\"w-full\">\n    <mat-label>Enter a date range</mat-label>\n    <mat-date-range-input [rangePicker]=\"picker\">\n      <input matStartDate placeholder=\"Start date\" [formControl]=\"start\" [min]=\"min\">\n      <input matEndDate placeholder=\"End date\" [formControl]=\"end\" [max]=\"max\">\n    </mat-date-range-input>\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-date-range-picker #picker></mat-date-range-picker>\n  </mat-form-field>\n\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.hint\">\n    {{(cData.hint | transloco) | transloco}}\n  </p>\n</div>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":29,"character":5},"arguments":[{"__symbolic":"reference","name":"COMPONENT_DATA"}]}],null,null],"parameters":[{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":30,"character":17},{"__symbolic":"reference","name":"FormBuilderService"}]}],"ngOnInit":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"fb-draggable-list","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":14,"character":19},"member":"OnPush"},"template":"<div class=\"mat-form-field-wrapper\">\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{cData.label | transloco}}</p>\n\n  <div\n    class=\"fb-draggable-list\"\n    cdkDropList\n    (cdkDropListDropped)=\"drop($event)\">\n    <div\n      class=\"fb-draggable-list-item\"\n      *ngFor=\"let item of cData.options; index as index\"\n      [cdkDragDisabled]=\"item.disabled\"\n      cdkDrag>\n      {{index + 1}}. {{item.name}}\n    </div>\n  </div>\n</div>\n","styles":[".fb-draggable-list{border:1px solid var(--panel-tertiary);border-radius:4px;overflow:hidden}.fb-draggable-list-item{align-items:center;background:var(--panel-theme);border-bottom:1px solid var(--panel-tertiary);cursor:move;display:flex;padding:20px 10px}.fb-draggable-list-item:last-child{border:none}.cdk-drag-preview{border-radius:4px;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating,.fb-draggable-list.cdk-drop-list-dragging .fb-draggable-list-item:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}"]}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"drop":[{"__symbolic":"method"}]}},"ɵg":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"fb-file","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":26,"character":19},"member":"OnPush"},"template":"<div class=\"mat-form-field-wrapper\">\n  <fieldset class=\"fb-file\">\n    <input #file type=\"file\" hidden (change)=\"fileChange($event)\">\n\n    <legend class=\"fb-file-legend\">{{(cData.label || '') | transloco}}</legend>\n\n    <div class=\"fb-file-field\">\n      <span class=\"fb-file-field-name\">{{name || (emptyLabel | transloco)}}</span>\n\n      <div class=\"fb-file-field-actions\">\n        <ng-container *ngIf=\"!cData.preventClear && name\">\n          <button mat-button (click)=\"clear()\">{{'REMOVE' | transloco}}</button>|\n        </ng-container>\n        <button mat-button (click)=\"file.click()\">{{'ADD' | transloco}}</button>\n      </div>\n    </div>\n  </fieldset>\n</div>\n","styles":[".fb-file{border:1px solid var(--panel-tertiary);border-radius:4px;overflow:hidden;transition:.2s}.fb-file:hover{border:1px solid var(--panel-primary);box-shadow:0 0 0 1px var(--panel-primary)}.fb-file:focus-within{border:1px solid var(--primary-theme);box-shadow:0 0 0 1px var(--primary-theme)}.fb-file-legend{background:var(--panel-theme);color:var(--panel-secondary);font-size:.8em;margin-left:-8px;padding:0 4px}.fb-file-field{align-items:center;display:flex}.fb-file-field-name{color:var(--panel-secondary);flex:1;min-width:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:1px}.fb-file-field-actions{margin-left:auto;white-space:nowrap}"]}]}],"members":{"fileEl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":29,"character":3},"arguments":["file",{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":41,"character":5},"arguments":[{"__symbolic":"reference","name":"COMPONENT_DATA"}]}],null,null,null,null,null],"parameters":[{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","name":"StorageService"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":43,"character":17},{"__symbolic":"reference","name":"FormBuilderService"},{"__symbolic":"reference","module":"@ngneat/transloco","name":"TranslocoService","line":45,"character":23},{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBar","line":46,"character":22}]}],"ngOnInit":[{"__symbolic":"method"}],"errorSnack":[{"__symbolic":"method"}],"fileChange":[{"__symbolic":"method"}],"clear":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}]}},"ɵh":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":43,"character":1},"arguments":[{"selector":"fb-gallery","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":47,"character":19},"member":"OnPush"},"template":"<p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{(cData.label || '') | transloco}}</p>\n\n<div class=\"fb-gallery\" fbDropzone (dropped)=\"filesUploaded($event)\">\n  <div class=\"ta-center p-y-l\">\n    <button mat-button *ngIf=\"cData.allowUrl\" (click)=\"openUploadDialog()\">{{'FIELDS.GALLERY.ENTER_URL' | transloco}}</button>\n    <button mat-button *ngIf=\"cData.allowServerUpload\" (click)=\"openFileUpload()\">{{'FIELDS.GALLERY.CHOOSE_FILES' | transloco}}</button>\n    <button mat-button *ngIf=\"cData.allowServerUpload\" (click)=\"openSortImages()\">{{'FIELDS.GALLERY.SORT_IMAGES' | transloco}}</button>\n  </div>\n\n  <!--Upload from disk-->\n  <input #file type=\"file\" multiple hidden (change)=\"filesUploaded($event.target)\">\n\n  <!--Uploaded images list-->\n  <ng-container>\n    <div class=\"fb-gallery-list\" cdkDropListGroup>\n\n      <div class=\"fb-gallery-list-placeholder\" cdkDropList (cdkDropListDropped)=\"dropListDropped()\"></div>\n\n      <div\n        cdkDropList\n        class=\"fb-gallery-list-image\"\n        (cdkDropListDropped)=\"dropListDropped()\"\n        *ngFor=\"let val of cData.control.value; index as index\">\n\n        <div cdkDrag (cdkDragMoved)=\"dragMoved($event);\">\n          <img class=\"fb-gallery-list-image-inner\" [src]=\"(val.data || val) | jpSanitize:'resourceUrl'\">\n          <button class=\"fb-gallery-list-image-remove\" type=\"button\" mat-icon-button [matTooltip]=\"'GENERAL.REMOVE' | transloco\" (click)=\"removeImage(index, val)\">\n            <mat-icon>close</mat-icon>\n          </button>\n        </div>\n\n      </div>\n    </div>\n  </ng-container>\n</div>\n\n<!--Uplaod from URL-->\n<ng-template #modal>\n  <mat-dialog-content>\n    <mat-form-field class=\"w-full\" appearance=\"outline\">\n      <mat-label>{{'FIELDS.GALLERY.IMAGE_URL' | transloco}}</mat-label>\n      <input matInput #url>\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class=\"jc-end\">\n    <button mat-button mat-dialog-close>{{'GENERAL.CANCEL' | transloco}}</button>&nbsp;\n    <button mat-flat-button color=\"primary\" [disabled]=\"!url.value\" (click)=\"addImage(url.value)\" mat-dialog-close>{{'FIELDS.GALLERY.ADD_IMAGE' | transloco}}</button>\n  </mat-dialog-actions>\n</ng-template>\n\n<!--Image sort-->\n<ng-template #imagesSort>\n  <h1 mat-dialog-title>{{'FIELDS.GALLERY.SORT_IMAGES' | transloco}}</h1>\n\n  <mat-dialog-content>\n\n    <div\n      class=\"sort-wrapper\"\n      cdkDropList\n      (cdkDropListDropped)=\"sortDrop($event)\">\n\n      <div class=\"sort-box\" *ngFor=\"let val of cData.control.value; index as index; first as first; last as last;\" cdkDrag>\n        <img class=\"sort-image\" [src]=\"(val.data || val) | jpSanitize:'resourceUrl'\">\n        <div class=\"flex-1\"></div>\n        <div>\n          <button mat-icon-button [disabled]=\"first\" (click)=\"move(true, index)\">\n            <mat-icon>arrow_upward</mat-icon>\n          </button>\n          <button mat-icon-button [disabled]=\"last\" (click)=\"move(false, index)\">\n            <mat-icon>arrow_downward</mat-icon>\n          </button>\n          <button mat-icon-button cdkDragHandle>\n            <mat-icon>drag_indicator</mat-icon>\n          </button>\n        </div>\n      </div>\n\n    </div>\n  </mat-dialog-content>\n</ng-template>\n","styles":[".fb-gallery{border:1px dashed var(--tertiary);margin-bottom:1.25em;position:relative}.fb-gallery-list{cursor:-webkit-grab;cursor:grab;display:flex;flex-wrap:wrap}.fb-gallery-list-placeholder{border:2px dashed var(--tertiary)}.fb-gallery-list-image,.fb-gallery-list-placeholder{flex-basis:33.33333%;padding-bottom:33.33333%;position:relative;width:33.33333%}.fb-gallery-list-image{background:#eee;border:2px solid #fff}.fb-gallery-list-image-inner,.fb-gallery-list-image>div{height:100%;position:absolute;width:100%}.fb-gallery-list-image-inner{-o-object-fit:contain;left:0;object-fit:contain;top:0}.fb-gallery-list-image-remove{background:#fff;border:1px solid #222;line-height:24px;opacity:0;position:absolute;right:0;top:0;transition:.2s;visibility:hidden}.fb-gallery-list-image:hover .fb-gallery-list-image-remove{opacity:1;visibility:visible}.fb-gallery:before{bottom:0;content:\"Drop To Upload\";display:none;font-size:20px;left:0;margin:auto;position:absolute;right:0;text-align:center;top:0}.fb-gallery.active{background:#ccc;border:3px dashed var(--tertiary)}.fb-gallery.active:before{display:block}.sort-wrapper{background:#fff;border:1px solid #ccc;border-radius:4px;display:block;max-width:100%;min-height:60px;overflow:hidden}.sort-image{-o-object-fit:cover;height:40px;object-fit:cover;width:40px}.sort-box{align-items:center;background:#fff;border-bottom:1px solid #ccc;box-sizing:border-box;color:rgba(0,0,0,.87);display:flex;flex-direction:row;font-size:14px;justify-content:space-between;padding:20px 10px}.sort-box:last-child{border:none}.cdk-drag-preview{border-radius:4px;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);box-sizing:border-box}.cdk-drag-placeholder{opacity:.3}.cdk-drag-animating,.cdk-drop-list-dragging .sort-box:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":52,"character":5},"arguments":[{"__symbolic":"reference","name":"COMPONENT_DATA"}]}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":54,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":55,"character":5},"arguments":[{"__symbolic":"reference","name":"STORAGE_URL"}]}],null,null,null,null,null,null,null,null],"parameters":[{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":57,"character":20},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":58,"character":17},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":59,"character":18},{"__symbolic":"reference","name":"StorageService"},{"__symbolic":"reference","name":"FormBuilderService"},{"__symbolic":"reference","module":"@angular/cdk/overlay","name":"ViewportRuler","line":62,"character":27},{"__symbolic":"reference","module":"@ngneat/transloco","name":"TranslocoService","line":63,"character":23},{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBar","line":64,"character":22}]}],"listGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":69,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular/cdk/drag-drop","name":"CdkDropListGroup","line":69,"character":13},{"static":true}]}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":71,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular/cdk/drag-drop","name":"CdkDropList","line":71,"character":13},{"static":true}]}]}],"modalTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":73,"character":3},"arguments":["modal",{"static":true}]}]}],"imagesSort":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":75,"character":3},"arguments":["imagesSort",{"static":true}]}]}],"fileEl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":77,"character":3},"arguments":["file",{"static":true}]}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"openUploadDialog":[{"__symbolic":"method"}],"addImage":[{"__symbolic":"method"}],"openFileUpload":[{"__symbolic":"method"}],"openSortImages":[{"__symbolic":"method"}],"drop":[{"__symbolic":"method"}],"move":[{"__symbolic":"method"}],"errorSnack":[{"__symbolic":"method"}],"filesUploaded":[{"__symbolic":"method"}],"removeImage":[{"__symbolic":"method"}],"sortDrop":[{"__symbolic":"method"}],"dragMoved":[{"__symbolic":"method"}],"dropListDropped":[{"__symbolic":"method"}],"getPointerPositionOnPage":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}]}},"ɵi":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":26,"character":1},"arguments":[{"selector":"fb-image","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":30,"character":19},"member":"OnPush"},"template":"<mat-form-field appearance=\"outline\" class=\"w-full\">\n  <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n  <input\n    matInput\n    type=\"url\"\n    [placeholder]=\"(cData.placeholder || '') | transloco\"\n    [class.disabled]=\"disInput\"\n    [formControl]=\"imageUrl\">\n  <div matSuffix class=\"fb-image-suffix\">\n    <ng-container *ngIf=\"imageUrl.value\">\n      <div class=\"fb-image-suffix-preview\">\n        <button class=\"fb-image-suffix-preview-button\" mat-icon-button>\n          <mat-icon>visibility</mat-icon>\n        </button>\n        <img class=\"fb-image-suffix-preview-image\" [attr.src]=\"imageSrc || imageUrl.value || value\" [alt]=\"'FIELDS.IMAGE.PREVIEW' | transloco\">\n      </div>\n    </ng-container>\n    <button mat-icon-button *ngIf=\"!imageUrl.value && !cData.preventServerUpload\">\n      <mat-icon (click)=\"openFileUpload()\">perm_media</mat-icon>\n    </button>\n    <button mat-icon-button *ngIf=\"imageUrl.value\">\n      <mat-icon (click)=\"remove()\">highlight_off</mat-icon>\n    </button>\n  </div>\n  <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n</mat-form-field>\n\n<input #file type=\"file\" hidden (change)=\"filesImage($event)\">\n","styles":[".fb-image-suffix{display:flex}.fb-image-suffix-preview{display:inline-block;position:relative}.fb-image-suffix-preview-image{-o-object-fit:contain;background:#fff;box-shadow:0 2px 5px 0 rgba(0,0,0,.4);height:200px;max-width:unset;object-fit:contain;opacity:0;position:absolute;right:0;top:100%;transition:.2s;visibility:hidden;width:200px;z-index:2}.fb-image-suffix-preview-button:hover+.fb-image-suffix-preview-image{opacity:1;visibility:visible}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":35,"character":5},"arguments":[{"__symbolic":"reference","name":"COMPONENT_DATA"}]}],null,null,null,null,null,null],"parameters":[{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","name":"StorageService"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":37,"character":17},{"__symbolic":"reference","name":"FormBuilderService"},{"__symbolic":"reference","module":"@ngneat/transloco","name":"TranslocoService","line":39,"character":23},{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBar","line":40,"character":22},{"__symbolic":"reference","module":"@angular/platform-browser","name":"DomSanitizer","line":41,"character":26}]}],"fileEl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":46,"character":3},"arguments":["file",{"static":true}]}]}],"ngOnInit":[{"__symbolic":"method"}],"errorSnack":[{"__symbolic":"method"}],"openFileUpload":[{"__symbolic":"method"}],"filesImage":[{"__symbolic":"method"}],"remove":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"fb-input","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":17,"character":19},"member":"OnPush"},"template":"<!--TODO: Format this when fixed. For some reason if the type is passed through a variable angular doesn't properly parse-->\n<ng-container [ngSwitch]=\"cData.type\">\n  <mat-form-field *ngSwitchCase=\"'number'\" class=\"w-full\" appearance=\"outline\" [class.mat-form-field-has-hint]=\"cData.hint\">\n    <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n    <span *ngIf=\"cData.prefix\" matPrefix [innerHTML]=\"((prefix$ | async) || '') | jpSanitize\"></span>\n    <input\n      matInput\n      type=\"number\"\n      [attr.autocomplete]=\"cData.autocomplete || 'on'\"\n      [placeholder]=\"(cData.placeholder || '') | transloco\"\n      [formControl]=\"cData.control\">\n    <span *ngIf=\"cData.suffix\" matSuffix [innerHTML]=\"((suffix$ | async) || '') | jpSanitize\"></span>\n    <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n  </mat-form-field>\n\n  <mat-form-field *ngSwitchDefault class=\"w-full\" appearance=\"outline\" [class.mat-form-field-has-hint]=\"cData.hint\">\n    <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n    <span *ngIf=\"cData.prefix\" matPrefix [innerHTML]=\"((prefix$ | async) || '') | jpSanitize\"></span>\n    <input\n        matInput\n        [attr.autocomplete]=\"cData.autocomplete || 'on'\"\n        [attr.type]=\"cData.type\"\n        [placeholder]=\"(cData.placeholder || '') | transloco\"\n        [formControl]=\"cData.control\">\n    <span *ngIf=\"cData.suffix\" matSuffix [innerHTML]=\"((suffix$ | async) || '') | jpSanitize\"></span>\n    <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n  </mat-form-field>\n</ng-container>\n","styles":[""]}]}],"members":{"ngOnInit":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"fb-radio","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":13,"character":19},"member":"OnPush"},"template":"<div class=\"mat-form-field-wrapper\">\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{(cData.label || '') | transloco}}</p>\n  <mat-radio-group [formControl]=\"cData.control\">\n    <mat-radio-button\n      *ngFor=\"let option of cData.options\"\n      [disabled]=\"option.disabled\"\n      [value]=\"option.value\">\n      {{option.name}}\n    </mat-radio-button>\n  </mat-radio-group>\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.hint\">\n    {{(cData.hint | transloco) | transloco}}\n  </p>\n</div>\n","styles":[""]}]}],"members":{}},"ɵl":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":62,"character":1},"arguments":[{"selector":"fb-select","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":66,"character":19},"member":"OnPush"},"template":"<mat-form-field class=\"w-full\" appearance=\"outline\" [class.mat-form-field-has-hint]=\"cData.hint\">\n  <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n  <mat-select\n    [placeholder]=\"(cData.placeholder || '') | transloco\"\n    [formControl]=\"cData.control\"\n    [multiple]=\"cData.multiple\"\n    [attr.autocomplite]=\"cData.autocomplete || 'off'\">\n    <mat-option *ngFor=\"let data of dataSet$ | async\" [value]=\"data.value\" [disabled]=\"data.disabled\">\n      {{data.name}}\n    </mat-option>\n  </mat-select>\n  <mat-spinner\n    matSuffix\n    *ngIf=\"cData.populate && (loading$ | async)\"\n    [diameter]=\"20\"></mat-spinner>\n  <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n</mat-form-field>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":74,"character":5},"arguments":[{"__symbolic":"reference","name":"COMPONENT_DATA"}]}],null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":76,"character":5},"arguments":[{"__symbolic":"reference","name":"ROLE"}]}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":78,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":79,"character":5},"arguments":[{"__symbolic":"reference","name":"ADDITIONAL_CONTEXT"}]}]],"parameters":[{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","name":"DbService"},{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵm":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":15,"character":1},"arguments":[{"selector":"fb-slider","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":19,"character":19},"member":"OnPush"},"template":"<div class=\"mat-form-field-wrapper\">\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{(cData.label || '') | transloco}}</p>\n  <mat-slider\n    [formControl]=\"cData.control\"\n    [thumbLabel]=\"cData.thumbLabel\"\n    [tickInterval]=\"cData.tickInterval\"\n    [min]=\"startAt\"\n    [max]=\"endAt\">\n  </mat-slider>\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.hint\">\n    {{(cData.hint || '') | transloco}}\n  </p>\n</div>\n","styles":[""]}]}],"members":{"ngOnInit":[{"__symbolic":"method"}]}},"ɵn":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":14,"character":1},"arguments":[{"selector":"fb-textarea","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":18,"character":19},"member":"OnPush"},"template":"<mat-form-field class=\"w-full\" appearance=\"outline\">\n  <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n  <textarea\n    matInput\n    [placeholder]=\"(cData.placeholder || '') | transloco\"\n    [attr.autocomplete]=\"cData.autocomplete || 'on'\"\n    [rows]=\"cData.rows\"\n    [cols]=\"cData.cols\"\n    [formControl]=\"cData.control\">\n  </textarea>\n  <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n  <span *ngIf=\"cData.suffix\" matSuffix [innerHTML]=\"((suffix$ | async) || '') | jpSanitize\"></span>\n  <span *ngIf=\"cData.prefix\" matPrefix [innerHTML]=\"((prefix$ | async) || '') | jpSanitize\"></span>\n</mat-form-field>\n","styles":[""]}]}],"members":{"ngOnInit":[{"__symbolic":"method"}]}},"ɵo":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"fb-toggle","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":8,"character":19},"member":"OnPush"},"template":"<div class=\"mat-form-field-wrapper\">\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{(cData.label || '') | transloco}}</p>\n  <mat-slide-toggle [formControl]=\"cData.control\"></mat-slide-toggle>\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.hint\">\n    {{(cData.hint || '') | transloco}}\n  </p>\n</div>\n","styles":[""]}]}],"members":{}},"ɵp":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":38,"character":1},"arguments":[{"selector":"fb-wysiwyg","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":42,"character":19},"member":"OnPush"},"template":"<div class=\"mat-form-field-wrapper\">\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{(cData.label || '') | transloco}}</p>\n  <textarea #textarea role=\"textarea\">{{cData.control.value}}</textarea>\n</div>\n\n<ng-template #youTubeDialog>\n  <h1 mat-dialog-title>{{'FIELDS.WYSIWYG.EMBED_YOUTUBE' | transloco}}</h1>\n\n  <form [formGroup]=\"ytForm\">\n    <mat-dialog-content>\n      <mat-form-field class=\"w-full\">\n        <mat-label>{{'FIELDS.WYSIWYG.VIDEO_ID' | transloco}}</mat-label>\n        <input matInput formControlName=\"value\">\n      </mat-form-field>\n\n      <label class=\"mat-form-field-wrapper flex jc-between\">\n        <span>{{'FIELDS.WYSIWYG.FULL_WIDTH' | transloco}}</span>\n        <mat-slide-toggle formControlName=\"fullWidth\"></mat-slide-toggle>\n      </label>\n\n      <label class=\"mat-form-field-wrapper flex jc-between\">\n        <span>{{'FIELDS.WYSIWYG.SHOW_PLAYER_CONTROLS' | transloco}}</span>\n        <mat-slide-toggle formControlName=\"showPlayerControls\"></mat-slide-toggle>\n      </label>\n\n      <label class=\"mat-form-field-wrapper flex jc-between\">\n        <span>{{'FIELDS.WYSIWYG.PRIVACY_ENHANCED_MODE' | transloco}}</span>\n        <mat-slide-toggle formControlName=\"privacyEnhancedMode\"></mat-slide-toggle>\n      </label>\n\n      <mat-form-field class=\"w-full\">\n        <mat-label>{{'FIELDS.WYSIWYG.ALIGNMENT' | transloco}}</mat-label>\n        <mat-select formControlName=\"align\">\n          <mat-option value=\"left\">{{'FIELDS.WYSIWYG.LEFT' | transloco}}</mat-option>\n          <mat-option value=\"center\">{{'FIELDS.WYSIWYG.CENTER' | transloco}}</mat-option>\n          <mat-option value=\"right\">{{'FIELDS.WYSIWYG.RIGHT' | transloco}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </mat-dialog-content>\n\n    <mat-dialog-actions class=\"jc-end\">\n      <button mat-button mat-dialog-close>{{'GENERAL.CLOSE' | transloco}}</button>\n      <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"true\">{{'GENERAL.SAVE' | transloco}}</button>\n    </mat-dialog-actions>\n  </form>\n</ng-template>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":47,"character":5},"arguments":[{"__symbolic":"reference","name":"COMPONENT_DATA"}]}],null,null,null,null],"parameters":[{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":48,"character":16},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":49,"character":20},{"__symbolic":"reference","name":"StorageService"},{"__symbolic":"reference","name":"FormBuilderComponent"}]}],"textarea":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":56,"character":3},"arguments":["textarea",{"static":true}]}]}],"youTubeDialogTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":59,"character":3},"arguments":["youTubeDialog",{"static":true}]}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"registerTiny":[{"__symbolic":"method"}]}},"ɵq":{"__symbolic":"class","arity":1,"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"fb-segment","template":""}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":24,"character":5},"arguments":[{"__symbolic":"reference","name":"ɵr"}]}],null],"parameters":[{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":25,"character":21}]}],"classes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":34,"character":3},"arguments":["class"]}]}],"id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":37,"character":3},"arguments":["id"]}]}],"ngOnInit":[{"__symbolic":"method"}],"addArrayItem":[{"__symbolic":"method"}],"moveArray":[{"__symbolic":"method"}],"removeArrayItem":[{"__symbolic":"method"}]}},"ɵr":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":3,"character":32},"arguments":["SEGMENT_DATA"]},"ɵs":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵq"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"fb-accordion","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":27,"character":19},"member":"OnPush"},"template":"<ng-container *ngIf=\"segment.title || segment.subTitle\">\n  <h4 *ngIf=\"segment.title\">{{segment.title}}</h4>\n  <h5 *ngIf=\"segment.subTitle\">{{segment.subTitle}}</h5>\n  <div class=\"p-y-m\">\n    <mat-divider></mat-divider>\n  </div>\n</ng-container>\n\n<p *ngIf=\"segment.description\">{{segment.description}}</p>\n\n<mat-accordion>\n  <mat-expansion-panel *ngFor=\"let accord of accordions\" [expanded]=\"accord.expanded || false\">\n    <mat-expansion-panel-header>\n      <mat-panel-title *ngIf=\"accord.title\">{{accord.title}}</mat-panel-title>\n      <mat-panel-description *ngIf=\"accord.description\">\n        {{accord.description}}\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n\n    <ng-container *ngFor=\"let field of accord.fields | showField:sData.parser\">\n      <ng-template [cdkPortalOutlet]=\"field.portal\"></ng-template>\n    </ng-container>\n\n    <ng-container *ngFor=\"let nested of accord.nestedSegments\">\n      <ng-template [cdkPortalOutlet]=\"nested.component\"></ng-template>\n    </ng-container>\n  </mat-expansion-panel>\n</mat-accordion>\n","styles":[""]}]}],"members":{"ngOnInit":[{"__symbolic":"method"}]}},"ɵt":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵq"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"fb-card","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":8,"character":19},"member":"OnPush"},"template":"<mat-card>\n  <mat-card-header *ngIf=\"segment.title || segment.subTitle || segment.array\">\n    <div>\n      <h1 *ngIf=\"segment.title\">{{segment.title}}</h1>\n      <h2 class=\"fs-small\" *ngIf=\"segment.subTitle\">{{segment.subTitle}}</h2>\n    </div>\n    <div class=\"flex-1\"></div>\n    <button *ngIf=\"segment.array\" mat-icon-button (click)=\"addArrayItem()\" [matTooltip]=\"'GENERAL.ADD' | transloco\">\n      <mat-icon>add</mat-icon>\n    </button>\n  </mat-card-header>\n\n  <mat-card-content>\n    <div class=\"fb-fields\">\n      <p class=\"mat-form-field-wrapper\" *ngIf=\"segment.description\">{{segment.description}}</p>\n\n      <ng-container *ngIf=\"segment.array; else regular\">\n        <ng-container *ngFor=\"let fields of arrayFields; index as index; last as last\">\n          <ng-container *ngFor=\"let field of fields | showField:sData.parser\">\n            <ng-template [cdkPortalOutlet]=\"field.portal\"></ng-template>\n          </ng-container>\n\n          <div class=\"fb-field-12\" *ngFor=\"let nested of (nestedArraySegments[index] || [])\">\n            <ng-template [cdkPortalOutlet]=\"nested.component\"></ng-template>\n          </div>\n\n          <div class=\"ta-right fb-field-12\">\n            <button mat-icon-button (click)=\"moveArray(true, index)\">\n              <mat-icon>arrow_upward</mat-icon>\n            </button>\n            &nbsp;\n            <button mat-icon-button (click)=\"moveArray(false, index)\">\n              <mat-icon>arrow_downward</mat-icon>\n            </button>\n            &nbsp;\n            <button mat-icon-button color=\"warn\" (click)=\"removeArrayItem(index)\">\n              <mat-icon>delete_forever</mat-icon>\n            </button>\n          </div>\n          <hr *ngIf=\"!last\" class=\"fb-field-12 m-y-m nested-divider\">\n        </ng-container>\n      </ng-container>\n\n      <ng-template #regular>\n        <ng-container *ngFor=\"let field of fields | showField:sData.parser\">\n          <ng-template [cdkPortalOutlet]=\"field.portal\"></ng-template>\n        </ng-container>\n\n        <ng-container *ngFor=\"let nested of nestedSegments\">\n          <ng-template [cdkPortalOutlet]=\"nested.component\"></ng-template>\n        </ng-container>\n      </ng-template>\n    </div>\n  </mat-card-content>\n</mat-card>\n","styles":[".nested-divider{margin-left:-16px;margin-right:-16px}"]}]}],"members":{}},"ɵu":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵq"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"fb-empty","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":8,"character":19},"member":"OnPush"},"template":"<ng-container *ngIf=\"segment.title || segment.subTitle\">\n  <div class=\"flex jc-between\">\n    <div>\n      <h4 *ngIf=\"segment.title\">{{segment.title}}</h4>\n      <h5 *ngIf=\"segment.subTitle\">{{segment.subTitle}}</h5>\n    </div>\n    <button *ngIf=\"segment.array\" mat-icon-button (click)=\"addArrayItem()\" [matTooltip]=\"'GENERAL.ADD' | transloco\">\n      <mat-icon>add</mat-icon>\n    </button>\n  </div>\n  <div class=\"p-y-m\">\n    <mat-divider></mat-divider>\n  </div>\n</ng-container>\n\n<div class=\"fb-fields panel\">\n  <p *ngIf=\"segment.description\">{{segment.description}}</p>\n\n  <ng-container *ngIf=\"segment.array; else regular\">\n    <ng-container *ngFor=\"let fields of arrayFields; index as index; last as last\">\n      <ng-container *ngFor=\"let field of fields | showField:sData.parser\">\n        <ng-template [cdkPortalOutlet]=\"field.portal\"></ng-template>\n      </ng-container>\n\n      <div class=\"fb-field-12\" *ngFor=\"let nested of (nestedArraySegments[index] || [])\">\n        <ng-template [cdkPortalOutlet]=\"nested.component\"></ng-template>\n      </div>\n\n      <div class=\"ta-right fb-field-12\">\n        <button mat-icon-button (click)=\"moveArray(true, index)\">\n          <mat-icon>arrow_upward</mat-icon>\n        </button>\n        &nbsp;\n        <button mat-icon-button (click)=\"moveArray(false, index)\">\n          <mat-icon>arrow_downward</mat-icon>\n        </button>\n        &nbsp;\n        <button mat-icon-button color=\"warn\" (click)=\"removeArrayItem(index)\">\n          <mat-icon>delete_forever</mat-icon>\n        </button>\n      </div>\n      <hr *ngIf=\"!last\" class=\"fb-field-12 m-y-m nested-divider\">\n    </ng-container>\n  </ng-container>\n\n  <ng-template #regular>\n    <ng-container *ngFor=\"let field of fields | showField:sData.parser\">\n      <ng-template [cdkPortalOutlet]=\"field.portal\"></ng-template>\n    </ng-container>\n\n    <ng-container *ngFor=\"let nested of nestedSegments\">\n      <ng-template [cdkPortalOutlet]=\"nested.component\"></ng-template>\n    </ng-container>\n  </ng-template>\n</div>\n","styles":[".nested-divider{margin-left:-16px;margin-right:-16px}"]}]}],"members":{}},"ɵv":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵq"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"fb-stepper","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":7,"character":19},"member":"OnPush"},"template":"<p>\n  stepper works!\n</p>\n","styles":[""]}]}],"members":{}},"ɵw":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵq"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":35,"character":1},"arguments":[{"selector":"fb-tabs","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":39,"character":19},"member":"OnPush"},"template":"<ng-container *ngIf=\"segment.title || segment.subTitle\">\n  <h4 *ngIf=\"segment.title\">{{segment.title}}</h4>\n  <h5 *ngIf=\"segment.subTitle\">{{segment.subTitle}}</h5>\n  <div class=\"p-y-m\">\n    <mat-divider></mat-divider>\n  </div>\n</ng-container>\n\n<p *ngIf=\"segment.description\">{{segment.description}}</p>\n\n<mat-tab-group\n  [selectedIndex]=\"configuration.selectedIndex\"\n  [dynamicHeight]=\"configuration.dynamicHeight\"\n  [disableRipple]=\"configuration.disableRipple\"\n  [attr.mat-align-tabs]=\"configuration.alignment\"\n  (selectedTabChange)=\"tabChange($event)\">\n\n  <mat-tab\n    *ngFor=\"let tab of tabs\"\n    [label]=\"tab.title\"\n    [disabled]=\"tab.disabled\">\n\n    <div class=\"p-a-s\">\n      <ng-container *ngFor=\"let field of tab.fields | showField:sData.parser\">\n        <ng-template [cdkPortalOutlet]=\"field.portal\"></ng-template>\n      </ng-container>\n    </div>\n\n    <ng-container *ngFor=\"let nested of tab.nestedSegments\">\n      <ng-template [cdkPortalOutlet]=\"nested.component\"></ng-template>\n    </ng-container>\n  </mat-tab>\n</mat-tab-group>\n","styles":[""]}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"tabChange":[{"__symbolic":"method"}]}},"ɵx":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[fbDropzone]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":7,"character":16},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":8,"character":22}]}],"hoverClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"dropped":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":12,"character":3}}]}],"hovered":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":13,"character":3}}]}],"onDrop":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":15,"character":3},"arguments":["drop",["$event"]]}]}],"onDragOver":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":23,"character":3},"arguments":["dragover",["$event"]]}]}],"onDragLeave":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":30,"character":3},"arguments":["dragleave",["$event"]]}]}]}},"ɵy":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":4,"character":1},"arguments":[{"name":"showField"}]}],"members":{"transform":[{"__symbolic":"method"}]}}},"origins":{"FormBuilderComponent":"./lib/form-builder.component","FormBuilderModule":"./lib/form-builder.module","FormBuilderService":"./lib/form-builder.service","FieldComponent":"./lib/field/field.component","DbService":"./lib/services/db.service","StorageService":"./lib/services/storage.service","PropertyDefinition":"./lib/utils/parser","StringPropertyDefinition":"./lib/utils/parser","NumberPropertyDefinition":"./lib/utils/parser","BooleanPropertyDefinition":"./lib/utils/parser","ArrayPropertyDefinition":"./lib/utils/parser","Pointer":"./lib/utils/parser","Pointers":"./lib/utils/parser","Parser":"./lib/utils/parser","parseTemplate":"./lib/utils/parse-template","safeEval":"./lib/utils/safe-eval","formatGeneratedImages":"./lib/utils/format-generated-images","formatFileName":"./lib/utils/format-file-name","cloneAbstractControl":"./lib/utils/clone-abstract-control","switchItemLocations":"./lib/utils/switch-item-locations","Definition":"./lib/interfaces/definitions.interface","Definitions":"./lib/interfaces/definitions.interface","Option":"./lib/interfaces/option.interface","Segment":"./lib/interfaces/segment.interface","FieldData":"./lib/interfaces/field-data.interface","FormBuilderData":"./lib/interfaces/form-builder-data.interface","ComponentType":"./lib/enums/component-type.enum","SchemaType":"./lib/enums/schema-type.enum","SegmentType":"./lib/enums/segment-type.enum","State":"./lib/enums/state.enum","ROLE":"./lib/utils/role","ADDITIONAL_CONTEXT":"./lib/utils/additional-context","STORAGE_URL":"./lib/utils/storage-url","CustomFields":"./lib/utils/custom-fields","CUSTOM_FIELDS":"./lib/utils/custom-fields","COMPONENT_DATA":"./lib/utils/create-component-injector","ɵa":"./lib/fields/autocomplete/autocomplete.component","ɵb":"./lib/fields/checkbox/checkbox.component","ɵc":"./lib/fields/chips/chips.component","ɵd":"./lib/fields/date-field/date-field.component","ɵe":"./lib/fields/range/range.component","ɵf":"./lib/fields/draggable-list/draggable-list.component","ɵg":"./lib/fields/file/file.component","ɵh":"./lib/fields/gallery/gallery.component","ɵi":"./lib/fields/image/image.component","ɵj":"./lib/fields/input/input.component","ɵk":"./lib/fields/radio/radio.component","ɵl":"./lib/fields/select/select.component","ɵm":"./lib/fields/slider/slider.component","ɵn":"./lib/fields/textarea/textarea.component","ɵo":"./lib/fields/toggle/toggle.component","ɵp":"./lib/fields/wysiwyg/wysiwyg.component","ɵq":"./lib/segment/segment.component","ɵr":"./lib/utils/create-segment-injector","ɵs":"./lib/segments/accordion/accordion.component","ɵt":"./lib/segments/card/card.component","ɵu":"./lib/segments/empty/empty.component","ɵv":"./lib/segments/stepper/stepper.component","ɵw":"./lib/segments/tabs/tabs.component","ɵx":"./lib/directives/dropzone/dropzone.directive","ɵy":"./lib/pipes/show-field/show-field.pipe"},"importAs":"@jaspero/form-builder"}