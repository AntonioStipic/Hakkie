import { Injectable, InjectionToken, Component, Inject, Injector, HostBinding, ChangeDetectionStrategy, ChangeDetectorRef, ViewChild, Optional, EventEmitter, Input, Output, Directive, ElementRef, Renderer2, HostListener, Pipe, NgModule } from '@angular/core';
import { throwError, of, BehaviorSubject, from, Observable, forkJoin } from 'rxjs';
import { MatSnackBar } from '@angular/material/snack-bar';
import { TranslocoService, TranslocoModule } from '@ngneat/transloco';
import { tap, catchError, map, switchMap, startWith, filter, take } from 'rxjs/operators';
import { PortalInjector, ComponentPortal, PortalModule } from '@angular/cdk/portal';
import { moveItemInArray, CdkDropListGroup, CdkDropList, DragDropModule } from '@angular/cdk/drag-drop';
import { get } from 'json-pointer';
import { FormGroup, FormArray, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';
import { DatePipe, CommonModule } from '@angular/common';
import { ViewportRuler } from '@angular/cdk/overlay';
import { HttpClient } from '@angular/common/http';
import { MatDialog, MatDialogModule } from '@angular/material/dialog';
import { DomSanitizer } from '@angular/platform-browser';
import 'tinymce/plugins/code';
import 'tinymce/plugins/print';
import 'tinymce/plugins/wordcount';
import 'tinymce/plugins/link';
import 'tinymce/plugins/image';
import 'tinymce/plugins/imagetools';
import 'tinymce/plugins/fullscreen';
import 'tinymce/plugins/lists';
import 'tinymce/plugins/autolink';
import 'tinymce/plugins/advlist';
import 'tinymce/plugins/table';
import { MatAutocompleteModule } from '@angular/material/autocomplete';
import { MatButtonModule } from '@angular/material/button';
import { MatCardModule } from '@angular/material/card';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { MatChipsModule } from '@angular/material/chips';
import { MatNativeDateModule } from '@angular/material/core';
import { MatDatepickerModule } from '@angular/material/datepicker';
import { MatDividerModule } from '@angular/material/divider';
import { MatExpansionModule } from '@angular/material/expansion';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatIconModule } from '@angular/material/icon';
import { MatInputModule } from '@angular/material/input';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import { MatRadioModule } from '@angular/material/radio';
import { MatSelectModule } from '@angular/material/select';
import { MatSlideToggleModule } from '@angular/material/slide-toggle';
import { MatSliderModule } from '@angular/material/slider';
import { MatTabsModule } from '@angular/material/tabs';
import { MatTooltipModule } from '@angular/material/tooltip';
import { SanitizeModule } from '@jaspero/ng-helpers';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngneat/transloco';
import * as ɵngcc2 from '@angular/material/snack-bar';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/expansion';
import * as ɵngcc5 from '@angular/material/divider';
import * as ɵngcc6 from '@angular/cdk/portal';
import * as ɵngcc7 from '@angular/material/card';
import * as ɵngcc8 from '@angular/material/button';
import * as ɵngcc9 from '@angular/material/tooltip';
import * as ɵngcc10 from '@angular/material/icon';
import * as ɵngcc11 from '@angular/material/tabs';
import * as ɵngcc12 from '@angular/material/form-field';
import * as ɵngcc13 from '@angular/material/input';
import * as ɵngcc14 from '@angular/forms';
import * as ɵngcc15 from '@angular/material/autocomplete';
import * as ɵngcc16 from '@angular/material/core';
import * as ɵngcc17 from '@jaspero/ng-helpers';
import * as ɵngcc18 from '@angular/material/checkbox';
import * as ɵngcc19 from '@angular/material/chips';
import * as ɵngcc20 from '@angular/material/datepicker';
import * as ɵngcc21 from '@angular/cdk/drag-drop';
import * as ɵngcc22 from '@angular/material/dialog';
import * as ɵngcc23 from '@angular/common/http';
import * as ɵngcc24 from '@angular/cdk/overlay';
import * as ɵngcc25 from '@angular/platform-browser';
import * as ɵngcc26 from '@angular/material/radio';
import * as ɵngcc27 from '@angular/material/select';
import * as ɵngcc28 from '@angular/material/progress-spinner';
import * as ɵngcc29 from '@angular/material/slider';
import * as ɵngcc30 from '@angular/material/slide-toggle';

function AccordionComponent_ng_container_0_h4_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h4");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.segment.title);
} }
function AccordionComponent_ng_container_0_h5_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h5");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r4.segment.subTitle);
} }
function AccordionComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AccordionComponent_ng_container_0_h4_1_Template, 2, 1, "h4", 0);
    ɵngcc0.ɵɵtemplate(2, AccordionComponent_ng_container_0_h5_2_Template, 2, 1, "h5", 0);
    ɵngcc0.ɵɵelementStart(3, "div", 2);
    ɵngcc0.ɵɵelement(4, "mat-divider");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.segment.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.segment.subTitle);
} }
function AccordionComponent_p_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.segment.description);
} }
function AccordionComponent_mat_expansion_panel_3_mat_panel_title_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-panel-title");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const accord_r5 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(accord_r5.title);
} }
function AccordionComponent_mat_expansion_panel_3_mat_panel_description_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-panel-description");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const accord_r5 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", accord_r5.description, " ");
} }
function AccordionComponent_mat_expansion_panel_3_ng_container_4_ng_template_1_Template(rf, ctx) { }
function AccordionComponent_mat_expansion_panel_3_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AccordionComponent_mat_expansion_panel_3_ng_container_4_ng_template_1_Template, 0, 0, "ng-template", 5);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const field_r12 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", field_r12.portal);
} }
function AccordionComponent_mat_expansion_panel_3_ng_container_6_ng_template_1_Template(rf, ctx) { }
function AccordionComponent_mat_expansion_panel_3_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AccordionComponent_mat_expansion_panel_3_ng_container_6_ng_template_1_Template, 0, 0, "ng-template", 5);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const nested_r14 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", nested_r14.component);
} }
function AccordionComponent_mat_expansion_panel_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-expansion-panel", 3);
    ɵngcc0.ɵɵelementStart(1, "mat-expansion-panel-header");
    ɵngcc0.ɵɵtemplate(2, AccordionComponent_mat_expansion_panel_3_mat_panel_title_2_Template, 2, 1, "mat-panel-title", 0);
    ɵngcc0.ɵɵtemplate(3, AccordionComponent_mat_expansion_panel_3_mat_panel_description_3_Template, 2, 1, "mat-panel-description", 0);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, AccordionComponent_mat_expansion_panel_3_ng_container_4_Template, 2, 1, "ng-container", 4);
    ɵngcc0.ɵɵpipe(5, "showField");
    ɵngcc0.ɵɵtemplate(6, AccordionComponent_mat_expansion_panel_3_ng_container_6_Template, 2, 1, "ng-container", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const accord_r5 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("expanded", accord_r5.expanded || false);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", accord_r5.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", accord_r5.description);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(5, 5, accord_r5.fields, ctx_r2.sData.parser));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", accord_r5.nestedSegments);
} }
function CardComponent_mat_card_header_1_h1_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h1");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r5.segment.title);
} }
function CardComponent_mat_card_header_1_h2_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h2", 8);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r6.segment.subTitle);
} }
function CardComponent_mat_card_header_1_button_5_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 9);
    ɵngcc0.ɵɵlistener("click", function CardComponent_mat_card_header_1_button_5_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.addArrayItem(); });
    ɵngcc0.ɵɵpipe(1, "transloco");
    ɵngcc0.ɵɵelementStart(2, "mat-icon");
    ɵngcc0.ɵɵtext(3, "add");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("matTooltip", ɵngcc0.ɵɵpipeBind1(1, 1, "GENERAL.ADD"));
} }
function CardComponent_mat_card_header_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-header");
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵtemplate(2, CardComponent_mat_card_header_1_h1_2_Template, 2, 1, "h1", 0);
    ɵngcc0.ɵɵtemplate(3, CardComponent_mat_card_header_1_h2_3_Template, 2, 1, "h2", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "div", 6);
    ɵngcc0.ɵɵtemplate(5, CardComponent_mat_card_header_1_button_5_Template, 4, 3, "button", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.segment.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.segment.subTitle);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.segment.array);
} }
function CardComponent_p_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 10);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.segment.description);
} }
function CardComponent_ng_container_5_ng_container_1_ng_container_1_ng_template_1_Template(rf, ctx) { }
function CardComponent_ng_container_5_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, CardComponent_ng_container_5_ng_container_1_ng_container_1_ng_template_1_Template, 0, 0, "ng-template", 17);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const field_r17 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", field_r17.portal);
} }
function CardComponent_ng_container_5_ng_container_1_div_3_ng_template_1_Template(rf, ctx) { }
function CardComponent_ng_container_5_ng_container_1_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵtemplate(1, CardComponent_ng_container_5_ng_container_1_div_3_ng_template_1_Template, 0, 0, "ng-template", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const nested_r19 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", nested_r19.component);
} }
function CardComponent_ng_container_5_ng_container_1_hr_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "hr", 19);
} }
const _c0 = function () { return []; };
function CardComponent_ng_container_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, CardComponent_ng_container_5_ng_container_1_ng_container_1_Template, 2, 1, "ng-container", 11);
    ɵngcc0.ɵɵpipe(2, "showField");
    ɵngcc0.ɵɵtemplate(3, CardComponent_ng_container_5_ng_container_1_div_3_Template, 2, 1, "div", 12);
    ɵngcc0.ɵɵelementStart(4, "div", 13);
    ɵngcc0.ɵɵelementStart(5, "button", 14);
    ɵngcc0.ɵɵlistener("click", function CardComponent_ng_container_5_ng_container_1_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r22); const index_r12 = ctx.index; const ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.moveArray(true, index_r12); });
    ɵngcc0.ɵɵelementStart(6, "mat-icon");
    ɵngcc0.ɵɵtext(7, "arrow_upward");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, " \u00A0 ");
    ɵngcc0.ɵɵelementStart(9, "button", 14);
    ɵngcc0.ɵɵlistener("click", function CardComponent_ng_container_5_ng_container_1_Template_button_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r22); const index_r12 = ctx.index; const ctx_r23 = ɵngcc0.ɵɵnextContext(2); return ctx_r23.moveArray(false, index_r12); });
    ɵngcc0.ɵɵelementStart(10, "mat-icon");
    ɵngcc0.ɵɵtext(11, "arrow_downward");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(12, " \u00A0 ");
    ɵngcc0.ɵɵelementStart(13, "button", 15);
    ɵngcc0.ɵɵlistener("click", function CardComponent_ng_container_5_ng_container_1_Template_button_click_13_listener() { ɵngcc0.ɵɵrestoreView(_r22); const index_r12 = ctx.index; const ctx_r24 = ɵngcc0.ɵɵnextContext(2); return ctx_r24.removeArrayItem(index_r12); });
    ɵngcc0.ɵɵelementStart(14, "mat-icon");
    ɵngcc0.ɵɵtext(15, "delete_forever");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(16, CardComponent_ng_container_5_ng_container_1_hr_16_Template, 1, 0, "hr", 16);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const fields_r11 = ctx.$implicit;
    const index_r12 = ctx.index;
    const last_r13 = ctx.last;
    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(2, 3, fields_r11, ctx_r10.sData.parser));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r10.nestedArraySegments[index_r12] || ɵngcc0.ɵɵpureFunction0(6, _c0));
    ɵngcc0.ɵɵadvance(13);
    ɵngcc0.ɵɵproperty("ngIf", !last_r13);
} }
function CardComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, CardComponent_ng_container_5_ng_container_1_Template, 17, 7, "ng-container", 11);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.arrayFields);
} }
function CardComponent_ng_template_6_ng_container_0_ng_template_1_Template(rf, ctx) { }
function CardComponent_ng_template_6_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, CardComponent_ng_template_6_ng_container_0_ng_template_1_Template, 0, 0, "ng-template", 17);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const field_r27 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", field_r27.portal);
} }
function CardComponent_ng_template_6_ng_container_2_ng_template_1_Template(rf, ctx) { }
function CardComponent_ng_template_6_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, CardComponent_ng_template_6_ng_container_2_ng_template_1_Template, 0, 0, "ng-template", 17);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const nested_r29 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", nested_r29.component);
} }
function CardComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, CardComponent_ng_template_6_ng_container_0_Template, 2, 1, "ng-container", 11);
    ɵngcc0.ɵɵpipe(1, "showField");
    ɵngcc0.ɵɵtemplate(2, CardComponent_ng_template_6_ng_container_2_Template, 2, 1, "ng-container", 11);
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(1, 2, ctx_r4.fields, ctx_r4.sData.parser));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r4.nestedSegments);
} }
function EmptyComponent_ng_container_0_h4_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h4");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r5.segment.title);
} }
function EmptyComponent_ng_container_0_h5_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h5");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r6.segment.subTitle);
} }
function EmptyComponent_ng_container_0_button_5_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 7);
    ɵngcc0.ɵɵlistener("click", function EmptyComponent_ng_container_0_button_5_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.addArrayItem(); });
    ɵngcc0.ɵɵpipe(1, "transloco");
    ɵngcc0.ɵɵelementStart(2, "mat-icon");
    ɵngcc0.ɵɵtext(3, "add");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("matTooltip", ɵngcc0.ɵɵpipeBind1(1, 1, "GENERAL.ADD"));
} }
function EmptyComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 4);
    ɵngcc0.ɵɵelementStart(2, "div");
    ɵngcc0.ɵɵtemplate(3, EmptyComponent_ng_container_0_h4_3_Template, 2, 1, "h4", 0);
    ɵngcc0.ɵɵtemplate(4, EmptyComponent_ng_container_0_h5_4_Template, 2, 1, "h5", 0);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, EmptyComponent_ng_container_0_button_5_Template, 4, 3, "button", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 6);
    ɵngcc0.ɵɵelement(7, "mat-divider");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.segment.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.segment.subTitle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.segment.array);
} }
function EmptyComponent_p_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.segment.description);
} }
function EmptyComponent_ng_container_3_ng_container_1_ng_container_1_ng_template_1_Template(rf, ctx) { }
function EmptyComponent_ng_container_3_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, EmptyComponent_ng_container_3_ng_container_1_ng_container_1_ng_template_1_Template, 0, 0, "ng-template", 14);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const field_r17 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", field_r17.portal);
} }
function EmptyComponent_ng_container_3_ng_container_1_div_3_ng_template_1_Template(rf, ctx) { }
function EmptyComponent_ng_container_3_ng_container_1_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵtemplate(1, EmptyComponent_ng_container_3_ng_container_1_div_3_ng_template_1_Template, 0, 0, "ng-template", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const nested_r19 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", nested_r19.component);
} }
function EmptyComponent_ng_container_3_ng_container_1_hr_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "hr", 16);
} }
function EmptyComponent_ng_container_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, EmptyComponent_ng_container_3_ng_container_1_ng_container_1_Template, 2, 1, "ng-container", 8);
    ɵngcc0.ɵɵpipe(2, "showField");
    ɵngcc0.ɵɵtemplate(3, EmptyComponent_ng_container_3_ng_container_1_div_3_Template, 2, 1, "div", 9);
    ɵngcc0.ɵɵelementStart(4, "div", 10);
    ɵngcc0.ɵɵelementStart(5, "button", 11);
    ɵngcc0.ɵɵlistener("click", function EmptyComponent_ng_container_3_ng_container_1_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r22); const index_r12 = ctx.index; const ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.moveArray(true, index_r12); });
    ɵngcc0.ɵɵelementStart(6, "mat-icon");
    ɵngcc0.ɵɵtext(7, "arrow_upward");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, " \u00A0 ");
    ɵngcc0.ɵɵelementStart(9, "button", 11);
    ɵngcc0.ɵɵlistener("click", function EmptyComponent_ng_container_3_ng_container_1_Template_button_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r22); const index_r12 = ctx.index; const ctx_r23 = ɵngcc0.ɵɵnextContext(2); return ctx_r23.moveArray(false, index_r12); });
    ɵngcc0.ɵɵelementStart(10, "mat-icon");
    ɵngcc0.ɵɵtext(11, "arrow_downward");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(12, " \u00A0 ");
    ɵngcc0.ɵɵelementStart(13, "button", 12);
    ɵngcc0.ɵɵlistener("click", function EmptyComponent_ng_container_3_ng_container_1_Template_button_click_13_listener() { ɵngcc0.ɵɵrestoreView(_r22); const index_r12 = ctx.index; const ctx_r24 = ɵngcc0.ɵɵnextContext(2); return ctx_r24.removeArrayItem(index_r12); });
    ɵngcc0.ɵɵelementStart(14, "mat-icon");
    ɵngcc0.ɵɵtext(15, "delete_forever");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(16, EmptyComponent_ng_container_3_ng_container_1_hr_16_Template, 1, 0, "hr", 13);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const fields_r11 = ctx.$implicit;
    const index_r12 = ctx.index;
    const last_r13 = ctx.last;
    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(2, 3, fields_r11, ctx_r10.sData.parser));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r10.nestedArraySegments[index_r12] || ɵngcc0.ɵɵpureFunction0(6, _c0));
    ɵngcc0.ɵɵadvance(13);
    ɵngcc0.ɵɵproperty("ngIf", !last_r13);
} }
function EmptyComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, EmptyComponent_ng_container_3_ng_container_1_Template, 17, 7, "ng-container", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.arrayFields);
} }
function EmptyComponent_ng_template_4_ng_container_0_ng_template_1_Template(rf, ctx) { }
function EmptyComponent_ng_template_4_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, EmptyComponent_ng_template_4_ng_container_0_ng_template_1_Template, 0, 0, "ng-template", 14);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const field_r27 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", field_r27.portal);
} }
function EmptyComponent_ng_template_4_ng_container_2_ng_template_1_Template(rf, ctx) { }
function EmptyComponent_ng_template_4_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, EmptyComponent_ng_template_4_ng_container_2_ng_template_1_Template, 0, 0, "ng-template", 14);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const nested_r29 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", nested_r29.component);
} }
function EmptyComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, EmptyComponent_ng_template_4_ng_container_0_Template, 2, 1, "ng-container", 8);
    ɵngcc0.ɵɵpipe(1, "showField");
    ɵngcc0.ɵɵtemplate(2, EmptyComponent_ng_template_4_ng_container_2_Template, 2, 1, "ng-container", 8);
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(1, 2, ctx_r4.fields, ctx_r4.sData.parser));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r4.nestedSegments);
} }
const _c1 = ".nested-divider[_ngcontent-%COMP%]{margin-left:-16px;margin-right:-16px}";
function TabsComponent_ng_container_0_h4_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h4");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.segment.title);
} }
function TabsComponent_ng_container_0_h5_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h5");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r4.segment.subTitle);
} }
function TabsComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, TabsComponent_ng_container_0_h4_1_Template, 2, 1, "h4", 0);
    ɵngcc0.ɵɵtemplate(2, TabsComponent_ng_container_0_h5_2_Template, 2, 1, "h5", 0);
    ɵngcc0.ɵɵelementStart(3, "div", 3);
    ɵngcc0.ɵɵelement(4, "mat-divider");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.segment.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.segment.subTitle);
} }
function TabsComponent_p_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.segment.description);
} }
function TabsComponent_mat_tab_3_ng_container_2_ng_template_1_Template(rf, ctx) { }
function TabsComponent_mat_tab_3_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, TabsComponent_mat_tab_3_ng_container_2_ng_template_1_Template, 0, 0, "ng-template", 7);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const field_r8 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", field_r8.portal);
} }
function TabsComponent_mat_tab_3_ng_container_4_ng_template_1_Template(rf, ctx) { }
function TabsComponent_mat_tab_3_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, TabsComponent_mat_tab_3_ng_container_4_ng_template_1_Template, 0, 0, "ng-template", 7);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const nested_r10 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", nested_r10.component);
} }
function TabsComponent_mat_tab_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-tab", 4);
    ɵngcc0.ɵɵelementStart(1, "div", 5);
    ɵngcc0.ɵɵtemplate(2, TabsComponent_mat_tab_3_ng_container_2_Template, 2, 1, "ng-container", 6);
    ɵngcc0.ɵɵpipe(3, "showField");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, TabsComponent_mat_tab_3_ng_container_4_Template, 2, 1, "ng-container", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const tab_r5 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("label", tab_r5.title)("disabled", tab_r5.disabled);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(3, 4, tab_r5.fields, ctx_r2.sData.parser));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", tab_r5.nestedSegments);
} }
function AutocompleteComponent_mat_option_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option", 7);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const data_r5 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("value", data_r5.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", data_r5.name, " ");
} }
function AutocompleteComponent_mat_hint_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-hint", 8);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r2.cData.hint), ɵngcc0.ɵɵsanitizeHtml);
} }
function AutocompleteComponent_span_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 9);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
    ɵngcc0.ɵɵpipe(2, "async");
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r3.suffix$) || ""), ɵngcc0.ɵɵsanitizeHtml);
} }
function AutocompleteComponent_span_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 10);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
    ɵngcc0.ɵɵpipe(2, "async");
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r4.prefix$) || ""), ɵngcc0.ɵɵsanitizeHtml);
} }
function CheckboxComponent_p_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.cData.hint), " ");
} }
function ChipsComponent_mat_chip_6_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 9);
    ɵngcc0.ɵɵtext(1, "cancel");
    ɵngcc0.ɵɵelementEnd();
} }
function ChipsComponent_mat_chip_6_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-chip", 7);
    ɵngcc0.ɵɵlistener("removed", function ChipsComponent_mat_chip_6_Template_mat_chip_removed_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const chip_r5 = ctx.$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.remove(chip_r5); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, ChipsComponent_mat_chip_6_mat_icon_2_Template, 2, 0, "mat-icon", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const chip_r5 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("selectable", ctx_r1.cData.selectable)("removable", ctx_r1.removable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", chip_r5, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.removable);
} }
function ChipsComponent_span_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 10);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
    ɵngcc0.ɵɵpipe(2, "async");
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r2.suffix$) || ""), ɵngcc0.ɵɵsanitizeHtml);
} }
function ChipsComponent_span_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 11);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
    ɵngcc0.ɵɵpipe(2, "async");
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r3.prefix$) || ""), ɵngcc0.ɵɵsanitizeHtml);
} }
function ChipsComponent_mat_hint_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-hint", 12);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r4.cData.hint), ɵngcc0.ɵɵsanitizeHtml);
} }
function DateFieldComponent_mat_hint_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-hint", 8);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r1.cData.hint), ɵngcc0.ɵɵsanitizeHtml);
} }
function DateFieldComponent_ng_container_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 9);
    ɵngcc0.ɵɵelementStart(2, "mat-form-field", 1);
    ɵngcc0.ɵɵelementStart(3, "mat-label");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(6, "input", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div", 11);
    ɵngcc0.ɵɵelementStart(8, "mat-form-field", 1);
    ɵngcc0.ɵɵelementStart(9, "mat-label");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(12, "input", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 6, ctx_r2.cData.labelHours || "HOURS"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("placeholder", ctx_r2.cData.placeholderHours || "HH")("formControl", ctx_r2.hoursControl);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(11, 8, ctx_r2.cData.labelMinutes || "MINUTES"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("placeholder", ctx_r2.cData.placeholderMinutes || "MM")("formControl", ctx_r2.minutesControl);
} }
function DraggableListComponent_p_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.cData.label));
} }
function DraggableListComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const index_r3 = ctx.index;
    ɵngcc0.ɵɵproperty("cdkDragDisabled", item_r2.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", index_r3 + 1, ". ", item_r2.name, " ");
} }
const _c2 = ["file"];
function FileComponent_ng_container_12_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 9);
    ɵngcc0.ɵɵlistener("click", function FileComponent_ng_container_12_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.clear(); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "| ");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, "REMOVE"));
} }
const _c3 = ["modal"];
const _c4 = ["imagesSort"];
function GalleryComponent_p_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 11);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.cData.label || ""));
} }
function GalleryComponent_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 12);
    ɵngcc0.ɵɵlistener("click", function GalleryComponent_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.openUploadDialog(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, "FIELDS.GALLERY.ENTER_URL"));
} }
function GalleryComponent_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 12);
    ɵngcc0.ɵɵlistener("click", function GalleryComponent_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.openFileUpload(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, "FIELDS.GALLERY.CHOOSE_FILES"));
} }
function GalleryComponent_button_5_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 12);
    ɵngcc0.ɵɵlistener("click", function GalleryComponent_button_5_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.openSortImages(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, "FIELDS.GALLERY.SORT_IMAGES"));
} }
function GalleryComponent_div_11_Template(rf, ctx) { if (rf & 1) {
    const _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵlistener("cdkDropListDropped", function GalleryComponent_div_11_Template_div_cdkDropListDropped_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.dropListDropped(); });
    ɵngcc0.ɵɵelementStart(1, "div", 14);
    ɵngcc0.ɵɵlistener("cdkDragMoved", function GalleryComponent_div_11_Template_div_cdkDragMoved_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.dragMoved($event); });
    ɵngcc0.ɵɵelement(2, "img", 15);
    ɵngcc0.ɵɵpipe(3, "jpSanitize");
    ɵngcc0.ɵɵelementStart(4, "button", 16);
    ɵngcc0.ɵɵlistener("click", function GalleryComponent_div_11_Template_button_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r19); const index_r17 = ctx.index; const val_r16 = ctx.$implicit; const ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.removeImage(index_r17, val_r16); });
    ɵngcc0.ɵɵpipe(5, "transloco");
    ɵngcc0.ɵɵelementStart(6, "mat-icon");
    ɵngcc0.ɵɵtext(7, "close");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const val_r16 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("src", ɵngcc0.ɵɵpipeBind2(3, 2, val_r16.data || val_r16, "resourceUrl"), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("matTooltip", ɵngcc0.ɵɵpipeBind1(5, 5, "GENERAL.REMOVE"));
} }
function GalleryComponent_ng_template_12_Template(rf, ctx) { if (rf & 1) {
    const _r24 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-dialog-content");
    ɵngcc0.ɵɵelementStart(1, "mat-form-field", 17);
    ɵngcc0.ɵɵelementStart(2, "mat-label");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "input", 18, 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "mat-dialog-actions", 20);
    ɵngcc0.ɵɵelementStart(8, "button", 21);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵpipe(10, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(11, "\u00A0 ");
    ɵngcc0.ɵɵelementStart(12, "button", 22);
    ɵngcc0.ɵɵlistener("click", function GalleryComponent_ng_template_12_Template_button_click_12_listener() { ɵngcc0.ɵɵrestoreView(_r24); const _r22 = ɵngcc0.ɵɵreference(6); const ctx_r23 = ɵngcc0.ɵɵnextContext(); return ctx_r23.addImage(_r22.value); });
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵpipe(14, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r22 = ɵngcc0.ɵɵreference(6);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 4, "FIELDS.GALLERY.IMAGE_URL"));
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(10, 6, "GENERAL.CANCEL"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("disabled", !_r22.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(14, 8, "FIELDS.GALLERY.ADD_IMAGE"));
} }
function GalleryComponent_ng_template_14_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r31 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 26);
    ɵngcc0.ɵɵelement(1, "img", 27);
    ɵngcc0.ɵɵpipe(2, "jpSanitize");
    ɵngcc0.ɵɵelement(3, "div", 28);
    ɵngcc0.ɵɵelementStart(4, "div");
    ɵngcc0.ɵɵelementStart(5, "button", 29);
    ɵngcc0.ɵɵlistener("click", function GalleryComponent_ng_template_14_div_5_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r31); const index_r27 = ctx.index; const ctx_r30 = ɵngcc0.ɵɵnextContext(2); return ctx_r30.move(true, index_r27); });
    ɵngcc0.ɵɵelementStart(6, "mat-icon");
    ɵngcc0.ɵɵtext(7, "arrow_upward");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "button", 29);
    ɵngcc0.ɵɵlistener("click", function GalleryComponent_ng_template_14_div_5_Template_button_click_8_listener() { ɵngcc0.ɵɵrestoreView(_r31); const index_r27 = ctx.index; const ctx_r32 = ɵngcc0.ɵɵnextContext(2); return ctx_r32.move(false, index_r27); });
    ɵngcc0.ɵɵelementStart(9, "mat-icon");
    ɵngcc0.ɵɵtext(10, "arrow_downward");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "button", 30);
    ɵngcc0.ɵɵelementStart(12, "mat-icon");
    ɵngcc0.ɵɵtext(13, "drag_indicator");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const val_r26 = ctx.$implicit;
    const first_r28 = ctx.first;
    const last_r29 = ctx.last;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("src", ɵngcc0.ɵɵpipeBind2(2, 3, val_r26.data || val_r26, "resourceUrl"), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("disabled", first_r28);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("disabled", last_r29);
} }
function GalleryComponent_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    const _r34 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "h1", 23);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "mat-dialog-content");
    ɵngcc0.ɵɵelementStart(4, "div", 24);
    ɵngcc0.ɵɵlistener("cdkDropListDropped", function GalleryComponent_ng_template_14_Template_div_cdkDropListDropped_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); const ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33.sortDrop($event); });
    ɵngcc0.ɵɵtemplate(5, GalleryComponent_ng_template_14_div_5_Template, 14, 6, "div", 25);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 2, "FIELDS.GALLERY.SORT_IMAGES"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r9.cData.control.value);
} }
function ImageComponent_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 8);
    ɵngcc0.ɵɵelementStart(2, "button", 9);
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "visibility");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "img", 10);
    ɵngcc0.ɵɵpipe(6, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("alt", ɵngcc0.ɵɵpipeBind1(6, 2, "FIELDS.IMAGE.PREVIEW"));
    ɵngcc0.ɵɵattribute("src", ctx_r0.imageSrc || ctx_r0.imageUrl.value || ctx_r0.value, ɵngcc0.ɵɵsanitizeUrl);
} }
function ImageComponent_button_8_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 12);
    ɵngcc0.ɵɵlistener("click", function ImageComponent_button_8_Template_mat_icon_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.openFileUpload(); });
    ɵngcc0.ɵɵtext(2, "perm_media");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function ImageComponent_button_9_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 12);
    ɵngcc0.ɵɵlistener("click", function ImageComponent_button_9_Template_mat_icon_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.remove(); });
    ɵngcc0.ɵɵtext(2, "highlight_off");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function ImageComponent_mat_hint_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-hint", 13);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r3.cData.hint), ɵngcc0.ɵɵsanitizeHtml);
} }
function InputComponent_mat_form_field_1_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 8);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
    ɵngcc0.ɵɵpipe(2, "async");
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r2.prefix$) || ""), ɵngcc0.ɵɵsanitizeHtml);
} }
function InputComponent_mat_form_field_1_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 9);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
    ɵngcc0.ɵɵpipe(2, "async");
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r3.suffix$) || ""), ɵngcc0.ɵɵsanitizeHtml);
} }
function InputComponent_mat_form_field_1_mat_hint_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-hint", 10);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r4.cData.hint), ɵngcc0.ɵɵsanitizeHtml);
} }
function InputComponent_mat_form_field_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-form-field", 3);
    ɵngcc0.ɵɵelementStart(1, "mat-label");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, InputComponent_mat_form_field_1_span_4_Template, 3, 5, "span", 4);
    ɵngcc0.ɵɵelement(5, "input", 5);
    ɵngcc0.ɵɵpipe(6, "transloco");
    ɵngcc0.ɵɵtemplate(7, InputComponent_mat_form_field_1_span_7_Template, 3, 5, "span", 6);
    ɵngcc0.ɵɵtemplate(8, InputComponent_mat_form_field_1_mat_hint_8_Template, 2, 3, "mat-hint", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("mat-form-field-has-hint", ctx_r0.cData.hint);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 9, ctx_r0.cData.label || ""));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.cData.prefix);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind1(6, 11, ctx_r0.cData.placeholder || ""))("formControl", ctx_r0.cData.control);
    ɵngcc0.ɵɵattribute("autocomplete", ctx_r0.cData.autocomplete || "on");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.cData.suffix);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.cData.hint);
} }
function InputComponent_mat_form_field_2_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 8);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
    ɵngcc0.ɵɵpipe(2, "async");
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r5.prefix$) || ""), ɵngcc0.ɵɵsanitizeHtml);
} }
function InputComponent_mat_form_field_2_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 9);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
    ɵngcc0.ɵɵpipe(2, "async");
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r6.suffix$) || ""), ɵngcc0.ɵɵsanitizeHtml);
} }
function InputComponent_mat_form_field_2_mat_hint_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-hint", 10);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r7.cData.hint), ɵngcc0.ɵɵsanitizeHtml);
} }
function InputComponent_mat_form_field_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-form-field", 3);
    ɵngcc0.ɵɵelementStart(1, "mat-label");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, InputComponent_mat_form_field_2_span_4_Template, 3, 5, "span", 4);
    ɵngcc0.ɵɵelement(5, "input", 11);
    ɵngcc0.ɵɵpipe(6, "transloco");
    ɵngcc0.ɵɵtemplate(7, InputComponent_mat_form_field_2_span_7_Template, 3, 5, "span", 6);
    ɵngcc0.ɵɵtemplate(8, InputComponent_mat_form_field_2_mat_hint_8_Template, 2, 3, "mat-hint", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("mat-form-field-has-hint", ctx_r1.cData.hint);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 10, ctx_r1.cData.label || ""));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.cData.prefix);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind1(6, 12, ctx_r1.cData.placeholder || ""))("formControl", ctx_r1.cData.control);
    ɵngcc0.ɵɵattribute("autocomplete", ctx_r1.cData.autocomplete || "on")("type", ctx_r1.cData.type);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.cData.suffix);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.cData.hint);
} }
function RadioComponent_p_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.cData.label || ""));
} }
function RadioComponent_mat_radio_button_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-radio-button", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r3 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("disabled", option_r3.disabled)("value", option_r3.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", option_r3.name, " ");
} }
function RadioComponent_p_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵpipe(3, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ɵngcc0.ɵɵpipeBind1(3, 3, ctx_r2.cData.hint)), " ");
} }
function RangeComponent_p_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 8);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.cData.label || ""));
} }
function RangeComponent_p_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 8);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵpipe(3, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ɵngcc0.ɵɵpipeBind1(3, 3, ctx_r2.cData.hint)), " ");
} }
function SelectComponent_mat_option_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const data_r3 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("value", data_r3.value)("disabled", data_r3.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", data_r3.name, " ");
} }
function SelectComponent_mat_spinner_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-spinner", 6);
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("diameter", 20);
} }
function SelectComponent_mat_hint_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-hint", 7);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r2.cData.hint), ɵngcc0.ɵɵsanitizeHtml);
} }
function SliderComponent_p_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.cData.label || ""));
} }
function SliderComponent_p_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r1.cData.hint || ""), " ");
} }
function TextareaComponent_mat_hint_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-hint", 5);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r0.cData.hint), ɵngcc0.ɵɵsanitizeHtml);
} }
function TextareaComponent_span_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 6);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
    ɵngcc0.ɵɵpipe(2, "async");
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r1.suffix$) || ""), ɵngcc0.ɵɵsanitizeHtml);
} }
function TextareaComponent_span_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 7);
    ɵngcc0.ɵɵpipe(1, "jpSanitize");
    ɵngcc0.ɵɵpipe(2, "async");
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r2.prefix$) || ""), ɵngcc0.ɵɵsanitizeHtml);
} }
function ToggleComponent_p_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.cData.label || ""));
} }
function ToggleComponent_p_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r1.cData.hint || ""), " ");
} }
const _c5 = ["textarea"];
const _c6 = ["youTubeDialog"];
function WysiwygComponent_p_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.cData.label || ""));
} }
function WysiwygComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h1", 6);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "form", 7);
    ɵngcc0.ɵɵelementStart(4, "mat-dialog-content");
    ɵngcc0.ɵɵelementStart(5, "mat-form-field", 8);
    ɵngcc0.ɵɵelementStart(6, "mat-label");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(9, "input", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "label", 10);
    ɵngcc0.ɵɵelementStart(11, "span");
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵpipe(13, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(14, "mat-slide-toggle", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(15, "label", 10);
    ɵngcc0.ɵɵelementStart(16, "span");
    ɵngcc0.ɵɵtext(17);
    ɵngcc0.ɵɵpipe(18, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(19, "mat-slide-toggle", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(20, "label", 10);
    ɵngcc0.ɵɵelementStart(21, "span");
    ɵngcc0.ɵɵtext(22);
    ɵngcc0.ɵɵpipe(23, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(24, "mat-slide-toggle", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(25, "mat-form-field", 8);
    ɵngcc0.ɵɵelementStart(26, "mat-label");
    ɵngcc0.ɵɵtext(27);
    ɵngcc0.ɵɵpipe(28, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(29, "mat-select", 14);
    ɵngcc0.ɵɵelementStart(30, "mat-option", 15);
    ɵngcc0.ɵɵtext(31);
    ɵngcc0.ɵɵpipe(32, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(33, "mat-option", 16);
    ɵngcc0.ɵɵtext(34);
    ɵngcc0.ɵɵpipe(35, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(36, "mat-option", 17);
    ɵngcc0.ɵɵtext(37);
    ɵngcc0.ɵɵpipe(38, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(39, "mat-dialog-actions", 18);
    ɵngcc0.ɵɵelementStart(40, "button", 19);
    ɵngcc0.ɵɵtext(41);
    ɵngcc0.ɵɵpipe(42, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(43, "button", 20);
    ɵngcc0.ɵɵtext(44);
    ɵngcc0.ɵɵpipe(45, "transloco");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 13, "FIELDS.WYSIWYG.EMBED_YOUTUBE"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("formGroup", ctx_r3.ytForm);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 15, "FIELDS.WYSIWYG.VIDEO_ID"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(13, 17, "FIELDS.WYSIWYG.FULL_WIDTH"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(18, 19, "FIELDS.WYSIWYG.SHOW_PLAYER_CONTROLS"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(23, 21, "FIELDS.WYSIWYG.PRIVACY_ENHANCED_MODE"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(28, 23, "FIELDS.WYSIWYG.ALIGNMENT"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(32, 25, "FIELDS.WYSIWYG.LEFT"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(35, 27, "FIELDS.WYSIWYG.CENTER"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(38, 29, "FIELDS.WYSIWYG.RIGHT"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(42, 31, "GENERAL.CLOSE"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("mat-dialog-close", true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(45, 33, "GENERAL.SAVE"));
} }
function FormBuilderComponent_ng_container_1_ng_template_1_Template(rf, ctx) { }
function FormBuilderComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, FormBuilderComponent_ng_container_1_ng_template_1_Template, 0, 0, "ng-template", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const segment_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", segment_r1.component);
} }
var SegmentType;
(function (SegmentType) {
    SegmentType["Empty"] = "empty";
    SegmentType["Card"] = "card";
    SegmentType["Accordion"] = "accordion";
    SegmentType["Tabs"] = "tabs";
    SegmentType["Stepper"] = "stepper";
})(SegmentType || (SegmentType = {}));

var State;
(function (State) {
    State["Create"] = "create";
    State["Edit"] = "edit";
})(State || (State = {}));

class FormBuilderService {
    constructor(transloco, snackBar) {
        this.transloco = transloco;
        this.snackBar = snackBar;
        /**
         * Array of components that need to
         * run save() methods on single instance
         */
        this.saveComponents = [];
    }
    notify(options = {}) {
        const finalOptions = Object.assign({ success: 'GENERAL.OPERATION_COMPLETED', error: 'GENERAL.OPERATION_FAILED' }, options);
        return (source$) => {
            return source$.pipe(tap(() => {
                if (finalOptions.success) {
                    this.snackBar.open(this.transloco.translate(finalOptions.success), this.transloco.translate('GENERAL.DISMISS'), {
                        duration: 5000
                    });
                }
            }), catchError(err => {
                if (finalOptions.error) {
                    this.snackBar.open(this.transloco.translate(finalOptions.error), this.transloco.translate('GENERAL.DISMISS'), {
                        panelClass: 'snack-bar-error',
                        duration: 5000
                    });
                }
                console.error(err);
                return throwError(err);
            }));
        };
    }
}
FormBuilderService.ɵfac = function FormBuilderService_Factory(t) { return new (t || FormBuilderService)(ɵngcc0.ɵɵinject(ɵngcc1.TranslocoService), ɵngcc0.ɵɵinject(ɵngcc2.MatSnackBar)); };
FormBuilderService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FormBuilderService, factory: FormBuilderService.ɵfac });
FormBuilderService.ctorParameters = () => [
    { type: TranslocoService },
    { type: MatSnackBar }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormBuilderService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.TranslocoService }, { type: ɵngcc2.MatSnackBar }]; }, null); })();

const CUSTOM_FIELDS = new InjectionToken('CUSTOM_FIELDS');

const SEGMENT_DATA = new InjectionToken('SEGMENT_DATA');
function createSegmentInjector(injector, dataToPass) {
    const injectorTokens = new WeakMap();
    injectorTokens.set(SEGMENT_DATA, dataToPass);
    return new PortalInjector(injector, injectorTokens);
}

class SegmentComponent {
    constructor(sData, injector) {
        this.sData = sData;
        this.injector = injector;
        this.nestedArraySegments = [];
        this.arrayFields = [];
    }
    ngOnInit() {
        this.segment = this.sData.segment;
        this.classes = this.sData.segment.classes.join(' ');
        this.pointers = this.sData.parser.pointers;
        this.id = this.sData.segment.id || '';
        /**
         * Each segment compiles all nested segments
         */
        this.nestedSegments = filterAndCompileSegments(this.sData.segment.nestedSegments || [], this.sData.parser, this.sData.definitions, this.injector, this.segment.entryValue);
        const array = this.segment.array;
        /**
         * Add array items if necessary
         */
        if (array && this.segment.entryValue) {
            let values;
            try {
                values = get(this.segment.entryValue, array);
            }
            catch (e) { }
            if (values) {
                values.forEach(() => this.addArrayItem(false));
                this.pointers[array].control.patchValue(values);
                for (let i = 0; i < values.length; i++) {
                    // @ts-ignore
                    this.sData.parser.loadHooks(this.pointers[array].arrayPointers[i]);
                }
            }
        }
    }
    addArrayItem(loadHook = true) {
        const array = this.segment.array;
        const pointers = this.sData.parser.addArrayItem((this.sData.parent || '') + array, loadHook, this.sData.parent ? {
            pointer: this.sData.parent,
            index: 0
        } : undefined);
        let fields;
        if (this.segment.fields && this.segment.fields.length) {
            fields = this.segment.fields.map(key => {
                key = (this.sData.parent || '') + key;
                return this.sData.parser.field(key, pointers[key], this.sData.definitions, true, array);
            });
        }
        else {
            fields = [this.sData.parser.field(array, Object.assign(Object.assign({}, this.pointers[array]), { control: pointers }), this.sData.definitions)];
        }
        this.arrayFields.unshift(fields);
        this.nestedArraySegments.unshift(this.nestedSegments = filterAndCompileSegments(this.sData.segment.nestedSegments || [], this.sData.parser, this.sData.definitions, this.injector, this.segment.entryValue, this.segment.array));
    }
    moveArray(up, fromIndex) {
        let toIndex;
        if (up) {
            toIndex = fromIndex === 0 ? this.arrayFields.length - 1 : fromIndex - 1;
        }
        else {
            toIndex = fromIndex === (this.arrayFields.length - 1) ? 0 : fromIndex + 1;
        }
        moveItemInArray(this.arrayFields, fromIndex, toIndex);
        moveItemInArray(this.nestedArraySegments, fromIndex, toIndex);
        this.sData.parser.moveArrayItem((this.sData.parent || '') + this.segment.array, fromIndex, toIndex, this.sData.parent ? {
            pointer: this.sData.parent,
            index: 0
        } : undefined);
    }
    removeArrayItem(index) {
        this.sData.parser.removeArrayItem((this.sData.parent || '') + this.segment.array, index, this.sData.parent ? {
            pointer: this.sData.parent,
            index: 0
        } : undefined);
        this.nestedArraySegments.splice(index, 1);
        this.arrayFields.splice(index, 1);
    }
}
SegmentComponent.ɵfac = function SegmentComponent_Factory(t) { return new (t || SegmentComponent)(ɵngcc0.ɵɵdirectiveInject(SEGMENT_DATA), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };
SegmentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SegmentComponent, selectors: [["fb-segment"]], hostVars: 3, hostBindings: function SegmentComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵhostProperty("id", ctx.id);
        ɵngcc0.ɵɵclassMap(ctx.classes);
    } }, decls: 0, vars: 0, template: function SegmentComponent_Template(rf, ctx) { }, encapsulation: 2 });
SegmentComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [SEGMENT_DATA,] }] },
    { type: Injector }
];
SegmentComponent.propDecorators = {
    classes: [{ type: HostBinding, args: ['class',] }],
    id: [{ type: HostBinding, args: ['id',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SegmentComponent, [{
        type: Component,
        args: [{
                selector: 'fb-segment',
                template: ''
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [SEGMENT_DATA]
            }] }, { type: ɵngcc0.Injector }]; }, { classes: [{
            type: HostBinding,
            args: ['class']
        }], id: [{
            type: HostBinding,
            args: ['id']
        }] }); })();

class AccordionComponent extends SegmentComponent {
    ngOnInit() {
        super.ngOnInit();
        this.accordions = (this.sData.segment.configuration || []).map((accord) => ({
            title: accord.title,
            fields: (accord.fields || []).map(key => this.sData.parser.field(key, this.pointers[key], this.sData.definitions)),
            nestedSegments: filterAndCompileSegments(accord.nestedSegments || [], this.sData.parser, this.sData.definitions, this.injector, this.segment.entryValue)
        }));
    }
}
AccordionComponent.ɵfac = function AccordionComponent_Factory(t) { return ɵAccordionComponent_BaseFactory(t || AccordionComponent); };
AccordionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionComponent, selectors: [["fb-accordion"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 3, consts: [[4, "ngIf"], [3, "expanded", 4, "ngFor", "ngForOf"], [1, "p-y-m"], [3, "expanded"], [4, "ngFor", "ngForOf"], [3, "cdkPortalOutlet"]], template: function AccordionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, AccordionComponent_ng_container_0_Template, 5, 2, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, AccordionComponent_p_1_Template, 2, 1, "p", 0);
        ɵngcc0.ɵɵelementStart(2, "mat-accordion");
        ɵngcc0.ɵɵtemplate(3, AccordionComponent_mat_expansion_panel_3_Template, 7, 8, "mat-expansion-panel", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.segment.title || ctx.segment.subTitle);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.segment.description);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.accordions);
    } }, directives: function () { return [ɵngcc3.NgIf, ɵngcc4.MatAccordion, ɵngcc3.NgForOf, ɵngcc5.MatDivider, ɵngcc4.MatExpansionPanel, ɵngcc4.MatExpansionPanelHeader, ɵngcc4.MatExpansionPanelTitle, ɵngcc4.MatExpansionPanelDescription, ɵngcc6.CdkPortalOutlet]; }, pipes: function () { return [ShowFieldPipe]; }, styles: [""], changeDetection: 0 });
const ɵAccordionComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(AccordionComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionComponent, [{
        type: Component,
        args: [{
                selector: 'fb-accordion',
                template: "<ng-container *ngIf=\"segment.title || segment.subTitle\">\n  <h4 *ngIf=\"segment.title\">{{segment.title}}</h4>\n  <h5 *ngIf=\"segment.subTitle\">{{segment.subTitle}}</h5>\n  <div class=\"p-y-m\">\n    <mat-divider></mat-divider>\n  </div>\n</ng-container>\n\n<p *ngIf=\"segment.description\">{{segment.description}}</p>\n\n<mat-accordion>\n  <mat-expansion-panel *ngFor=\"let accord of accordions\" [expanded]=\"accord.expanded || false\">\n    <mat-expansion-panel-header>\n      <mat-panel-title *ngIf=\"accord.title\">{{accord.title}}</mat-panel-title>\n      <mat-panel-description *ngIf=\"accord.description\">\n        {{accord.description}}\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n\n    <ng-container *ngFor=\"let field of accord.fields | showField:sData.parser\">\n      <ng-template [cdkPortalOutlet]=\"field.portal\"></ng-template>\n    </ng-container>\n\n    <ng-container *ngFor=\"let nested of accord.nestedSegments\">\n      <ng-template [cdkPortalOutlet]=\"nested.component\"></ng-template>\n    </ng-container>\n  </mat-expansion-panel>\n</mat-accordion>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], null, null); })();

class CardComponent extends SegmentComponent {
    get fields() {
        return this.segment.fields;
    }
}
CardComponent.ɵfac = function CardComponent_Factory(t) { return ɵCardComponent_BaseFactory(t || CardComponent); };
CardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CardComponent, selectors: [["fb-card"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 8, vars: 4, consts: [[4, "ngIf"], [1, "fb-fields"], ["class", "mat-form-field-wrapper", 4, "ngIf"], [4, "ngIf", "ngIfElse"], ["regular", ""], ["class", "fs-small", 4, "ngIf"], [1, "flex-1"], ["mat-icon-button", "", 3, "matTooltip", "click", 4, "ngIf"], [1, "fs-small"], ["mat-icon-button", "", 3, "matTooltip", "click"], [1, "mat-form-field-wrapper"], [4, "ngFor", "ngForOf"], ["class", "fb-field-12", 4, "ngFor", "ngForOf"], [1, "ta-right", "fb-field-12"], ["mat-icon-button", "", 3, "click"], ["mat-icon-button", "", "color", "warn", 3, "click"], ["class", "fb-field-12 m-y-m nested-divider", 4, "ngIf"], [3, "cdkPortalOutlet"], [1, "fb-field-12"], [1, "fb-field-12", "m-y-m", "nested-divider"]], template: function CardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-card");
        ɵngcc0.ɵɵtemplate(1, CardComponent_mat_card_header_1_Template, 6, 3, "mat-card-header", 0);
        ɵngcc0.ɵɵelementStart(2, "mat-card-content");
        ɵngcc0.ɵɵelementStart(3, "div", 1);
        ɵngcc0.ɵɵtemplate(4, CardComponent_p_4_Template, 2, 1, "p", 2);
        ɵngcc0.ɵɵtemplate(5, CardComponent_ng_container_5_Template, 2, 1, "ng-container", 3);
        ɵngcc0.ɵɵtemplate(6, CardComponent_ng_template_6_Template, 3, 5, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r3 = ɵngcc0.ɵɵreference(7);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.segment.title || ctx.segment.subTitle || ctx.segment.array);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.segment.description);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.segment.array)("ngIfElse", _r3);
    } }, directives: function () { return [ɵngcc7.MatCard, ɵngcc3.NgIf, ɵngcc7.MatCardContent, ɵngcc7.MatCardHeader, ɵngcc8.MatButton, ɵngcc9.MatTooltip, ɵngcc10.MatIcon, ɵngcc3.NgForOf, ɵngcc6.CdkPortalOutlet]; }, pipes: function () { return [ɵngcc1.TranslocoPipe, ShowFieldPipe]; }, styles: [_c1], changeDetection: 0 });
const ɵCardComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(CardComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CardComponent, [{
        type: Component,
        args: [{
                selector: 'fb-card',
                template: "<mat-card>\n  <mat-card-header *ngIf=\"segment.title || segment.subTitle || segment.array\">\n    <div>\n      <h1 *ngIf=\"segment.title\">{{segment.title}}</h1>\n      <h2 class=\"fs-small\" *ngIf=\"segment.subTitle\">{{segment.subTitle}}</h2>\n    </div>\n    <div class=\"flex-1\"></div>\n    <button *ngIf=\"segment.array\" mat-icon-button (click)=\"addArrayItem()\" [matTooltip]=\"'GENERAL.ADD' | transloco\">\n      <mat-icon>add</mat-icon>\n    </button>\n  </mat-card-header>\n\n  <mat-card-content>\n    <div class=\"fb-fields\">\n      <p class=\"mat-form-field-wrapper\" *ngIf=\"segment.description\">{{segment.description}}</p>\n\n      <ng-container *ngIf=\"segment.array; else regular\">\n        <ng-container *ngFor=\"let fields of arrayFields; index as index; last as last\">\n          <ng-container *ngFor=\"let field of fields | showField:sData.parser\">\n            <ng-template [cdkPortalOutlet]=\"field.portal\"></ng-template>\n          </ng-container>\n\n          <div class=\"fb-field-12\" *ngFor=\"let nested of (nestedArraySegments[index] || [])\">\n            <ng-template [cdkPortalOutlet]=\"nested.component\"></ng-template>\n          </div>\n\n          <div class=\"ta-right fb-field-12\">\n            <button mat-icon-button (click)=\"moveArray(true, index)\">\n              <mat-icon>arrow_upward</mat-icon>\n            </button>\n            &nbsp;\n            <button mat-icon-button (click)=\"moveArray(false, index)\">\n              <mat-icon>arrow_downward</mat-icon>\n            </button>\n            &nbsp;\n            <button mat-icon-button color=\"warn\" (click)=\"removeArrayItem(index)\">\n              <mat-icon>delete_forever</mat-icon>\n            </button>\n          </div>\n          <hr *ngIf=\"!last\" class=\"fb-field-12 m-y-m nested-divider\">\n        </ng-container>\n      </ng-container>\n\n      <ng-template #regular>\n        <ng-container *ngFor=\"let field of fields | showField:sData.parser\">\n          <ng-template [cdkPortalOutlet]=\"field.portal\"></ng-template>\n        </ng-container>\n\n        <ng-container *ngFor=\"let nested of nestedSegments\">\n          <ng-template [cdkPortalOutlet]=\"nested.component\"></ng-template>\n        </ng-container>\n      </ng-template>\n    </div>\n  </mat-card-content>\n</mat-card>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".nested-divider{margin-left:-16px;margin-right:-16px}"]
            }]
    }], null, null); })();

class EmptyComponent extends SegmentComponent {
    get fields() {
        return this.segment.fields;
    }
}
EmptyComponent.ɵfac = function EmptyComponent_Factory(t) { return ɵEmptyComponent_BaseFactory(t || EmptyComponent); };
EmptyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EmptyComponent, selectors: [["fb-empty"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 4, consts: [[4, "ngIf"], [1, "fb-fields", "panel"], [4, "ngIf", "ngIfElse"], ["regular", ""], [1, "flex", "jc-between"], ["mat-icon-button", "", 3, "matTooltip", "click", 4, "ngIf"], [1, "p-y-m"], ["mat-icon-button", "", 3, "matTooltip", "click"], [4, "ngFor", "ngForOf"], ["class", "fb-field-12", 4, "ngFor", "ngForOf"], [1, "ta-right", "fb-field-12"], ["mat-icon-button", "", 3, "click"], ["mat-icon-button", "", "color", "warn", 3, "click"], ["class", "fb-field-12 m-y-m nested-divider", 4, "ngIf"], [3, "cdkPortalOutlet"], [1, "fb-field-12"], [1, "fb-field-12", "m-y-m", "nested-divider"]], template: function EmptyComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, EmptyComponent_ng_container_0_Template, 8, 3, "ng-container", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, EmptyComponent_p_2_Template, 2, 1, "p", 0);
        ɵngcc0.ɵɵtemplate(3, EmptyComponent_ng_container_3_Template, 2, 1, "ng-container", 2);
        ɵngcc0.ɵɵtemplate(4, EmptyComponent_ng_template_4_Template, 3, 5, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r3 = ɵngcc0.ɵɵreference(5);
        ɵngcc0.ɵɵproperty("ngIf", ctx.segment.title || ctx.segment.subTitle);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.segment.description);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.segment.array)("ngIfElse", _r3);
    } }, directives: function () { return [ɵngcc3.NgIf, ɵngcc5.MatDivider, ɵngcc8.MatButton, ɵngcc9.MatTooltip, ɵngcc10.MatIcon, ɵngcc3.NgForOf, ɵngcc6.CdkPortalOutlet]; }, pipes: function () { return [ɵngcc1.TranslocoPipe, ShowFieldPipe]; }, styles: [_c1], changeDetection: 0 });
const ɵEmptyComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(EmptyComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmptyComponent, [{
        type: Component,
        args: [{
                selector: 'fb-empty',
                template: "<ng-container *ngIf=\"segment.title || segment.subTitle\">\n  <div class=\"flex jc-between\">\n    <div>\n      <h4 *ngIf=\"segment.title\">{{segment.title}}</h4>\n      <h5 *ngIf=\"segment.subTitle\">{{segment.subTitle}}</h5>\n    </div>\n    <button *ngIf=\"segment.array\" mat-icon-button (click)=\"addArrayItem()\" [matTooltip]=\"'GENERAL.ADD' | transloco\">\n      <mat-icon>add</mat-icon>\n    </button>\n  </div>\n  <div class=\"p-y-m\">\n    <mat-divider></mat-divider>\n  </div>\n</ng-container>\n\n<div class=\"fb-fields panel\">\n  <p *ngIf=\"segment.description\">{{segment.description}}</p>\n\n  <ng-container *ngIf=\"segment.array; else regular\">\n    <ng-container *ngFor=\"let fields of arrayFields; index as index; last as last\">\n      <ng-container *ngFor=\"let field of fields | showField:sData.parser\">\n        <ng-template [cdkPortalOutlet]=\"field.portal\"></ng-template>\n      </ng-container>\n\n      <div class=\"fb-field-12\" *ngFor=\"let nested of (nestedArraySegments[index] || [])\">\n        <ng-template [cdkPortalOutlet]=\"nested.component\"></ng-template>\n      </div>\n\n      <div class=\"ta-right fb-field-12\">\n        <button mat-icon-button (click)=\"moveArray(true, index)\">\n          <mat-icon>arrow_upward</mat-icon>\n        </button>\n        &nbsp;\n        <button mat-icon-button (click)=\"moveArray(false, index)\">\n          <mat-icon>arrow_downward</mat-icon>\n        </button>\n        &nbsp;\n        <button mat-icon-button color=\"warn\" (click)=\"removeArrayItem(index)\">\n          <mat-icon>delete_forever</mat-icon>\n        </button>\n      </div>\n      <hr *ngIf=\"!last\" class=\"fb-field-12 m-y-m nested-divider\">\n    </ng-container>\n  </ng-container>\n\n  <ng-template #regular>\n    <ng-container *ngFor=\"let field of fields | showField:sData.parser\">\n      <ng-template [cdkPortalOutlet]=\"field.portal\"></ng-template>\n    </ng-container>\n\n    <ng-container *ngFor=\"let nested of nestedSegments\">\n      <ng-template [cdkPortalOutlet]=\"nested.component\"></ng-template>\n    </ng-container>\n  </ng-template>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".nested-divider{margin-left:-16px;margin-right:-16px}"]
            }]
    }], null, null); })();

class StepperComponent extends SegmentComponent {
}
StepperComponent.ɵfac = function StepperComponent_Factory(t) { return ɵStepperComponent_BaseFactory(t || StepperComponent); };
StepperComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: StepperComponent, selectors: [["fb-stepper"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 0, template: function StepperComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p");
        ɵngcc0.ɵɵtext(1, " stepper works!\n");
        ɵngcc0.ɵɵelementEnd();
    } }, styles: [""], changeDetection: 0 });
const ɵStepperComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(StepperComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StepperComponent, [{
        type: Component,
        args: [{
                selector: 'fb-stepper',
                template: "<p>\n  stepper works!\n</p>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], null, null); })();

function safeEval(method) {
    let final;
    try {
        // tslint:disable-next-line:no-eval
        final = eval(method);
    }
    catch (e) { }
    return final;
}

class TabsComponent extends SegmentComponent {
    get configuration() {
        return this.segment.configuration;
    }
    ngOnInit() {
        super.ngOnInit();
        if (this.configuration.selectedTabChange) {
            this.selectedTabChange = safeEval(this.configuration.selectedTabChange);
        }
        this.tabs = this.configuration.tabs.map(tab => (Object.assign(Object.assign({}, tab), { fields: (tab.fields || []).map(key => this.sData.parser.field(key, this.pointers[key], this.sData.definitions)), nestedSegments: filterAndCompileSegments(tab.nestedSegments || [], this.sData.parser, this.sData.definitions, this.injector, this.segment.entryValue) })));
    }
    tabChange(event) {
        if (this.selectedTabChange) {
            this.selectedTabChange(event, this.sData);
        }
    }
}
TabsComponent.ɵfac = function TabsComponent_Factory(t) { return ɵTabsComponent_BaseFactory(t || TabsComponent); };
TabsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabsComponent, selectors: [["fb-tabs"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 7, consts: [[4, "ngIf"], [3, "selectedIndex", "dynamicHeight", "disableRipple", "selectedTabChange"], [3, "label", "disabled", 4, "ngFor", "ngForOf"], [1, "p-y-m"], [3, "label", "disabled"], [1, "p-a-s"], [4, "ngFor", "ngForOf"], [3, "cdkPortalOutlet"]], template: function TabsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, TabsComponent_ng_container_0_Template, 5, 2, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, TabsComponent_p_1_Template, 2, 1, "p", 0);
        ɵngcc0.ɵɵelementStart(2, "mat-tab-group", 1);
        ɵngcc0.ɵɵlistener("selectedTabChange", function TabsComponent_Template_mat_tab_group_selectedTabChange_2_listener($event) { return ctx.tabChange($event); });
        ɵngcc0.ɵɵtemplate(3, TabsComponent_mat_tab_3_Template, 5, 7, "mat-tab", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.segment.title || ctx.segment.subTitle);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.segment.description);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("selectedIndex", ctx.configuration.selectedIndex)("dynamicHeight", ctx.configuration.dynamicHeight)("disableRipple", ctx.configuration.disableRipple);
        ɵngcc0.ɵɵattribute("mat-align-tabs", ctx.configuration.alignment);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.tabs);
    } }, directives: function () { return [ɵngcc3.NgIf, ɵngcc11.MatTabGroup, ɵngcc3.NgForOf, ɵngcc5.MatDivider, ɵngcc11.MatTab, ɵngcc6.CdkPortalOutlet]; }, pipes: function () { return [ShowFieldPipe]; }, styles: [""], changeDetection: 0 });
const ɵTabsComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(TabsComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabsComponent, [{
        type: Component,
        args: [{
                selector: 'fb-tabs',
                template: "<ng-container *ngIf=\"segment.title || segment.subTitle\">\n  <h4 *ngIf=\"segment.title\">{{segment.title}}</h4>\n  <h5 *ngIf=\"segment.subTitle\">{{segment.subTitle}}</h5>\n  <div class=\"p-y-m\">\n    <mat-divider></mat-divider>\n  </div>\n</ng-container>\n\n<p *ngIf=\"segment.description\">{{segment.description}}</p>\n\n<mat-tab-group\n  [selectedIndex]=\"configuration.selectedIndex\"\n  [dynamicHeight]=\"configuration.dynamicHeight\"\n  [disableRipple]=\"configuration.disableRipple\"\n  [attr.mat-align-tabs]=\"configuration.alignment\"\n  (selectedTabChange)=\"tabChange($event)\">\n\n  <mat-tab\n    *ngFor=\"let tab of tabs\"\n    [label]=\"tab.title\"\n    [disabled]=\"tab.disabled\">\n\n    <div class=\"p-a-s\">\n      <ng-container *ngFor=\"let field of tab.fields | showField:sData.parser\">\n        <ng-template [cdkPortalOutlet]=\"field.portal\"></ng-template>\n      </ng-container>\n    </div>\n\n    <ng-container *ngFor=\"let nested of tab.nestedSegments\">\n      <ng-template [cdkPortalOutlet]=\"nested.component\"></ng-template>\n    </ng-container>\n  </mat-tab>\n</mat-tab-group>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], null, null); })();

const SEGMENT_TYPE_COMPONENT_MAP = {
    [SegmentType.Empty]: EmptyComponent,
    [SegmentType.Card]: CardComponent,
    [SegmentType.Accordion]: AccordionComponent,
    [SegmentType.Tabs]: TabsComponent,
    [SegmentType.Stepper]: StepperComponent
};

var ConditionType;
(function (ConditionType) {
    ConditionType["Function"] = "function";
    ConditionType["Statement"] = "statement";
})(ConditionType || (ConditionType = {}));
var ConditionAction;
(function (ConditionAction) {
    ConditionAction["Show"] = "show";
    ConditionAction["Hide"] = "hide";
})(ConditionAction || (ConditionAction = {}));
var ConditionEvaluate;
(function (ConditionEvaluate) {
    ConditionEvaluate["OnLoad"] = "onLoad";
    ConditionEvaluate["OnChange"] = "onChange";
})(ConditionEvaluate || (ConditionEvaluate = {}));

function compileSegment(segment, parser, definitions, injector, entryValue, parent = '') {
    const classes = [];
    let fields = [];
    if (segment.columnsDesktop) {
        classes.push(`col-${segment.columnsDesktop}`);
    }
    if (segment.columnsTablet) {
        classes.push(`col-m-${segment.columnsTablet}`);
    }
    if (segment.columnsMobile) {
        classes.push(`col-s-${segment.columnsMobile}`);
    }
    /**
     * If there aren't any column definitions
     * default to full width
     */
    if (!classes.length) {
        classes.push('col-12');
    }
    if (segment.classes) {
        classes.push(...segment.classes);
    }
    if (segment.fields) {
        /**
         * If it's an array fields aren' parsed
         */
        if (segment.array) {
            // @ts-ignore
            fields = (segment.fields || []).map(fi => segment.array + fi);
        }
        else {
            fields = (segment.fields || [])
                // @ts-ignore
                .reduce((acc, key) => {
                const definition = parser.getFromDefinitions(key, definitions);
                if (!definition ||
                    !definition.roles ||
                    (typeof definition.roles === 'string' ?
                        definition.roles === parser.role :
                        definition.roles.includes(parser.role))) {
                    acc.push(parser.field(key, parser.pointers[key], definitions));
                }
                return acc;
            }, []);
        }
    }
    const compiledSegment = Object.assign(Object.assign({}, segment), { classes,
        fields,
        entryValue });
    /**
     * TODO:
     * Statement support
     */
    if (segment.conditions) {
        compiledSegment.conditions = [];
        const valToPass = entryValue || {};
        for (const cur of segment.conditions) {
            let condition;
            const type = cur.type || ConditionType.Function;
            const action = cur.action || ConditionAction.Show;
            const evaluateOn = cur.evaluateOn || ConditionEvaluate.OnLoad;
            const evaluateStates = cur.evaluateStates || [0, 1, 2];
            if (cur.condition) {
                condition = safeEval(cur.condition);
            }
            if (condition) {
                /**
                 * Evaluate on load conditions
                 */
                if (evaluateOn === ConditionEvaluate.OnLoad) {
                    /**
                     * Check if items should be excluded right away
                     */
                    if ((action === ConditionAction.Show && !condition(valToPass)) ||
                        (action === ConditionAction.Hide && condition(valToPass))) {
                        return null;
                    }
                }
                compiledSegment.conditions.push(Object.assign({ condition,
                    type,
                    action,
                    evaluateStates,
                    evaluateOn }, cur.data && {
                    data: cur.data
                }));
            }
        }
    }
    return Object.assign({ component: new ComponentPortal(SEGMENT_TYPE_COMPONENT_MAP[segment.type || SegmentType.Card], null, createSegmentInjector(injector, Object.assign({ segment: compiledSegment, parser,
            definitions }, parent && { parent }))) }, compiledSegment);
}

function filterAndCompileSegments(segments, parser, definitions, injector, value, parent) {
    return segments.reduce((acc, cur) => {
        if (!cur.authorization || cur.authorization.includes(parser.role)) {
            const compiled = compileSegment(cur, parser, definitions, injector, value, parent);
            if (compiled) {
                acc.push(
                // @ts-ignore
                compiled);
            }
        }
        return acc;
    }, []);
}

var ComponentType;
(function (ComponentType) {
    ComponentType["Input"] = "input";
    ComponentType["Select"] = "select";
    ComponentType["File"] = "file";
    ComponentType["Image"] = "image";
    ComponentType["Gallery"] = "gallery";
    ComponentType["Toggle"] = "toggle";
    ComponentType["Checkbox"] = "checkbox";
    ComponentType["Date"] = "date";
    ComponentType["Range"] = "range";
    ComponentType["Radio"] = "radio";
    ComponentType["Slider"] = "slider";
    ComponentType["Autocomplete"] = "autocomplete";
    ComponentType["Wysiwyg"] = "wysiwyg";
    ComponentType["Chips"] = "chips";
    ComponentType["Draggable"] = "draggable";
    ComponentType["Textarea"] = "textarea";
})(ComponentType || (ComponentType = {}));

class DbService {
    getDocuments(moduleId, pageSize, sort, cursor, filters) {
        return of([]);
    }
    getDocumentsSimple(moduleId, orderBy, filter) {
        return of([]);
    }
    getStateChanges(moduleId, pageSize, sort, cursor, filters) {
        return of([]);
    }
    getDocument(moduleId, documentId, stream = false) {
        return of();
    }
    setDocument(moduleId, documentId, data, options) {
        return of();
    }
    removeDocument(moduleId, documentId) {
        return of();
    }
    createUserAccount(email, password) {
        return of();
    }
    removeUserAccount(id) {
        return of();
    }
}

const COMPONENT_DATA = new InjectionToken('COMPONENT_DATA');
function createComponentInjector(injector, dataToPass) {
    const injectorTokens = new WeakMap();
    injectorTokens.set(COMPONENT_DATA, dataToPass);
    return new PortalInjector(injector, injectorTokens);
}

// @dynamic
class FieldComponent {
    constructor(cData) {
        this.cData = cData;
        const classes = [
            `fb-field-${this.cData.columnsDesktop || 12}`
        ];
        if (this.cData.columnsTablet) {
            classes.push(`m-fb-field-${this.cData.columnsTablet}`);
        }
        if (this.cData.columnsMobile) {
            classes.push(`s-fb-field-${this.cData.columnsMobile}`);
        }
        if (this.cData.class) {
            classes.push(this.cData.class);
        }
        this.class = classes.join(' ');
    }
}
FieldComponent.ɵfac = function FieldComponent_Factory(t) { return new (t || FieldComponent)(ɵngcc0.ɵɵdirectiveInject(COMPONENT_DATA)); };
FieldComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FieldComponent, selectors: [["fb-field"]], hostVars: 2, hostBindings: function FieldComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.class);
    } }, decls: 0, vars: 0, template: function FieldComponent_Template(rf, ctx) { }, encapsulation: 2 });
FieldComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [COMPONENT_DATA,] }] }
];
FieldComponent.propDecorators = {
    class: [{ type: HostBinding, args: ['class',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FieldComponent, [{
        type: Component,
        args: [{
                selector: 'fb-field',
                template: ''
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [COMPONENT_DATA]
            }] }]; }, { class: [{
            type: HostBinding,
            args: ['class']
        }] }); })();

function getHsd(key, data) {
    if (data[key]) {
        let item;
        switch (data[key].type) {
            case 'dynamic':
                item = safeEval(data[key].value);
                if (item) {
                    return data.form.valueChanges
                        .pipe(map(value => item(data.control.value, value)));
                }
                break;
            case 'static':
                item = safeEval(data[key].value);
                if (item) {
                    return of(item(data.control.value, data.form.getRawValue()));
                }
                break;
            case 'html':
            default:
                return of(data[key].value);
        }
    }
    return of('');
}

class AutocompleteComponent extends FieldComponent {
    constructor(cData, dbService) {
        super(cData);
        this.cData = cData;
        this.dbService = dbService;
        this.loading$ = new BehaviorSubject(true);
    }
    ngOnInit() {
        this.prefix$ = getHsd('prefix', this.cData);
        this.suffix$ = getHsd('suffix', this.cData);
        let dataSet$;
        if (this.cData.populate) {
            const { populate } = this.cData;
            dataSet$ = this.dbService
                .getDocumentsSimple(this.cData.populate.collection, this.cData.populate.orderBy, this.cData.populate.filter)
                .pipe(map(docs => docs.map(doc => ({
                value: doc[populate.valueKey || 'id'],
                name: doc[populate.nameKey]
            }))), tap(() => this.loading$.next(false)));
        }
        else {
            dataSet$ = of(this.cData.dataSet);
        }
        this.filteredSet$ = dataSet$.pipe(switchMap(dataSet => this.cData.control.valueChanges.pipe(startWith(this.cData.control.value), map(value => {
            if (!value) {
                return dataSet;
            }
            value = value.toLowerCase();
            return dataSet.filter(item => item.name.toLowerCase().includes(value));
        }))));
    }
}
AutocompleteComponent.ɵfac = function AutocompleteComponent_Factory(t) { return new (t || AutocompleteComponent)(ɵngcc0.ɵɵdirectiveInject(COMPONENT_DATA), ɵngcc0.ɵɵdirectiveInject(DbService)); };
AutocompleteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutocompleteComponent, selectors: [["fb-autocomplete"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 15, consts: [["appearance", "outline", 1, "w-full"], ["matInput", "", 3, "placeholder", "formControl", "matAutocomplete"], ["auto", "matAutocomplete"], [3, "value", 4, "ngFor", "ngForOf"], [3, "innerHTML", 4, "ngIf"], ["matSuffix", "", 3, "innerHTML", 4, "ngIf"], ["matPrefix", "", 3, "innerHTML", 4, "ngIf"], [3, "value"], [3, "innerHTML"], ["matSuffix", "", 3, "innerHTML"], ["matPrefix", "", 3, "innerHTML"]], template: function AutocompleteComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-form-field", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-label");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "transloco");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "input", 1);
        ɵngcc0.ɵɵpipe(5, "transloco");
        ɵngcc0.ɵɵelementStart(6, "mat-autocomplete", null, 2);
        ɵngcc0.ɵɵtemplate(8, AutocompleteComponent_mat_option_8_Template, 2, 2, "mat-option", 3);
        ɵngcc0.ɵɵpipe(9, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, AutocompleteComponent_mat_hint_10_Template, 2, 3, "mat-hint", 4);
        ɵngcc0.ɵɵtemplate(11, AutocompleteComponent_span_11_Template, 3, 5, "span", 5);
        ɵngcc0.ɵɵtemplate(12, AutocompleteComponent_span_12_Template, 3, 5, "span", 6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(7);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 9, ctx.cData.label || ""));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind1(5, 11, ctx.cData.placeholder || ""))("formControl", ctx.cData.control)("matAutocomplete", _r0);
        ɵngcc0.ɵɵattribute("autocomplete", ctx.cData.autocomplete || "on");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(9, 13, ctx.filteredSet$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.hint);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.suffix);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.prefix);
    } }, directives: [ɵngcc12.MatFormField, ɵngcc12.MatLabel, ɵngcc13.MatInput, ɵngcc14.DefaultValueAccessor, ɵngcc15.MatAutocompleteTrigger, ɵngcc14.NgControlStatus, ɵngcc14.FormControlDirective, ɵngcc15.MatAutocomplete, ɵngcc3.NgForOf, ɵngcc3.NgIf, ɵngcc16.MatOption, ɵngcc12.MatHint, ɵngcc12.MatSuffix, ɵngcc12.MatPrefix], pipes: [ɵngcc1.TranslocoPipe, ɵngcc3.AsyncPipe, ɵngcc17.SanitizePipe], styles: [""], changeDetection: 0 });
AutocompleteComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [COMPONENT_DATA,] }] },
    { type: DbService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutocompleteComponent, [{
        type: Component,
        args: [{
                selector: 'fb-autocomplete',
                template: "<mat-form-field appearance=\"outline\" class=\"w-full\">\n  <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n  <input\n    matInput\n    [placeholder]=\"(cData.placeholder || '') | transloco\"\n    [attr.autocomplete]=\"cData.autocomplete || 'on'\"\n    [formControl]=\"cData.control\"\n    [matAutocomplete]=\"auto\">\n  <mat-autocomplete #auto=\"matAutocomplete\">\n    <mat-option *ngFor=\"let data of filteredSet$ | async\" [value]=\"data.value\">\n      {{data.name}}\n    </mat-option>\n  </mat-autocomplete>\n  <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n  <span *ngIf=\"cData.suffix\" matSuffix [innerHTML]=\"((suffix$ | async) || '') | jpSanitize\"></span>\n  <span *ngIf=\"cData.prefix\" matPrefix [innerHTML]=\"((prefix$ | async) || '') | jpSanitize\"></span>\n</mat-form-field>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [COMPONENT_DATA]
            }] }, { type: DbService }]; }, null); })();

class CheckboxComponent extends FieldComponent {
}
CheckboxComponent.ɵfac = function CheckboxComponent_Factory(t) { return ɵCheckboxComponent_BaseFactory(t || CheckboxComponent); };
CheckboxComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CheckboxComponent, selectors: [["fb-checkbox"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 5, consts: [[1, "mat-form-field-wrapper"], [3, "formControl"], ["class", "fs-small fg-secondary", 4, "ngIf"], [1, "fs-small", "fg-secondary"]], template: function CheckboxComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-checkbox", 1);
        ɵngcc0.ɵɵelementStart(2, "mat-label");
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "transloco");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, CheckboxComponent_p_5_Template, 3, 3, "p", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("formControl", ctx.cData.control);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 3, ctx.cData.label));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.hint);
    } }, directives: [ɵngcc18.MatCheckbox, ɵngcc14.NgControlStatus, ɵngcc14.FormControlDirective, ɵngcc12.MatLabel, ɵngcc3.NgIf], pipes: [ɵngcc1.TranslocoPipe], styles: [""], changeDetection: 0 });
const ɵCheckboxComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(CheckboxComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxComponent, [{
        type: Component,
        args: [{
                selector: 'fb-checkbox',
                template: "<div class=\"mat-form-field-wrapper\">\n  <mat-checkbox [formControl]=\"cData.control\">\n    <mat-label>{{cData.label | transloco}}</mat-label>\n  </mat-checkbox>\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.hint\">\n    {{cData.hint | transloco}}\n  </p>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], null, null); })();

class ChipsComponent extends FieldComponent {
    constructor() {
        super(...arguments);
        this.data = [];
    }
    ngOnInit() {
        this.data = this.cData.control.value;
        this.removable = this.cData.hasOwnProperty('removable') ? this.cData.removable : true;
        this.prefix$ = getHsd('prefix', this.cData);
        this.suffix$ = getHsd('suffix', this.cData);
    }
    add(event) {
        const value = (event.value || '').trim();
        const input = event.input;
        if (value && (this.cData.unique ? !this.data.includes(value) : true)) {
            this.data.push(value);
            this.cData.control.setValue(this.data);
        }
        if (input) {
            input.value = '';
        }
    }
    remove(chip) {
        const index = this.cData.control.value.indexOf(chip);
        if (index >= 0) {
            this.data.splice(index, 1);
            this.cData.control.setValue(this.data);
        }
    }
}
ChipsComponent.ɵfac = function ChipsComponent_Factory(t) { return ɵChipsComponent_BaseFactory(t || ChipsComponent); };
ChipsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ChipsComponent, selectors: [["fb-chips"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 12, vars: 12, consts: [["appearance", "outline", 1, "w-full"], ["chipList", ""], [3, "selectable", "removable", "removed", 4, "ngFor", "ngForOf"], ["matInput", "", 3, "placeholder", "matChipInputFor", "matChipInputTokenEnd"], ["matSuffix", "", 3, "innerHTML", 4, "ngIf"], ["matPrefix", "", 3, "innerHTML", 4, "ngIf"], [3, "innerHTML", 4, "ngIf"], [3, "selectable", "removable", "removed"], ["matChipRemove", "", 4, "ngIf"], ["matChipRemove", ""], ["matSuffix", "", 3, "innerHTML"], ["matPrefix", "", 3, "innerHTML"], [3, "innerHTML"]], template: function ChipsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-form-field", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-label");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "transloco");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "mat-chip-list", null, 1);
        ɵngcc0.ɵɵtemplate(6, ChipsComponent_mat_chip_6_Template, 3, 4, "mat-chip", 2);
        ɵngcc0.ɵɵelementStart(7, "input", 3);
        ɵngcc0.ɵɵlistener("matChipInputTokenEnd", function ChipsComponent_Template_input_matChipInputTokenEnd_7_listener($event) { return ctx.add($event); });
        ɵngcc0.ɵɵpipe(8, "transloco");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, ChipsComponent_span_9_Template, 3, 5, "span", 4);
        ɵngcc0.ɵɵtemplate(10, ChipsComponent_span_10_Template, 3, 5, "span", 5);
        ɵngcc0.ɵɵtemplate(11, ChipsComponent_mat_hint_11_Template, 2, 3, "mat-hint", 6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(5);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 8, ctx.cData.label || ""));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.data);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind1(8, 10, ctx.cData.placeholder || ""))("matChipInputFor", _r0);
        ɵngcc0.ɵɵattribute("autocomplete", ctx.cData.autocomplete || "on");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.suffix);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.prefix);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.hint);
    } }, directives: [ɵngcc12.MatFormField, ɵngcc12.MatLabel, ɵngcc19.MatChipList, ɵngcc3.NgForOf, ɵngcc13.MatInput, ɵngcc19.MatChipInput, ɵngcc3.NgIf, ɵngcc19.MatChip, ɵngcc10.MatIcon, ɵngcc19.MatChipRemove, ɵngcc12.MatSuffix, ɵngcc12.MatPrefix, ɵngcc12.MatHint], pipes: [ɵngcc1.TranslocoPipe, ɵngcc17.SanitizePipe, ɵngcc3.AsyncPipe], styles: [""], changeDetection: 0 });
const ɵChipsComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(ChipsComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ChipsComponent, [{
        type: Component,
        args: [{
                selector: 'fb-chips',
                template: "<mat-form-field class=\"w-full\" appearance=\"outline\">\n  <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n  <mat-chip-list #chipList>\n    <mat-chip\n      *ngFor=\"let chip of data\"\n      [selectable]=\"cData.selectable\"\n      [removable]=\"removable\"\n      (removed)=\"remove(chip)\">\n      {{chip}}\n      <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n    </mat-chip>\n    <input\n      matInput\n      [attr.autocomplete]=\"cData.autocomplete || 'on'\"\n      [placeholder]=\"(cData.placeholder || '') | transloco\"\n      (matChipInputTokenEnd)=\"add($event)\"\n      [matChipInputFor]=\"chipList\">\n  </mat-chip-list>\n  <span *ngIf=\"cData.suffix\" matSuffix [innerHTML]=\"((suffix$ | async) || '') | jpSanitize\"></span>\n  <span *ngIf=\"cData.prefix\" matPrefix [innerHTML]=\"((prefix$ | async) || '') | jpSanitize\"></span>\n  <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n</mat-form-field>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], null, null); })();

/**
 * Deep clones the given AbstractControl, preserving values, validators, async validators, and disabled status.
 * @param control AbstractControl
 * @returns AbstractControl
 */
function cloneAbstractControl(control) {
    let newControl;
    if (control instanceof FormGroup) {
        const formGroup = new FormGroup({}, control.validator, control.asyncValidator);
        const controls = control.controls;
        Object.keys(controls).forEach(key => {
            formGroup.addControl(key, cloneAbstractControl(controls[key]));
        });
        newControl = formGroup;
    }
    else if (control instanceof FormArray) {
        const formArray = new FormArray([], control.validator, control.asyncValidator);
        control.controls.forEach(formControl => formArray.push(cloneAbstractControl(formControl)));
        newControl = formArray;
    }
    else if (control instanceof FormControl) {
        newControl = new FormControl(control.value, control.validator, control.asyncValidator);
    }
    else {
        throw new Error('Error: unexpected control value');
    }
    if (control.disabled) {
        newControl.disable({ emitEvent: false });
    }
    return newControl;
}

class DateFieldComponent extends FieldComponent {
    constructor(cData, cdr, formBuilderService) {
        super(cData);
        this.cData = cData;
        this.cdr = cdr;
        this.formBuilderService = formBuilderService;
    }
    ngOnInit() {
        this.formBuilderService.saveComponents.push(this);
        this.startDate = this.cData.startAt
            ? new Date(this.cData.startAt)
            : new Date();
        const date = new Date(this.cData.control.value);
        this.entryControl = cloneAbstractControl(this.cData.control);
        this.hoursControl = new FormControl({ value: date.getHours() || 0, disabled: this.cData.control.disabled }, [Validators.min(0), Validators.max(23)]);
        this.minutesControl = new FormControl({ value: date.getMinutes() || 0, disabled: this.cData.control.disabled }, [Validators.min(0), Validators.max(59)]);
        /**
         * Dirty hack for getting numbers to display properly might need revisiting
         */
        if (typeof this.entryControl.value === 'number' ||
            typeof this.entryControl.value === 'string') {
            this.entryControl.setValue(new Date(this.entryControl.value));
        }
    }
    save() {
        return of({}).pipe(tap(() => {
            let value = this.entryControl.value;
            if (value) {
                if (this.cData.includeTime) {
                    value.setHours(this.hoursControl.value || 0);
                    value.setMinutes(this.minutesControl.value || 0);
                }
                if (this.cData.format) {
                    if (this.cData.format === 'number') {
                        value = value.getTime();
                    }
                    else {
                        const pipe = new DatePipe('en');
                        value = pipe.transform(value, this.cData.format);
                    }
                }
            }
            this.cData.control.setValue(value);
        }));
    }
}
DateFieldComponent.ɵfac = function DateFieldComponent_Factory(t) { return new (t || DateFieldComponent)(ɵngcc0.ɵɵdirectiveInject(COMPONENT_DATA), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(FormBuilderService)); };
DateFieldComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DateFieldComponent, selectors: [["fb-date-field"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 18, consts: [[1, "grid"], ["appearance", "outline", 1, "w-full"], ["matInput", "", 3, "matDatepicker", "placeholder", "formControl"], ["matSuffix", "", 3, "for"], [3, "touchUi", "startView", "startAt"], ["picker", ""], [3, "innerHTML", 4, "ngIf"], [4, "ngIf"], [3, "innerHTML"], [1, "col-2"], ["matInput", "", "type", "number", 3, "placeholder", "formControl"], [1, "col-2", "p-r-0"]], template: function DateFieldComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵelementStart(2, "mat-form-field", 1);
        ɵngcc0.ɵɵelementStart(3, "mat-label");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "transloco");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(6, "input", 2);
        ɵngcc0.ɵɵpipe(7, "transloco");
        ɵngcc0.ɵɵelement(8, "mat-datepicker-toggle", 3);
        ɵngcc0.ɵɵelement(9, "mat-datepicker", 4, 5);
        ɵngcc0.ɵɵtemplate(11, DateFieldComponent_mat_hint_11_Template, 2, 3, "mat-hint", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(12, DateFieldComponent_ng_container_12_Template, 13, 10, "ng-container", 7);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(10);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("p-l-0 ", !ctx.cData.includeTime ? "col-12" : "col-8", "");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 14, ctx.cData.label || ""), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("matDatepicker", _r0)("placeholder", ɵngcc0.ɵɵpipeBind1(7, 16, ctx.cData.placeholder || ""))("formControl", ctx.entryControl);
        ɵngcc0.ɵɵattribute("autocomplete", ctx.cData.autocomplete || "off");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", _r0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("touchUi", ctx.cData.touchUi || false)("startView", ctx.cData.startView || "month")("startAt", ctx.startDate);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.hint);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.includeTime);
    } }, directives: [ɵngcc12.MatFormField, ɵngcc12.MatLabel, ɵngcc13.MatInput, ɵngcc20.MatDatepickerInput, ɵngcc14.DefaultValueAccessor, ɵngcc14.NgControlStatus, ɵngcc14.FormControlDirective, ɵngcc20.MatDatepickerToggle, ɵngcc12.MatSuffix, ɵngcc20.MatDatepicker, ɵngcc3.NgIf, ɵngcc12.MatHint, ɵngcc14.NumberValueAccessor], pipes: [ɵngcc1.TranslocoPipe, ɵngcc17.SanitizePipe], styles: [""], changeDetection: 0 });
DateFieldComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [COMPONENT_DATA,] }] },
    { type: ChangeDetectorRef },
    { type: FormBuilderService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateFieldComponent, [{
        type: Component,
        args: [{
                selector: 'fb-date-field',
                template: "<div class=\"grid\">\n  <div class=\"p-l-0 {{!cData.includeTime ? 'col-12' : 'col-8'}}\">\n    <mat-form-field class=\"w-full\" appearance=\"outline\">\n      <mat-label>\n        {{(cData.label || '') | transloco}}\n      </mat-label>\n      <input\n        matInput\n        [attr.autocomplete]=\"cData.autocomplete || 'off'\"\n        [matDatepicker]=\"picker\"\n        [placeholder]=\"(cData.placeholder || '') | transloco\"\n        [formControl]=\"entryControl\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker\n        #picker\n        [touchUi]=\"cData.touchUi || false\"\n        [startView]=\"cData.startView || 'month'\"\n        [startAt]=\"startDate\">\n      </mat-datepicker>\n      <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n    </mat-form-field>\n  </div>\n  <ng-container *ngIf=\"cData.includeTime\">\n    <div class=\"col-2\">\n      <mat-form-field class=\"w-full\" class=\"w-full\" appearance=\"outline\">\n        <mat-label>{{(cData.labelHours || 'HOURS') | transloco}}</mat-label>\n        <input matInput type=\"number\" [placeholder]=\"cData.placeholderHours || 'HH'\" [formControl]=\"hoursControl\">\n      </mat-form-field>\n    </div>\n    <div class=\"col-2 p-r-0\">\n      <mat-form-field class=\"w-full\" appearance=\"outline\">\n        <mat-label>{{(cData.labelMinutes || 'MINUTES') | transloco}}</mat-label>\n        <input matInput type=\"number\" [placeholder]=\"cData.placeholderMinutes || 'MM'\" [formControl]=\"minutesControl\">\n      </mat-form-field>\n    </div>\n  </ng-container>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [COMPONENT_DATA]
            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: FormBuilderService }]; }, null); })();

class DraggableListComponent extends FieldComponent {
    ngOnInit() {
        if (this.cData.control.value.length) {
            this.cData.options.sort((optionOne, optionTwo) => {
                const indexOne = this.cData.control.value.indexOf(optionOne);
                const indexTwo = this.cData.control.value.indexOf(optionTwo);
                return indexTwo - indexOne;
            });
        }
    }
    drop(event) {
        moveItemInArray(this.cData.options, event.previousIndex, event.currentIndex);
        this.cData.control.setValue(this.cData.options.map(val => {
            return val.value;
        }));
    }
}
DraggableListComponent.ɵfac = function DraggableListComponent_Factory(t) { return ɵDraggableListComponent_BaseFactory(t || DraggableListComponent); };
DraggableListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DraggableListComponent, selectors: [["fb-draggable-list"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[1, "mat-form-field-wrapper"], ["class", "fs-small fg-secondary", 4, "ngIf"], ["cdkDropList", "", 1, "fb-draggable-list", 3, "cdkDropListDropped"], ["class", "fb-draggable-list-item", "cdkDrag", "", 3, "cdkDragDisabled", 4, "ngFor", "ngForOf"], [1, "fs-small", "fg-secondary"], ["cdkDrag", "", 1, "fb-draggable-list-item", 3, "cdkDragDisabled"]], template: function DraggableListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, DraggableListComponent_p_1_Template, 3, 3, "p", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵlistener("cdkDropListDropped", function DraggableListComponent_Template_div_cdkDropListDropped_2_listener($event) { return ctx.drop($event); });
        ɵngcc0.ɵɵtemplate(3, DraggableListComponent_div_3_Template, 2, 3, "div", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.label);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.cData.options);
    } }, directives: [ɵngcc3.NgIf, ɵngcc21.CdkDropList, ɵngcc3.NgForOf, ɵngcc21.CdkDrag], pipes: [ɵngcc1.TranslocoPipe], styles: [".fb-draggable-list[_ngcontent-%COMP%]{border:1px solid var(--panel-tertiary);border-radius:4px;overflow:hidden}.fb-draggable-list-item[_ngcontent-%COMP%]{align-items:center;background:var(--panel-theme);border-bottom:1px solid var(--panel-tertiary);cursor:move;display:flex;padding:20px 10px}.fb-draggable-list-item[_ngcontent-%COMP%]:last-child{border:none}.cdk-drag-preview[_ngcontent-%COMP%]{border-radius:4px;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.cdk-drag-placeholder[_ngcontent-%COMP%]{opacity:0}.cdk-drag-animating[_ngcontent-%COMP%], .fb-draggable-list.cdk-drop-list-dragging[_ngcontent-%COMP%]   .fb-draggable-list-item[_ngcontent-%COMP%]:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}"], changeDetection: 0 });
const ɵDraggableListComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(DraggableListComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DraggableListComponent, [{
        type: Component,
        args: [{
                selector: 'fb-draggable-list',
                template: "<div class=\"mat-form-field-wrapper\">\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{cData.label | transloco}}</p>\n\n  <div\n    class=\"fb-draggable-list\"\n    cdkDropList\n    (cdkDropListDropped)=\"drop($event)\">\n    <div\n      class=\"fb-draggable-list-item\"\n      *ngFor=\"let item of cData.options; index as index\"\n      [cdkDragDisabled]=\"item.disabled\"\n      cdkDrag>\n      {{index + 1}}. {{item.name}}\n    </div>\n  </div>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".fb-draggable-list{border:1px solid var(--panel-tertiary);border-radius:4px;overflow:hidden}.fb-draggable-list-item{align-items:center;background:var(--panel-theme);border-bottom:1px solid var(--panel-tertiary);cursor:move;display:flex;padding:20px 10px}.fb-draggable-list-item:last-child{border:none}.cdk-drag-preview{border-radius:4px;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating,.fb-draggable-list.cdk-drop-list-dragging .fb-draggable-list-item:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}"]
            }]
    }], null, null); })();

class StorageService {
    upload(path, data, metadata) { }
}

/**
 * Remove all characters that are not alphanumeric.
 *
 * In case of not finding any alphanumeric characters
 * return string `file-{random number}`
 *
 * @param name
 * File name to format
 */
const formatFileName = (name) => {
    const extension = name.slice(name.lastIndexOf('.'));
    name = name.slice(0, name.lastIndexOf('.'));
    name = (name.match(/[a-zA-Z\d.]/g) || []).join('');
    return !!name.length ? name + extension : `file-${Math.floor(Math.random() * Math.pow(10, 5)) + 1}${extension}`;
};

const parseSize = (size) => {
    if (typeof size === 'number') {
        return size;
    }
    const KB = 1024;
    const MB = Math.pow(KB, 2);
    const num = parseFloat(size);
    const unit = size.replace(/[0-9]/g, '').toLowerCase();
    switch (unit) {
        case 'kb': {
            return num * KB;
        }
        case 'mb': {
            return num * MB;
        }
        default: {
            return 0;
        }
    }
};

class FileComponent extends FieldComponent {
    constructor(cData, storage, cdr, formBuilderService, transloco, snackBar) {
        super(cData);
        this.cData = cData;
        this.storage = storage;
        this.cdr = cdr;
        this.formBuilderService = formBuilderService;
        this.transloco = transloco;
        this.snackBar = snackBar;
    }
    ngOnInit() {
        if (this.cData.control.value) {
            this.name = this.cData.control.value;
        }
        this.emptyLabel = (this.cData.hasOwnProperty('emptyLabel') ? this.cData.emptyLabel : 'FIELDS.FILE.EMPTY');
        this.formBuilderService.saveComponents.push(this);
        this.allowedFileTypes = this.cData.allowedFileTypes || [];
        this.forbiddenFileTypes = this.cData.forbiddenFileTypes || [];
        this.minSizeBytes = this.cData.minSize ? parseSize(this.cData.minSize) : 0;
        this.maxSizeBytes = this.cData.maxSize ? parseSize(this.cData.maxSize) : 0;
    }
    errorSnack(message = 'GENERAL.ERROR', dismiss = 'GENERAL.DISMISS') {
        this.snackBar.open(this.transloco.translate(message), this.transloco.translate(dismiss), {
            panelClass: 'snack-bar-error',
            duration: 5000
        });
    }
    fileChange(ev) {
        const el = ev.target;
        const file = Array.from(el.files)[0];
        Object.defineProperty(file, 'name', {
            writable: true,
            value: formatFileName(file.name)
        });
        if (!this.allowedFileTypes.includes(file.type) && !!this.allowedFileTypes.length) {
            this.errorSnack('FIELDS.FILE.INVALID_FILE_FORMAT');
            return throwError('Invalid File Format');
        }
        if (this.forbiddenFileTypes.includes(file.type)) {
            this.errorSnack('FIELDS.FILE.FORBIDDEN_FILE_FORMAT');
            return throwError('Forbidden File Format');
        }
        if (file.size < this.minSizeBytes) {
            this.errorSnack('FIELDS.FILE.BELOW_SIZE');
            return throwError('File below minimal allowed size');
        }
        if (file.size > this.maxSizeBytes && !!this.maxSizeBytes) {
            this.errorSnack('FIELDS.FILE.EXCEED_SIZE');
            return throwError('File exceeding allowed size');
        }
        this.value = file;
        if (this.value) {
            this.name = this.value.name;
        }
        el.value = '';
    }
    clear() {
        this.name = '';
        this.cData.control.setValue('');
    }
    save(moduleId, documentId) {
        if (this.value) {
            const name = [
                moduleId,
                documentId,
                this.value.name
            ]
                .join('-');
            return from(this.storage.upload(name, this.value, {
                contentType: this.value.type,
                customMetadata: {
                    moduleId,
                    documentId
                }
            })).pipe(switchMap((res) => res.ref.getDownloadURL()), tap(url => this.cData.control.setValue(url)));
        }
        else {
            return of({});
        }
    }
}
FileComponent.ɵfac = function FileComponent_Factory(t) { return new (t || FileComponent)(ɵngcc0.ɵɵdirectiveInject(COMPONENT_DATA), ɵngcc0.ɵɵdirectiveInject(StorageService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(FormBuilderService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TranslocoService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatSnackBar)); };
FileComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FileComponent, selectors: [["fb-file"]], viewQuery: function FileComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c2, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fileEl = _t.first);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 16, vars: 10, consts: [[1, "mat-form-field-wrapper"], [1, "fb-file"], ["type", "file", "hidden", "", 3, "change"], ["file", ""], [1, "fb-file-legend"], [1, "fb-file-field"], [1, "fb-file-field-name"], [1, "fb-file-field-actions"], [4, "ngIf"], ["mat-button", "", 3, "click"]], template: function FileComponent_Template(rf, ctx) { if (rf & 1) {
        const _r4 = ɵngcc0.ɵɵgetCurrentView();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "fieldset", 1);
        ɵngcc0.ɵɵelementStart(2, "input", 2, 3);
        ɵngcc0.ɵɵlistener("change", function FileComponent_Template_input_change_2_listener($event) { return ctx.fileChange($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "legend", 4);
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵpipe(6, "transloco");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 5);
        ɵngcc0.ɵɵelementStart(8, "span", 6);
        ɵngcc0.ɵɵtext(9);
        ɵngcc0.ɵɵpipe(10, "transloco");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "div", 7);
        ɵngcc0.ɵɵtemplate(12, FileComponent_ng_container_12_Template, 5, 3, "ng-container", 8);
        ɵngcc0.ɵɵelementStart(13, "button", 9);
        ɵngcc0.ɵɵlistener("click", function FileComponent_Template_button_click_13_listener() { ɵngcc0.ɵɵrestoreView(_r4); const _r0 = ɵngcc0.ɵɵreference(3); return _r0.click(); });
        ɵngcc0.ɵɵtext(14);
        ɵngcc0.ɵɵpipe(15, "transloco");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 4, ctx.cData.label || ""));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ctx.name || ɵngcc0.ɵɵpipeBind1(10, 6, ctx.emptyLabel));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.cData.preventClear && ctx.name);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(15, 8, "ADD"));
    } }, directives: [ɵngcc3.NgIf, ɵngcc8.MatButton], pipes: [ɵngcc1.TranslocoPipe], styles: [".fb-file[_ngcontent-%COMP%]{border:1px solid var(--panel-tertiary);border-radius:4px;overflow:hidden;transition:.2s}.fb-file[_ngcontent-%COMP%]:hover{border:1px solid var(--panel-primary);box-shadow:0 0 0 1px var(--panel-primary)}.fb-file[_ngcontent-%COMP%]:focus-within{border:1px solid var(--primary-theme);box-shadow:0 0 0 1px var(--primary-theme)}.fb-file-legend[_ngcontent-%COMP%]{background:var(--panel-theme);color:var(--panel-secondary);font-size:.8em;margin-left:-8px;padding:0 4px}.fb-file-field[_ngcontent-%COMP%]{align-items:center;display:flex}.fb-file-field-name[_ngcontent-%COMP%]{color:var(--panel-secondary);flex:1;min-width:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:1px}.fb-file-field-actions[_ngcontent-%COMP%]{margin-left:auto;white-space:nowrap}"], changeDetection: 0 });
FileComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [COMPONENT_DATA,] }] },
    { type: StorageService },
    { type: ChangeDetectorRef },
    { type: FormBuilderService },
    { type: TranslocoService },
    { type: MatSnackBar }
];
FileComponent.propDecorators = {
    fileEl: [{ type: ViewChild, args: ['file', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileComponent, [{
        type: Component,
        args: [{
                selector: 'fb-file',
                template: "<div class=\"mat-form-field-wrapper\">\n  <fieldset class=\"fb-file\">\n    <input #file type=\"file\" hidden (change)=\"fileChange($event)\">\n\n    <legend class=\"fb-file-legend\">{{(cData.label || '') | transloco}}</legend>\n\n    <div class=\"fb-file-field\">\n      <span class=\"fb-file-field-name\">{{name || (emptyLabel | transloco)}}</span>\n\n      <div class=\"fb-file-field-actions\">\n        <ng-container *ngIf=\"!cData.preventClear && name\">\n          <button mat-button (click)=\"clear()\">{{'REMOVE' | transloco}}</button>|\n        </ng-container>\n        <button mat-button (click)=\"file.click()\">{{'ADD' | transloco}}</button>\n      </div>\n    </div>\n  </fieldset>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".fb-file{border:1px solid var(--panel-tertiary);border-radius:4px;overflow:hidden;transition:.2s}.fb-file:hover{border:1px solid var(--panel-primary);box-shadow:0 0 0 1px var(--panel-primary)}.fb-file:focus-within{border:1px solid var(--primary-theme);box-shadow:0 0 0 1px var(--primary-theme)}.fb-file-legend{background:var(--panel-theme);color:var(--panel-secondary);font-size:.8em;margin-left:-8px;padding:0 4px}.fb-file-field{align-items:center;display:flex}.fb-file-field-name{color:var(--panel-secondary);flex:1;min-width:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:1px}.fb-file-field-actions{margin-left:auto;white-space:nowrap}"]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [COMPONENT_DATA]
            }] }, { type: StorageService }, { type: ɵngcc0.ChangeDetectorRef }, { type: FormBuilderService }, { type: ɵngcc1.TranslocoService }, { type: ɵngcc2.MatSnackBar }]; }, { fileEl: [{
            type: ViewChild,
            args: ['file', { static: true }]
        }] }); })();

function formatGeneratedImages(data) {
    return data.reduce((acc, cur, index) => {
        acc[`generate_${index + 1}`] = Object.entries(cur).reduce((generated, [key, value]) => {
            generated += `----${key}:${value}`;
            return generated;
        }, '');
        return acc;
    }, {});
}

const STORAGE_URL = new InjectionToken('STORAGE_URL');

/**
 * Switches the location of two items
 * in an array
 */
function switchItemLocations(items, previousIndex, currentIndex) {
    const itemOne = items[previousIndex];
    const itemTwo = items[currentIndex];
    items[currentIndex] = itemOne;
    items[previousIndex] = itemTwo;
}

function readFile(blob) {
    return new Observable(obs => {
        if (!(blob instanceof Blob)) {
            obs.error(new Error('`blob` must be an instance of File or Blob.'));
            return;
        }
        const reader = new FileReader();
        reader.onerror = err => obs.error(err);
        reader.onabort = err => obs.error(err);
        reader.onload = () => obs.next(reader.result);
        reader.onloadend = () => obs.complete();
        return reader.readAsDataURL(blob);
    });
}

class GalleryComponent extends FieldComponent {
    constructor(cData, storageUrl, dialog, cdr, http, storage, formBuilderService, viewportRuler, transloco, snackBar) {
        super(cData);
        this.cData = cData;
        this.storageUrl = storageUrl;
        this.dialog = dialog;
        this.cdr = cdr;
        this.http = http;
        this.storage = storage;
        this.formBuilderService = formBuilderService;
        this.viewportRuler = viewportRuler;
        this.transloco = transloco;
        this.snackBar = snackBar;
        this.files = [];
        this.toRemove = [];
    }
    ngOnInit() {
        this.formBuilderService.saveComponents.push(this);
        this.allowedImageTypes = this.cData.allowedImageTypes || [];
        this.forbiddenImageTypes = this.cData.forbiddenImageTypes || [];
        this.minSizeBytes = this.cData.minSize ? parseSize(this.cData.minSize) : 0;
        this.maxSizeBytes = this.cData.maxSize ? parseSize(this.cData.maxSize) : 0;
    }
    ngAfterViewInit() {
        const phElement = this.placeholder.element.nativeElement;
        const { parentElement } = phElement;
        phElement.style.display = 'none';
        parentElement.removeChild(phElement);
    }
    openUploadDialog() {
        this.dialog.open(this.modalTemplate, {
            width: '420px'
        });
    }
    addImage(image) {
        this.http
            .get(image, {
            withCredentials: false,
            responseType: 'blob'
        })
            .pipe(switchMap((blob) => {
            const type = blob.type.split('/')[1].toLowerCase();
            if (!this.allowedImageTypes.includes(type) && !!this.allowedImageTypes.length) {
                return throwError('Invalid Image Format');
            }
            if (this.forbiddenImageTypes.includes(type)) {
                return throwError('Forbidden Image Format');
            }
            if (blob.size < this.minSizeBytes) {
                return throwError('Image below minimal allowed size');
            }
            if (blob.size > this.maxSizeBytes && !!this.maxSizeBytes) {
                return throwError('Image exceeding allowed size');
            }
            return of(blob);
        }), this.formBuilderService.notify({
            error: 'FIELDS.GALLERY.UPLOAD_ERROR',
            success: null
        }))
            .subscribe(res => {
            const urlCreator = window.URL || window.webkitURL;
            const value = this.cData.control.value;
            value.push({
                data: urlCreator.createObjectURL(res),
                live: true
            });
            this.cData.control.setValue(value);
            this.cdr.detectChanges();
        });
    }
    openFileUpload() {
        this.fileEl.nativeElement.click();
    }
    openSortImages() {
        this.dialog.open(this.imagesSort, {
            width: '800px'
        });
    }
    drop(event) {
        const value = this.cData.control.value;
        switchItemLocations(value, event.previousIndex, event.currentIndex);
        this.cData.control.setValue(value);
        this.cdr.detectChanges();
    }
    move(up = false, index) {
        const currentIndex = up ? index - 1 : index + 1;
        const value = this.cData.control.value;
        moveItemInArray(value, index, currentIndex);
        this.cData.control.setValue(value);
        this.cdr.detectChanges();
    }
    errorSnack(message = 'GENERAL.ERROR', dismiss = 'GENERAL.DISMISS') {
        this.snackBar.open(this.transloco.translate(message), this.transloco.translate(dismiss), {
            panelClass: 'snack-bar-error',
            duration: 5000
        });
    }
    filesUploaded(el) {
        const files = Array.from((el instanceof FileList ? el : el.files));
        for (const file of files) {
            Object.defineProperty(file, 'name', {
                writable: true,
                value: formatFileName(file.name)
            });
            const type = file.type.split('/')[1].toLowerCase();
            if (!this.allowedImageTypes.includes(type) && !!this.allowedImageTypes.length) {
                this.errorSnack('FIELDS.GALLERY.INVALID_IMAGE_FORMAT');
                return throwError('Invalid Image Format');
            }
            if (this.forbiddenImageTypes.includes(type)) {
                this.errorSnack('FIELDS.GALLERY.FORBIDDEN_IMAGE_FORMAT');
                return throwError('Forbidden Image Format');
            }
            if (file.size < this.minSizeBytes) {
                this.errorSnack('FIELDS.GALLERY.BELOW_SIZE');
                return throwError('Image below minimal allowed size');
            }
            if (file.size > this.maxSizeBytes && !!this.maxSizeBytes) {
                this.errorSnack('FIELDS.GALLERY.EXCEED_SIZE');
                return throwError('Image exceeding allowed size');
            }
        }
        forkJoin(files.map(file => readFile(file).pipe(map(data => ({
            data,
            pushToLive: file,
            live: false
        }))))).subscribe(fls => {
            const value = this.cData.control.value;
            value.push(...fls);
            this.cData.control.setValue(value);
            if (!(el instanceof FileList)) {
                el.value = '';
            }
            this.cdr.detectChanges();
        }, () => {
            if (!(el instanceof FileList)) {
                el.value = '';
            }
        });
    }
    removeImage(index, item) {
        if (item.live && item.data.includes(this.storageUrl)) {
            this.toRemove.push(item.data);
        }
        this.cData.control.value.splice(index, 1);
    }
    sortDrop(event) {
        const value = this.cData.control.value;
        moveItemInArray(value, event.previousIndex, event.currentIndex);
        this.cData.control.setValue(value);
    }
    /**
     * Drag and Drop
     */
    dragMoved(e) {
        const point = this.getPointerPositionOnPage(e.event);
        this.listGroup._items.forEach(dropList => {
            if (__isInsideDropListClientRect(dropList, point.x, point.y)) {
                this.activeContainer = dropList;
                return;
            }
        });
    }
    dropListDropped() {
        if (!this.target) {
            return;
        }
        const phElement = this.placeholder.element.nativeElement;
        const parent = phElement.parentElement;
        phElement.style.display = 'none';
        const { element } = this.source;
        parent.removeChild(phElement);
        parent.appendChild(phElement);
        parent.insertBefore(element.nativeElement, parent.children[this.sourceIndex]);
        this.target = null;
        this.source = null;
        if (this.sourceIndex !== this.targetIndex) {
            const value = this.cData.control.value;
            moveItemInArray(value, this.sourceIndex, this.targetIndex);
            this.cData.control.setValue(value);
        }
    }
    /** Determines the point of the page that was touched by the user. */
    getPointerPositionOnPage(event) {
        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.
        const point = __isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;
        const scrollPosition = this.viewportRuler.getViewportScrollPosition();
        return {
            x: point.pageX - scrollPosition.left,
            y: point.pageY - scrollPosition.top
        };
    }
    /**
     * Executes all uploads/removes to persist
     * the changes on server
     */
    save(moduleId, documentId) {
        if (!this.toRemove.length &&
            !this.cData.control.value ||
            !this.cData.control.value.find((val) => !val.live)) {
            return of([]);
        }
        return forkJoin([
            ...this.toRemove.map(file => from(this.storage.storage.refFromURL(file).delete()).pipe(
            /**
             * Dont' fail if files didn't delete
             */
            catchError(() => of([])))),
            ...this.cData.control.value.reduce((acc, cur) => {
                if (cur.live !== undefined && !cur.live) {
                    const name = [
                        moduleId,
                        documentId,
                        cur.pushToLive.name
                    ]
                        .join('-');
                    acc.push(from(this.storage.upload(name, cur.pushToLive, {
                        contentType: cur.pushToLive.type,
                        customMetadata: Object.assign({ moduleId,
                            documentId }, this.cData.generatedImages &&
                            formatGeneratedImages(this.cData.generatedImages))
                    })).pipe(switchMap((task) => task.ref.getDownloadURL()), tap(url => {
                        cur.data = url;
                    })));
                }
                else {
                    acc.push(cur);
                }
                return acc;
            }, [])
        ]).pipe(tap(() => this.cData.control.setValue(this.cData.control.value.map((item) => (item.data ? item.data : item)))));
    }
}
GalleryComponent.ɵfac = function GalleryComponent_Factory(t) { return new (t || GalleryComponent)(ɵngcc0.ɵɵdirectiveInject(COMPONENT_DATA), ɵngcc0.ɵɵdirectiveInject(STORAGE_URL, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc22.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc23.HttpClient), ɵngcc0.ɵɵdirectiveInject(StorageService), ɵngcc0.ɵɵdirectiveInject(FormBuilderService), ɵngcc0.ɵɵdirectiveInject(ɵngcc24.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TranslocoService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatSnackBar)); };
GalleryComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GalleryComponent, selectors: [["fb-gallery"]], viewQuery: function GalleryComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(CdkDropListGroup, true);
        ɵngcc0.ɵɵstaticViewQuery(CdkDropList, true);
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
        ɵngcc0.ɵɵstaticViewQuery(_c4, true);
        ɵngcc0.ɵɵstaticViewQuery(_c2, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listGroup = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.placeholder = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.modalTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.imagesSort = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fileEl = _t.first);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 16, vars: 5, consts: [["class", "fs-small fg-secondary", 4, "ngIf"], ["fbDropzone", "", 1, "fb-gallery", 3, "dropped"], [1, "ta-center", "p-y-l"], ["mat-button", "", 3, "click", 4, "ngIf"], ["type", "file", "multiple", "", "hidden", "", 3, "change"], ["file", ""], ["cdkDropListGroup", "", 1, "fb-gallery-list"], ["cdkDropList", "", 1, "fb-gallery-list-placeholder", 3, "cdkDropListDropped"], ["cdkDropList", "", "class", "fb-gallery-list-image", 3, "cdkDropListDropped", 4, "ngFor", "ngForOf"], ["modal", ""], ["imagesSort", ""], [1, "fs-small", "fg-secondary"], ["mat-button", "", 3, "click"], ["cdkDropList", "", 1, "fb-gallery-list-image", 3, "cdkDropListDropped"], ["cdkDrag", "", 3, "cdkDragMoved"], [1, "fb-gallery-list-image-inner", 3, "src"], ["type", "button", "mat-icon-button", "", 1, "fb-gallery-list-image-remove", 3, "matTooltip", "click"], ["appearance", "outline", 1, "w-full"], ["matInput", ""], ["url", ""], [1, "jc-end"], ["mat-button", "", "mat-dialog-close", ""], ["mat-flat-button", "", "color", "primary", "mat-dialog-close", "", 3, "disabled", "click"], ["mat-dialog-title", ""], ["cdkDropList", "", 1, "sort-wrapper", 3, "cdkDropListDropped"], ["class", "sort-box", "cdkDrag", "", 4, "ngFor", "ngForOf"], ["cdkDrag", "", 1, "sort-box"], [1, "sort-image", 3, "src"], [1, "flex-1"], ["mat-icon-button", "", 3, "disabled", "click"], ["mat-icon-button", "", "cdkDragHandle", ""]], template: function GalleryComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, GalleryComponent_p_0_Template, 3, 3, "p", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵlistener("dropped", function GalleryComponent_Template_div_dropped_1_listener($event) { return ctx.filesUploaded($event); });
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtemplate(3, GalleryComponent_button_3_Template, 3, 3, "button", 3);
        ɵngcc0.ɵɵtemplate(4, GalleryComponent_button_4_Template, 3, 3, "button", 3);
        ɵngcc0.ɵɵtemplate(5, GalleryComponent_button_5_Template, 3, 3, "button", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "input", 4, 5);
        ɵngcc0.ɵɵlistener("change", function GalleryComponent_Template_input_change_6_listener($event) { return ctx.filesUploaded($event.target); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementContainerStart(8);
        ɵngcc0.ɵɵelementStart(9, "div", 6);
        ɵngcc0.ɵɵelementStart(10, "div", 7);
        ɵngcc0.ɵɵlistener("cdkDropListDropped", function GalleryComponent_Template_div_cdkDropListDropped_10_listener() { return ctx.dropListDropped(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(11, GalleryComponent_div_11_Template, 8, 7, "div", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(12, GalleryComponent_ng_template_12_Template, 15, 10, "ng-template", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(14, GalleryComponent_ng_template_14_Template, 6, 4, "ng-template", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.label);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.allowUrl);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.allowServerUpload);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.allowServerUpload);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.cData.control.value);
    } }, directives: function () { return [ɵngcc3.NgIf, DropzoneDirective, ɵngcc21.CdkDropListGroup, ɵngcc21.CdkDropList, ɵngcc3.NgForOf, ɵngcc8.MatButton, ɵngcc21.CdkDrag, ɵngcc9.MatTooltip, ɵngcc10.MatIcon, ɵngcc22.MatDialogContent, ɵngcc12.MatFormField, ɵngcc12.MatLabel, ɵngcc13.MatInput, ɵngcc22.MatDialogActions, ɵngcc22.MatDialogClose, ɵngcc22.MatDialogTitle, ɵngcc21.CdkDragHandle]; }, pipes: function () { return [ɵngcc1.TranslocoPipe, ɵngcc17.SanitizePipe]; }, styles: [".fb-gallery[_ngcontent-%COMP%]{border:1px dashed var(--tertiary);margin-bottom:1.25em;position:relative}.fb-gallery-list[_ngcontent-%COMP%]{cursor:-webkit-grab;cursor:grab;display:flex;flex-wrap:wrap}.fb-gallery-list-placeholder[_ngcontent-%COMP%]{border:2px dashed var(--tertiary)}.fb-gallery-list-image[_ngcontent-%COMP%], .fb-gallery-list-placeholder[_ngcontent-%COMP%]{flex-basis:33.33333%;padding-bottom:33.33333%;position:relative;width:33.33333%}.fb-gallery-list-image[_ngcontent-%COMP%]{background:#eee;border:2px solid #fff}.fb-gallery-list-image-inner[_ngcontent-%COMP%], .fb-gallery-list-image[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{height:100%;position:absolute;width:100%}.fb-gallery-list-image-inner[_ngcontent-%COMP%]{-o-object-fit:contain;left:0;object-fit:contain;top:0}.fb-gallery-list-image-remove[_ngcontent-%COMP%]{background:#fff;border:1px solid #222;line-height:24px;opacity:0;position:absolute;right:0;top:0;transition:.2s;visibility:hidden}.fb-gallery-list-image[_ngcontent-%COMP%]:hover   .fb-gallery-list-image-remove[_ngcontent-%COMP%]{opacity:1;visibility:visible}.fb-gallery[_ngcontent-%COMP%]:before{bottom:0;content:\"Drop To Upload\";display:none;font-size:20px;left:0;margin:auto;position:absolute;right:0;text-align:center;top:0}.fb-gallery.active[_ngcontent-%COMP%]{background:#ccc;border:3px dashed var(--tertiary)}.fb-gallery.active[_ngcontent-%COMP%]:before{display:block}.sort-wrapper[_ngcontent-%COMP%]{background:#fff;border:1px solid #ccc;border-radius:4px;display:block;max-width:100%;min-height:60px;overflow:hidden}.sort-image[_ngcontent-%COMP%]{-o-object-fit:cover;height:40px;object-fit:cover;width:40px}.sort-box[_ngcontent-%COMP%]{align-items:center;background:#fff;border-bottom:1px solid #ccc;box-sizing:border-box;color:rgba(0,0,0,.87);display:flex;flex-direction:row;font-size:14px;justify-content:space-between;padding:20px 10px}.sort-box[_ngcontent-%COMP%]:last-child{border:none}.cdk-drag-preview[_ngcontent-%COMP%]{border-radius:4px;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);box-sizing:border-box}.cdk-drag-placeholder[_ngcontent-%COMP%]{opacity:.3}.cdk-drag-animating[_ngcontent-%COMP%], .cdk-drop-list-dragging[_ngcontent-%COMP%]   .sort-box[_ngcontent-%COMP%]:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}"], changeDetection: 0 });
GalleryComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [COMPONENT_DATA,] }] },
    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [STORAGE_URL,] }] },
    { type: MatDialog },
    { type: ChangeDetectorRef },
    { type: HttpClient },
    { type: StorageService },
    { type: FormBuilderService },
    { type: ViewportRuler },
    { type: TranslocoService },
    { type: MatSnackBar }
];
GalleryComponent.propDecorators = {
    listGroup: [{ type: ViewChild, args: [CdkDropListGroup, { static: true },] }],
    placeholder: [{ type: ViewChild, args: [CdkDropList, { static: true },] }],
    modalTemplate: [{ type: ViewChild, args: ['modal', { static: true },] }],
    imagesSort: [{ type: ViewChild, args: ['imagesSort', { static: true },] }],
    fileEl: [{ type: ViewChild, args: ['file', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GalleryComponent, [{
        type: Component,
        args: [{
                selector: 'fb-gallery',
                template: "<p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{(cData.label || '') | transloco}}</p>\n\n<div class=\"fb-gallery\" fbDropzone (dropped)=\"filesUploaded($event)\">\n  <div class=\"ta-center p-y-l\">\n    <button mat-button *ngIf=\"cData.allowUrl\" (click)=\"openUploadDialog()\">{{'FIELDS.GALLERY.ENTER_URL' | transloco}}</button>\n    <button mat-button *ngIf=\"cData.allowServerUpload\" (click)=\"openFileUpload()\">{{'FIELDS.GALLERY.CHOOSE_FILES' | transloco}}</button>\n    <button mat-button *ngIf=\"cData.allowServerUpload\" (click)=\"openSortImages()\">{{'FIELDS.GALLERY.SORT_IMAGES' | transloco}}</button>\n  </div>\n\n  <!--Upload from disk-->\n  <input #file type=\"file\" multiple hidden (change)=\"filesUploaded($event.target)\">\n\n  <!--Uploaded images list-->\n  <ng-container>\n    <div class=\"fb-gallery-list\" cdkDropListGroup>\n\n      <div class=\"fb-gallery-list-placeholder\" cdkDropList (cdkDropListDropped)=\"dropListDropped()\"></div>\n\n      <div\n        cdkDropList\n        class=\"fb-gallery-list-image\"\n        (cdkDropListDropped)=\"dropListDropped()\"\n        *ngFor=\"let val of cData.control.value; index as index\">\n\n        <div cdkDrag (cdkDragMoved)=\"dragMoved($event);\">\n          <img class=\"fb-gallery-list-image-inner\" [src]=\"(val.data || val) | jpSanitize:'resourceUrl'\">\n          <button class=\"fb-gallery-list-image-remove\" type=\"button\" mat-icon-button [matTooltip]=\"'GENERAL.REMOVE' | transloco\" (click)=\"removeImage(index, val)\">\n            <mat-icon>close</mat-icon>\n          </button>\n        </div>\n\n      </div>\n    </div>\n  </ng-container>\n</div>\n\n<!--Uplaod from URL-->\n<ng-template #modal>\n  <mat-dialog-content>\n    <mat-form-field class=\"w-full\" appearance=\"outline\">\n      <mat-label>{{'FIELDS.GALLERY.IMAGE_URL' | transloco}}</mat-label>\n      <input matInput #url>\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class=\"jc-end\">\n    <button mat-button mat-dialog-close>{{'GENERAL.CANCEL' | transloco}}</button>&nbsp;\n    <button mat-flat-button color=\"primary\" [disabled]=\"!url.value\" (click)=\"addImage(url.value)\" mat-dialog-close>{{'FIELDS.GALLERY.ADD_IMAGE' | transloco}}</button>\n  </mat-dialog-actions>\n</ng-template>\n\n<!--Image sort-->\n<ng-template #imagesSort>\n  <h1 mat-dialog-title>{{'FIELDS.GALLERY.SORT_IMAGES' | transloco}}</h1>\n\n  <mat-dialog-content>\n\n    <div\n      class=\"sort-wrapper\"\n      cdkDropList\n      (cdkDropListDropped)=\"sortDrop($event)\">\n\n      <div class=\"sort-box\" *ngFor=\"let val of cData.control.value; index as index; first as first; last as last;\" cdkDrag>\n        <img class=\"sort-image\" [src]=\"(val.data || val) | jpSanitize:'resourceUrl'\">\n        <div class=\"flex-1\"></div>\n        <div>\n          <button mat-icon-button [disabled]=\"first\" (click)=\"move(true, index)\">\n            <mat-icon>arrow_upward</mat-icon>\n          </button>\n          <button mat-icon-button [disabled]=\"last\" (click)=\"move(false, index)\">\n            <mat-icon>arrow_downward</mat-icon>\n          </button>\n          <button mat-icon-button cdkDragHandle>\n            <mat-icon>drag_indicator</mat-icon>\n          </button>\n        </div>\n      </div>\n\n    </div>\n  </mat-dialog-content>\n</ng-template>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".fb-gallery{border:1px dashed var(--tertiary);margin-bottom:1.25em;position:relative}.fb-gallery-list{cursor:-webkit-grab;cursor:grab;display:flex;flex-wrap:wrap}.fb-gallery-list-placeholder{border:2px dashed var(--tertiary)}.fb-gallery-list-image,.fb-gallery-list-placeholder{flex-basis:33.33333%;padding-bottom:33.33333%;position:relative;width:33.33333%}.fb-gallery-list-image{background:#eee;border:2px solid #fff}.fb-gallery-list-image-inner,.fb-gallery-list-image>div{height:100%;position:absolute;width:100%}.fb-gallery-list-image-inner{-o-object-fit:contain;left:0;object-fit:contain;top:0}.fb-gallery-list-image-remove{background:#fff;border:1px solid #222;line-height:24px;opacity:0;position:absolute;right:0;top:0;transition:.2s;visibility:hidden}.fb-gallery-list-image:hover .fb-gallery-list-image-remove{opacity:1;visibility:visible}.fb-gallery:before{bottom:0;content:\"Drop To Upload\";display:none;font-size:20px;left:0;margin:auto;position:absolute;right:0;text-align:center;top:0}.fb-gallery.active{background:#ccc;border:3px dashed var(--tertiary)}.fb-gallery.active:before{display:block}.sort-wrapper{background:#fff;border:1px solid #ccc;border-radius:4px;display:block;max-width:100%;min-height:60px;overflow:hidden}.sort-image{-o-object-fit:cover;height:40px;object-fit:cover;width:40px}.sort-box{align-items:center;background:#fff;border-bottom:1px solid #ccc;box-sizing:border-box;color:rgba(0,0,0,.87);display:flex;flex-direction:row;font-size:14px;justify-content:space-between;padding:20px 10px}.sort-box:last-child{border:none}.cdk-drag-preview{border-radius:4px;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);box-sizing:border-box}.cdk-drag-placeholder{opacity:.3}.cdk-drag-animating,.cdk-drop-list-dragging .sort-box:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}"]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [COMPONENT_DATA]
            }] }, { type: String, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [STORAGE_URL]
            }] }, { type: ɵngcc22.MatDialog }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc23.HttpClient }, { type: StorageService }, { type: FormBuilderService }, { type: ɵngcc24.ViewportRuler }, { type: ɵngcc1.TranslocoService }, { type: ɵngcc2.MatSnackBar }]; }, { listGroup: [{
            type: ViewChild,
            args: [CdkDropListGroup, { static: true }]
        }], placeholder: [{
            type: ViewChild,
            args: [CdkDropList, { static: true }]
        }], modalTemplate: [{
            type: ViewChild,
            args: ['modal', { static: true }]
        }], imagesSort: [{
            type: ViewChild,
            args: ['imagesSort', { static: true }]
        }], fileEl: [{
            type: ViewChild,
            args: ['file', { static: true }]
        }] }); })();
function __indexOf(collection, node) {
    return Array.prototype.indexOf.call(collection, node);
}
/** Determines whether an event is a touch event. */
function __isTouchEvent(event) {
    return event.type.startsWith('touch');
}
function __isInsideDropListClientRect(dropList, x, y) {
    const { top, bottom, left, right } = dropList.element.nativeElement.getBoundingClientRect();
    return y >= top && y <= bottom && x >= left && x <= right;
}

class ImageComponent extends FieldComponent {
    constructor(cData, storage, cdr, formBuilderService, transloco, snackBar, domSanitizer) {
        super(cData);
        this.cData = cData;
        this.storage = storage;
        this.cdr = cdr;
        this.formBuilderService = formBuilderService;
        this.transloco = transloco;
        this.snackBar = snackBar;
        this.domSanitizer = domSanitizer;
        this.disInput = false;
    }
    ngOnInit() {
        this.imageUrl = new FormControl(this.cData.control.value);
        this.formBuilderService.saveComponents.push(this);
        this.allowedImageTypes = this.cData.allowedImageTypes || [];
        this.forbiddenImageTypes = this.cData.forbiddenImageTypes || [];
        this.minSizeBytes = this.cData.minSize ? parseSize(this.cData.minSize) : 0;
        this.maxSizeBytes = this.cData.maxSize ? parseSize(this.cData.maxSize) : 0;
    }
    errorSnack(message = 'GENERAL.ERROR', dismiss = 'GENERAL.DISMISS') {
        this.snackBar.open(this.transloco.translate(message), this.transloco.translate(dismiss), {
            panelClass: 'snack-bar-error',
            duration: 5000
        });
    }
    openFileUpload() {
        this.fileEl.nativeElement.click();
    }
    filesImage(event) {
        const el = event.target;
        const image = Array.from(el.files)[0];
        Object.defineProperty(image, 'name', {
            writable: true,
            value: formatFileName(image.name)
        });
        if (!this.allowedImageTypes.includes(image.type) && !!this.allowedImageTypes.length) {
            this.errorSnack('FIELDS.GALLERY.INVALID_IMAGE_FORMAT');
            return throwError('Invalid Image Format');
        }
        if (this.forbiddenImageTypes.includes(image.type)) {
            this.errorSnack('FIELDS.GALLERY.FORBIDDEN_IMAGE_FORMAT');
            return throwError('Forbidden Image Format');
        }
        if (image.size < this.minSizeBytes) {
            this.errorSnack('FIELDS.GALLERY.BELOW_SIZE');
            return throwError('Image below minimal allowed size');
        }
        if (image.size > this.maxSizeBytes && !!this.maxSizeBytes) {
            this.errorSnack('FIELDS.GALLERY.EXCEED_SIZE');
            return throwError('Image exceeding allowed size');
        }
        this.value = image;
        this.disInput = true;
        this.imageUrl.setValue(this.value.name);
        const reader = new FileReader();
        reader.onload = () => {
            this.imageSrc = this.domSanitizer.bypassSecurityTrustResourceUrl(reader.result);
            this.cdr.detectChanges();
        };
        reader.readAsDataURL(this.value);
        el.value = '';
    }
    remove() {
        this.imageUrl.setValue('');
        this.value = null;
        this.disInput = false;
        this.cdr.detectChanges();
    }
    save(moduleId, documentId) {
        if (this.value) {
            if (this.imageUrl.value && this.imageUrl.value !== this.value.name) {
                return of(this.imageUrl.value).pipe(tap(() => this.cData.control.setValue(this.imageUrl.value)));
            }
            else {
                const name = [
                    moduleId,
                    documentId,
                    this.value.name
                ]
                    .join('-');
                return from(this.storage.upload(name, this.value, {
                    contentType: this.value.type,
                    customMetadata: Object.assign({ moduleId,
                        documentId }, (this.cData.generatedImages &&
                        formatGeneratedImages(this.cData.generatedImages)))
                })).pipe(switchMap((res) => res.ref.getDownloadURL()), tap(url => this.cData.control.setValue(url)));
            }
        }
        else {
            this.cData.control.setValue(this.imageUrl.value);
            return of({});
        }
    }
}
ImageComponent.ɵfac = function ImageComponent_Factory(t) { return new (t || ImageComponent)(ɵngcc0.ɵɵdirectiveInject(COMPONENT_DATA), ɵngcc0.ɵɵdirectiveInject(StorageService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(FormBuilderService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TranslocoService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatSnackBar), ɵngcc0.ɵɵdirectiveInject(ɵngcc25.DomSanitizer)); };
ImageComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ImageComponent, selectors: [["fb-image"]], viewQuery: function ImageComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c2, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fileEl = _t.first);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 13, consts: [["appearance", "outline", 1, "w-full"], ["matInput", "", "type", "url", 3, "placeholder", "formControl"], ["matSuffix", "", 1, "fb-image-suffix"], [4, "ngIf"], ["mat-icon-button", "", 4, "ngIf"], [3, "innerHTML", 4, "ngIf"], ["type", "file", "hidden", "", 3, "change"], ["file", ""], [1, "fb-image-suffix-preview"], ["mat-icon-button", "", 1, "fb-image-suffix-preview-button"], [1, "fb-image-suffix-preview-image", 3, "alt"], ["mat-icon-button", ""], [3, "click"], [3, "innerHTML"]], template: function ImageComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-form-field", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-label");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "transloco");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "input", 1);
        ɵngcc0.ɵɵpipe(5, "transloco");
        ɵngcc0.ɵɵelementStart(6, "div", 2);
        ɵngcc0.ɵɵtemplate(7, ImageComponent_ng_container_7_Template, 7, 4, "ng-container", 3);
        ɵngcc0.ɵɵtemplate(8, ImageComponent_button_8_Template, 3, 0, "button", 4);
        ɵngcc0.ɵɵtemplate(9, ImageComponent_button_9_Template, 3, 0, "button", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, ImageComponent_mat_hint_10_Template, 2, 3, "mat-hint", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "input", 6, 7);
        ɵngcc0.ɵɵlistener("change", function ImageComponent_Template_input_change_11_listener($event) { return ctx.filesImage($event); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 9, ctx.cData.label || ""));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassProp("disabled", ctx.disInput);
        ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind1(5, 11, ctx.cData.placeholder || ""))("formControl", ctx.imageUrl);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.imageUrl.value);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.imageUrl.value && !ctx.cData.preventServerUpload);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.imageUrl.value);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.hint);
    } }, directives: [ɵngcc12.MatFormField, ɵngcc12.MatLabel, ɵngcc13.MatInput, ɵngcc14.DefaultValueAccessor, ɵngcc14.NgControlStatus, ɵngcc14.FormControlDirective, ɵngcc12.MatSuffix, ɵngcc3.NgIf, ɵngcc8.MatButton, ɵngcc10.MatIcon, ɵngcc12.MatHint], pipes: [ɵngcc1.TranslocoPipe, ɵngcc17.SanitizePipe], styles: [".fb-image-suffix[_ngcontent-%COMP%]{display:flex}.fb-image-suffix-preview[_ngcontent-%COMP%]{display:inline-block;position:relative}.fb-image-suffix-preview-image[_ngcontent-%COMP%]{-o-object-fit:contain;background:#fff;box-shadow:0 2px 5px 0 rgba(0,0,0,.4);height:200px;max-width:unset;object-fit:contain;opacity:0;position:absolute;right:0;top:100%;transition:.2s;visibility:hidden;width:200px;z-index:2}.fb-image-suffix-preview-button[_ngcontent-%COMP%]:hover + .fb-image-suffix-preview-image[_ngcontent-%COMP%]{opacity:1;visibility:visible}"], changeDetection: 0 });
ImageComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [COMPONENT_DATA,] }] },
    { type: StorageService },
    { type: ChangeDetectorRef },
    { type: FormBuilderService },
    { type: TranslocoService },
    { type: MatSnackBar },
    { type: DomSanitizer }
];
ImageComponent.propDecorators = {
    fileEl: [{ type: ViewChild, args: ['file', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ImageComponent, [{
        type: Component,
        args: [{
                selector: 'fb-image',
                template: "<mat-form-field appearance=\"outline\" class=\"w-full\">\n  <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n  <input\n    matInput\n    type=\"url\"\n    [placeholder]=\"(cData.placeholder || '') | transloco\"\n    [class.disabled]=\"disInput\"\n    [formControl]=\"imageUrl\">\n  <div matSuffix class=\"fb-image-suffix\">\n    <ng-container *ngIf=\"imageUrl.value\">\n      <div class=\"fb-image-suffix-preview\">\n        <button class=\"fb-image-suffix-preview-button\" mat-icon-button>\n          <mat-icon>visibility</mat-icon>\n        </button>\n        <img class=\"fb-image-suffix-preview-image\" [attr.src]=\"imageSrc || imageUrl.value || value\" [alt]=\"'FIELDS.IMAGE.PREVIEW' | transloco\">\n      </div>\n    </ng-container>\n    <button mat-icon-button *ngIf=\"!imageUrl.value && !cData.preventServerUpload\">\n      <mat-icon (click)=\"openFileUpload()\">perm_media</mat-icon>\n    </button>\n    <button mat-icon-button *ngIf=\"imageUrl.value\">\n      <mat-icon (click)=\"remove()\">highlight_off</mat-icon>\n    </button>\n  </div>\n  <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n</mat-form-field>\n\n<input #file type=\"file\" hidden (change)=\"filesImage($event)\">\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".fb-image-suffix{display:flex}.fb-image-suffix-preview{display:inline-block;position:relative}.fb-image-suffix-preview-image{-o-object-fit:contain;background:#fff;box-shadow:0 2px 5px 0 rgba(0,0,0,.4);height:200px;max-width:unset;object-fit:contain;opacity:0;position:absolute;right:0;top:100%;transition:.2s;visibility:hidden;width:200px;z-index:2}.fb-image-suffix-preview-button:hover+.fb-image-suffix-preview-image{opacity:1;visibility:visible}"]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [COMPONENT_DATA]
            }] }, { type: StorageService }, { type: ɵngcc0.ChangeDetectorRef }, { type: FormBuilderService }, { type: ɵngcc1.TranslocoService }, { type: ɵngcc2.MatSnackBar }, { type: ɵngcc25.DomSanitizer }]; }, { fileEl: [{
            type: ViewChild,
            args: ['file', { static: true }]
        }] }); })();

class InputComponent extends FieldComponent {
    ngOnInit() {
        this.prefix$ = getHsd('prefix', this.cData);
        this.suffix$ = getHsd('suffix', this.cData);
    }
}
InputComponent.ɵfac = function InputComponent_Factory(t) { return ɵInputComponent_BaseFactory(t || InputComponent); };
InputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputComponent, selectors: [["fb-input"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 2, consts: [[3, "ngSwitch"], ["class", "w-full", "appearance", "outline", 3, "mat-form-field-has-hint", 4, "ngSwitchCase"], ["class", "w-full", "appearance", "outline", 3, "mat-form-field-has-hint", 4, "ngSwitchDefault"], ["appearance", "outline", 1, "w-full"], ["matPrefix", "", 3, "innerHTML", 4, "ngIf"], ["matInput", "", "type", "number", 3, "placeholder", "formControl"], ["matSuffix", "", 3, "innerHTML", 4, "ngIf"], [3, "innerHTML", 4, "ngIf"], ["matPrefix", "", 3, "innerHTML"], ["matSuffix", "", 3, "innerHTML"], [3, "innerHTML"], ["matInput", "", 3, "placeholder", "formControl"]], template: function InputComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementContainerStart(0, 0);
        ɵngcc0.ɵɵtemplate(1, InputComponent_mat_form_field_1_Template, 9, 13, "mat-form-field", 1);
        ɵngcc0.ɵɵtemplate(2, InputComponent_mat_form_field_2_Template, 9, 14, "mat-form-field", 2);
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngSwitch", ctx.cData.type);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "number");
    } }, directives: [ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc12.MatFormField, ɵngcc12.MatLabel, ɵngcc3.NgIf, ɵngcc13.MatInput, ɵngcc14.NumberValueAccessor, ɵngcc14.DefaultValueAccessor, ɵngcc14.NgControlStatus, ɵngcc14.FormControlDirective, ɵngcc12.MatPrefix, ɵngcc12.MatSuffix, ɵngcc12.MatHint], pipes: [ɵngcc1.TranslocoPipe, ɵngcc17.SanitizePipe, ɵngcc3.AsyncPipe], styles: [""], changeDetection: 0 });
const ɵInputComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(InputComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputComponent, [{
        type: Component,
        args: [{
                selector: 'fb-input',
                template: "<!--TODO: Format this when fixed. For some reason if the type is passed through a variable angular doesn't properly parse-->\n<ng-container [ngSwitch]=\"cData.type\">\n  <mat-form-field *ngSwitchCase=\"'number'\" class=\"w-full\" appearance=\"outline\" [class.mat-form-field-has-hint]=\"cData.hint\">\n    <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n    <span *ngIf=\"cData.prefix\" matPrefix [innerHTML]=\"((prefix$ | async) || '') | jpSanitize\"></span>\n    <input\n      matInput\n      type=\"number\"\n      [attr.autocomplete]=\"cData.autocomplete || 'on'\"\n      [placeholder]=\"(cData.placeholder || '') | transloco\"\n      [formControl]=\"cData.control\">\n    <span *ngIf=\"cData.suffix\" matSuffix [innerHTML]=\"((suffix$ | async) || '') | jpSanitize\"></span>\n    <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n  </mat-form-field>\n\n  <mat-form-field *ngSwitchDefault class=\"w-full\" appearance=\"outline\" [class.mat-form-field-has-hint]=\"cData.hint\">\n    <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n    <span *ngIf=\"cData.prefix\" matPrefix [innerHTML]=\"((prefix$ | async) || '') | jpSanitize\"></span>\n    <input\n        matInput\n        [attr.autocomplete]=\"cData.autocomplete || 'on'\"\n        [attr.type]=\"cData.type\"\n        [placeholder]=\"(cData.placeholder || '') | transloco\"\n        [formControl]=\"cData.control\">\n    <span *ngIf=\"cData.suffix\" matSuffix [innerHTML]=\"((suffix$ | async) || '') | jpSanitize\"></span>\n    <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n  </mat-form-field>\n</ng-container>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], null, null); })();

class RadioComponent extends FieldComponent {
}
RadioComponent.ɵfac = function RadioComponent_Factory(t) { return ɵRadioComponent_BaseFactory(t || RadioComponent); };
RadioComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RadioComponent, selectors: [["fb-radio"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[1, "mat-form-field-wrapper"], ["class", "fs-small fg-secondary", 4, "ngIf"], [3, "formControl"], [3, "disabled", "value", 4, "ngFor", "ngForOf"], [1, "fs-small", "fg-secondary"], [3, "disabled", "value"]], template: function RadioComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, RadioComponent_p_1_Template, 3, 3, "p", 1);
        ɵngcc0.ɵɵelementStart(2, "mat-radio-group", 2);
        ɵngcc0.ɵɵtemplate(3, RadioComponent_mat_radio_button_3_Template, 2, 3, "mat-radio-button", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(4, RadioComponent_p_4_Template, 4, 5, "p", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.label);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("formControl", ctx.cData.control);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.cData.options);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.hint);
    } }, directives: [ɵngcc3.NgIf, ɵngcc26.MatRadioGroup, ɵngcc14.NgControlStatus, ɵngcc14.FormControlDirective, ɵngcc3.NgForOf, ɵngcc26.MatRadioButton], pipes: [ɵngcc1.TranslocoPipe], styles: [""], changeDetection: 0 });
const ɵRadioComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(RadioComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioComponent, [{
        type: Component,
        args: [{
                selector: 'fb-radio',
                template: "<div class=\"mat-form-field-wrapper\">\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{(cData.label || '') | transloco}}</p>\n  <mat-radio-group [formControl]=\"cData.control\">\n    <mat-radio-button\n      *ngFor=\"let option of cData.options\"\n      [disabled]=\"option.disabled\"\n      [value]=\"option.value\">\n      {{option.name}}\n    </mat-radio-button>\n  </mat-radio-group>\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.hint\">\n    {{(cData.hint | transloco) | transloco}}\n  </p>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], null, null); })();

class RangeComponent extends FieldComponent {
    constructor(cData, cdr, formBuilderService) {
        super(cData);
        this.cData = cData;
        this.cdr = cdr;
        this.formBuilderService = formBuilderService;
    }
    ngOnInit() {
        this.formBuilderService.saveComponents.push(this);
        this.min = new Date(this.cData.min || 0);
        this.max = new Date(this.cData.max || Date.now() * 2);
        this.entryControl = cloneAbstractControl(this.cData.control);
        this.start = new FormControl({ value: this.entryControl.value.start || '', disabled: this.cData.control.disabled }, [Validators.min(this.cData.min || 0)]);
        this.end = new FormControl({ value: this.entryControl.value.end || '', disabled: this.cData.control.disabled }, [Validators.max(this.cData.max || Date.now() * 2)]);
    }
    save() {
        return of({}).pipe(tap(() => {
            const start = this.start.value;
            const end = this.end.value;
            this.cData.control.setValue({ start, end });
        }));
    }
}
RangeComponent.ɵfac = function RangeComponent_Factory(t) { return new (t || RangeComponent)(ɵngcc0.ɵɵdirectiveInject(COMPONENT_DATA), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(FormBuilderService)); };
RangeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RangeComponent, selectors: [["fb-range"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 12, vars: 8, consts: [[1, "mat-form-field-wrapper"], ["class", "fs-small fg-secondary", 4, "ngIf"], ["appearance", "outline", 1, "w-full"], [3, "rangePicker"], ["matStartDate", "", "placeholder", "Start date", 3, "formControl", "min"], ["matEndDate", "", "placeholder", "End date", 3, "formControl", "max"], ["matSuffix", "", 3, "for"], ["picker", ""], [1, "fs-small", "fg-secondary"]], template: function RangeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, RangeComponent_p_1_Template, 3, 3, "p", 1);
        ɵngcc0.ɵɵelementStart(2, "mat-form-field", 2);
        ɵngcc0.ɵɵelementStart(3, "mat-label");
        ɵngcc0.ɵɵtext(4, "Enter a date range");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "mat-date-range-input", 3);
        ɵngcc0.ɵɵelement(6, "input", 4);
        ɵngcc0.ɵɵelement(7, "input", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(8, "mat-datepicker-toggle", 6);
        ɵngcc0.ɵɵelement(9, "mat-date-range-picker", null, 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(11, RangeComponent_p_11_Template, 4, 5, "p", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(10);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.label);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("rangePicker", _r1);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("formControl", ctx.start)("min", ctx.min);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("formControl", ctx.end)("max", ctx.max);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("for", _r1);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.hint);
    } }, directives: [ɵngcc3.NgIf, ɵngcc12.MatFormField, ɵngcc12.MatLabel, ɵngcc20.MatDateRangeInput, ɵngcc20.MatStartDate, ɵngcc14.DefaultValueAccessor, ɵngcc14.NgControlStatus, ɵngcc14.FormControlDirective, ɵngcc20.MatEndDate, ɵngcc20.MatDatepickerToggle, ɵngcc12.MatSuffix, ɵngcc20.MatDateRangePicker], pipes: [ɵngcc1.TranslocoPipe], styles: [""] });
RangeComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [COMPONENT_DATA,] }] },
    { type: ChangeDetectorRef },
    { type: FormBuilderService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RangeComponent, [{
        type: Component,
        args: [{
                selector: 'fb-range',
                template: "<div class=\"mat-form-field-wrapper\">\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{(cData.label || '') | transloco}}</p>\n\n  <mat-form-field appearance=\"outline\" class=\"w-full\">\n    <mat-label>Enter a date range</mat-label>\n    <mat-date-range-input [rangePicker]=\"picker\">\n      <input matStartDate placeholder=\"Start date\" [formControl]=\"start\" [min]=\"min\">\n      <input matEndDate placeholder=\"End date\" [formControl]=\"end\" [max]=\"max\">\n    </mat-date-range-input>\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-date-range-picker #picker></mat-date-range-picker>\n  </mat-form-field>\n\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.hint\">\n    {{(cData.hint | transloco) | transloco}}\n  </p>\n</div>\n",
                styles: [""]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [COMPONENT_DATA]
            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: FormBuilderService }]; }, null); })();

const ADDITIONAL_CONTEXT = new InjectionToken('ADDITIONAL_CONTEXT');

function parseTemplate(value = '', obj = {}) {
    if (!value.includes('{{')) {
        return obj[value];
    }
    else {
        const lookUp = new RegExp(`{{(.*?)}}`);
        while (lookUp.test(value)) {
            value = value.replace(lookUp, (RegExp.$1)
                .split('.')
                .reduce((acc, cur) => acc[cur], obj));
        }
        return value;
    }
}

const ROLE = new InjectionToken('ROLE');

class SelectComponent extends FieldComponent {
    constructor(cData, dbService, role, additionalContext) {
        super(cData);
        this.cData = cData;
        this.dbService = dbService;
        this.role = role;
        this.additionalContext = additionalContext;
        this.loading$ = new BehaviorSubject(true);
    }
    ngOnInit() {
        if (this.cData.populate) {
            const populate = this.cData.populate;
            const mapResults = populate.mapResults ? safeEval(populate.mapResults) : null;
            const documentsMethod = (query) => {
                this.loading$.next(true);
                if (!query) {
                    this.loading$.next(false);
                    return of([]);
                }
                if (query.filter && typeof query.filter === 'string') {
                    return this.dbService.getDocument(query.collection, query.filter)
                        .pipe(map(it => {
                        return (mapResults ? mapResults(it) : [it]).map((doc) => ({
                            value: doc[populate.valueKey || 'id'],
                            name: parseTemplate(populate.nameKey || 'name', doc)
                        }));
                    }), tap(() => this.loading$.next(false)));
                }
                return this.dbService
                    .getDocumentsSimple(query.collection, query.orderBy, query.filter)
                    .pipe(map(docs => {
                    if (mapResults) {
                        docs = mapResults(docs, {
                            fieldData: this.cData,
                            value: this.cData.form.getRawValue(),
                            role: this.role,
                            additionalContext: this.additionalContext
                        });
                    }
                    return docs.map(doc => ({
                        value: doc[populate.valueKey || 'id'],
                        name: parseTemplate(populate.nameKey || 'name', doc)
                    }));
                }), tap(() => this.loading$.next(false)));
            };
            if (populate.dependency) {
                const pointer = this.cData.pointers[populate.dependency.key];
                const gm = safeEval(populate.dependency.method);
                this.dataSet$ = pointer.control.valueChanges
                    .pipe(startWith(pointer.control.value), switchMap(value => documentsMethod(gm(value, {
                    fieldData: this.cData,
                    value: this.cData.form.getRawValue(),
                    role: this.role,
                    additionalContext: this.additionalContext
                }))));
            }
            else {
                let filter = populate.filter;
                if (populate.dynamicFilter) {
                    filter = safeEval(populate.dynamicFilter)({
                        fieldData: this.cData,
                        value: this.cData.form.getRawValue(),
                        role: this.role,
                        additionalContext: this.additionalContext
                    });
                }
                this.dataSet$ = documentsMethod({
                    collection: populate.collection,
                    orderBy: populate.orderBy,
                    filter
                });
            }
        }
        else {
            this.dataSet$ = of(this.cData.dataSet);
        }
    }
}
SelectComponent.ɵfac = function SelectComponent_Factory(t) { return new (t || SelectComponent)(ɵngcc0.ɵɵdirectiveInject(COMPONENT_DATA), ɵngcc0.ɵɵdirectiveInject(DbService), ɵngcc0.ɵɵdirectiveInject(ROLE), ɵngcc0.ɵɵdirectiveInject(ADDITIONAL_CONTEXT, 8)); };
SelectComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SelectComponent, selectors: [["fb-select"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 11, vars: 18, consts: [["appearance", "outline", 1, "w-full"], [3, "placeholder", "formControl", "multiple"], [3, "value", "disabled", 4, "ngFor", "ngForOf"], ["matSuffix", "", 3, "diameter", 4, "ngIf"], [3, "innerHTML", 4, "ngIf"], [3, "value", "disabled"], ["matSuffix", "", 3, "diameter"], [3, "innerHTML"]], template: function SelectComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-form-field", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-label");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "transloco");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "mat-select", 1);
        ɵngcc0.ɵɵpipe(5, "transloco");
        ɵngcc0.ɵɵtemplate(6, SelectComponent_mat_option_6_Template, 2, 3, "mat-option", 2);
        ɵngcc0.ɵɵpipe(7, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, SelectComponent_mat_spinner_8_Template, 1, 1, "mat-spinner", 3);
        ɵngcc0.ɵɵpipe(9, "async");
        ɵngcc0.ɵɵtemplate(10, SelectComponent_mat_hint_10_Template, 2, 3, "mat-hint", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("mat-form-field-has-hint", ctx.cData.hint);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 10, ctx.cData.label || ""));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind1(5, 12, ctx.cData.placeholder || ""))("formControl", ctx.cData.control)("multiple", ctx.cData.multiple);
        ɵngcc0.ɵɵattribute("autocomplite", ctx.cData.autocomplete || "off");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(7, 14, ctx.dataSet$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.populate && ɵngcc0.ɵɵpipeBind1(9, 16, ctx.loading$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.hint);
    } }, directives: [ɵngcc12.MatFormField, ɵngcc12.MatLabel, ɵngcc27.MatSelect, ɵngcc14.NgControlStatus, ɵngcc14.FormControlDirective, ɵngcc3.NgForOf, ɵngcc3.NgIf, ɵngcc16.MatOption, ɵngcc28.MatSpinner, ɵngcc12.MatSuffix, ɵngcc12.MatHint], pipes: [ɵngcc1.TranslocoPipe, ɵngcc3.AsyncPipe, ɵngcc17.SanitizePipe], styles: [""], changeDetection: 0 });
SelectComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [COMPONENT_DATA,] }] },
    { type: DbService },
    { type: String, decorators: [{ type: Inject, args: [ROLE,] }] },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ADDITIONAL_CONTEXT,] }] }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectComponent, [{
        type: Component,
        args: [{
                selector: 'fb-select',
                template: "<mat-form-field class=\"w-full\" appearance=\"outline\" [class.mat-form-field-has-hint]=\"cData.hint\">\n  <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n  <mat-select\n    [placeholder]=\"(cData.placeholder || '') | transloco\"\n    [formControl]=\"cData.control\"\n    [multiple]=\"cData.multiple\"\n    [attr.autocomplite]=\"cData.autocomplete || 'off'\">\n    <mat-option *ngFor=\"let data of dataSet$ | async\" [value]=\"data.value\" [disabled]=\"data.disabled\">\n      {{data.name}}\n    </mat-option>\n  </mat-select>\n  <mat-spinner\n    matSuffix\n    *ngIf=\"cData.populate && (loading$ | async)\"\n    [diameter]=\"20\"></mat-spinner>\n  <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n</mat-form-field>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [COMPONENT_DATA]
            }] }, { type: DbService }, { type: String, decorators: [{
                type: Inject,
                args: [ROLE]
            }] }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [ADDITIONAL_CONTEXT]
            }] }]; }, null); })();

class SliderComponent extends FieldComponent {
    ngOnInit() {
        this.startAt = this.cData.starAt
            ? this.cData.starAt
            : this.cData.validation.minimum
                ? this.cData.validation.minimum
                : 0;
        this.endAt = this.cData.endAt
            ? this.cData.endAt
            : this.cData.validation.maximum
                ? this.cData.validation.maximum
                : 100;
    }
}
SliderComponent.ɵfac = function SliderComponent_Factory(t) { return ɵSliderComponent_BaseFactory(t || SliderComponent); };
SliderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SliderComponent, selectors: [["fb-slider"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 7, consts: [[1, "mat-form-field-wrapper"], ["class", "fs-small fg-secondary", 4, "ngIf"], [3, "formControl", "thumbLabel", "tickInterval", "min", "max"], [1, "fs-small", "fg-secondary"]], template: function SliderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, SliderComponent_p_1_Template, 3, 3, "p", 1);
        ɵngcc0.ɵɵelement(2, "mat-slider", 2);
        ɵngcc0.ɵɵtemplate(3, SliderComponent_p_3_Template, 3, 3, "p", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.label);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("formControl", ctx.cData.control)("thumbLabel", ctx.cData.thumbLabel)("tickInterval", ctx.cData.tickInterval)("min", ctx.startAt)("max", ctx.endAt);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.hint);
    } }, directives: [ɵngcc3.NgIf, ɵngcc29.MatSlider, ɵngcc14.NgControlStatus, ɵngcc14.FormControlDirective], pipes: [ɵngcc1.TranslocoPipe], styles: [""], changeDetection: 0 });
const ɵSliderComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(SliderComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SliderComponent, [{
        type: Component,
        args: [{
                selector: 'fb-slider',
                template: "<div class=\"mat-form-field-wrapper\">\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{(cData.label || '') | transloco}}</p>\n  <mat-slider\n    [formControl]=\"cData.control\"\n    [thumbLabel]=\"cData.thumbLabel\"\n    [tickInterval]=\"cData.tickInterval\"\n    [min]=\"startAt\"\n    [max]=\"endAt\">\n  </mat-slider>\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.hint\">\n    {{(cData.hint || '') | transloco}}\n  </p>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], null, null); })();

class TextareaComponent extends FieldComponent {
    ngOnInit() {
        this.prefix$ = getHsd('prefix', this.cData);
        this.suffix$ = getHsd('suffix', this.cData);
    }
}
TextareaComponent.ɵfac = function TextareaComponent_Factory(t) { return ɵTextareaComponent_BaseFactory(t || TextareaComponent); };
TextareaComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TextareaComponent, selectors: [["fb-textarea"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 13, consts: [["appearance", "outline", 1, "w-full"], ["matInput", "", 3, "placeholder", "rows", "cols", "formControl"], [3, "innerHTML", 4, "ngIf"], ["matSuffix", "", 3, "innerHTML", 4, "ngIf"], ["matPrefix", "", 3, "innerHTML", 4, "ngIf"], [3, "innerHTML"], ["matSuffix", "", 3, "innerHTML"], ["matPrefix", "", 3, "innerHTML"]], template: function TextareaComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-form-field", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-label");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "transloco");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "textarea", 1);
        ɵngcc0.ɵɵpipe(5, "transloco");
        ɵngcc0.ɵɵtext(6, "  ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, TextareaComponent_mat_hint_7_Template, 2, 3, "mat-hint", 2);
        ɵngcc0.ɵɵtemplate(8, TextareaComponent_span_8_Template, 3, 5, "span", 3);
        ɵngcc0.ɵɵtemplate(9, TextareaComponent_span_9_Template, 3, 5, "span", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 9, ctx.cData.label || ""));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind1(5, 11, ctx.cData.placeholder || ""))("rows", ctx.cData.rows)("cols", ctx.cData.cols)("formControl", ctx.cData.control);
        ɵngcc0.ɵɵattribute("autocomplete", ctx.cData.autocomplete || "on");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.hint);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.suffix);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.prefix);
    } }, directives: [ɵngcc12.MatFormField, ɵngcc12.MatLabel, ɵngcc13.MatInput, ɵngcc14.DefaultValueAccessor, ɵngcc14.NgControlStatus, ɵngcc14.FormControlDirective, ɵngcc3.NgIf, ɵngcc12.MatHint, ɵngcc12.MatSuffix, ɵngcc12.MatPrefix], pipes: [ɵngcc1.TranslocoPipe, ɵngcc17.SanitizePipe, ɵngcc3.AsyncPipe], styles: [""], changeDetection: 0 });
const ɵTextareaComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(TextareaComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextareaComponent, [{
        type: Component,
        args: [{
                selector: 'fb-textarea',
                template: "<mat-form-field class=\"w-full\" appearance=\"outline\">\n  <mat-label>{{(cData.label || '') | transloco}}</mat-label>\n  <textarea\n    matInput\n    [placeholder]=\"(cData.placeholder || '') | transloco\"\n    [attr.autocomplete]=\"cData.autocomplete || 'on'\"\n    [rows]=\"cData.rows\"\n    [cols]=\"cData.cols\"\n    [formControl]=\"cData.control\">\n  </textarea>\n  <mat-hint *ngIf=\"cData.hint\" [innerHTML]=\"cData.hint | jpSanitize\"></mat-hint>\n  <span *ngIf=\"cData.suffix\" matSuffix [innerHTML]=\"((suffix$ | async) || '') | jpSanitize\"></span>\n  <span *ngIf=\"cData.prefix\" matPrefix [innerHTML]=\"((prefix$ | async) || '') | jpSanitize\"></span>\n</mat-form-field>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], null, null); })();

class ToggleComponent extends FieldComponent {
}
ToggleComponent.ɵfac = function ToggleComponent_Factory(t) { return ɵToggleComponent_BaseFactory(t || ToggleComponent); };
ToggleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ToggleComponent, selectors: [["fb-toggle"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 3, consts: [[1, "mat-form-field-wrapper"], ["class", "fs-small fg-secondary", 4, "ngIf"], [3, "formControl"], [1, "fs-small", "fg-secondary"]], template: function ToggleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ToggleComponent_p_1_Template, 3, 3, "p", 1);
        ɵngcc0.ɵɵelement(2, "mat-slide-toggle", 2);
        ɵngcc0.ɵɵtemplate(3, ToggleComponent_p_3_Template, 3, 3, "p", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.label);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("formControl", ctx.cData.control);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.hint);
    } }, directives: [ɵngcc3.NgIf, ɵngcc30.MatSlideToggle, ɵngcc14.NgControlStatus, ɵngcc14.FormControlDirective], pipes: [ɵngcc1.TranslocoPipe], styles: [""], changeDetection: 0 });
const ɵToggleComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(ToggleComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToggleComponent, [{
        type: Component,
        args: [{
                selector: 'fb-toggle',
                template: "<div class=\"mat-form-field-wrapper\">\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{(cData.label || '') | transloco}}</p>\n  <mat-slide-toggle [formControl]=\"cData.control\"></mat-slide-toggle>\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.hint\">\n    {{(cData.hint || '') | transloco}}\n  </p>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], null, null); })();

class WysiwygComponent extends FieldComponent {
    constructor(cData, fb, dialog, storage, formBuilderComponent) {
        super(cData);
        this.cData = cData;
        this.fb = fb;
        this.dialog = dialog;
        this.storage = storage;
        this.formBuilderComponent = formBuilderComponent;
        this.ytDefault = {
            fullWidth: true,
            showPlayerControls: true,
            privacyEnhancedMode: false,
            align: 'left'
        };
    }
    ngOnInit() {
        this.ytForm = this.fb.group(Object.assign({ value: ['', Validators.required] }, this.ytDefault));
        this.cData.control.statusChanges.subscribe(value => {
            if (value === 'DISABLED') {
                tinymce.activeEditor.getBody().setAttribute('readonly', true);
            }
            else if (this.cData.control.disabled) {
                tinymce.activeEditor.getBody().setAttribute('readonly', false);
            }
        });
    }
    ngAfterViewInit() {
        this.registerTiny();
    }
    registerTiny() {
        tinymce.init({
            target: this.textarea.nativeElement,
            branding: false,
            height: this.cData.height || 420,
            plugins: [
                'code',
                'print',
                'wordcount',
                'link',
                'lists',
                'advlist',
                'autolink',
                'image',
                'imagetools',
                'fullscreen',
                'table'
            ],
            menubar: this.cData.menubar || 'edit insert view format table tools help',
            image_advtab: true,
            /**
             * Link settings
             */
            default_link_target: '_blank',
            readonly: this.cData.control.disabled,
            toolbar: this.cData.toolbar || [
                'undo redo',
                'insert',
                'styleselect',
                'bold italic',
                'forecolor backcolor',
                'alignleft aligncenter alignright alignjustify',
                'bullist numlist outdent indent',
                'link',
                'image',
                'youTube',
                'fullscreen',
            ].join(' | '),
            images_upload_handler: (blobInfo, success, failure) => {
                this.storage
                    .upload(blobInfo.filename(), blobInfo.blob(), this.formBuilderComponent.id ? {
                    customMetadata: {
                        collection: this.formBuilderComponent.id
                    }
                } : {})
                    .then((data) => data.ref.getDownloadURL())
                    .then((url) => success(url))
                    .catch((error) => failure(error.toString()));
            },
            setup: (editor) => {
                this.editor = editor;
                editor.on('keyup change', () => {
                    const tinyContent = editor.getContent();
                    this.cData.control.setValue(tinyContent);
                });
                editor.ui.registry.addButton('youTube', {
                    type: 'button',
                    icon: 'embed',
                    tooltip: 'Embed youtube video',
                    onAction: () => {
                        this.ytForm.reset(this.ytDefault);
                        this.dialog
                            .open(this.youTubeDialogTemplate, { width: '500px' })
                            .afterClosed()
                            .pipe(filter(value => !!value), take(1))
                            .subscribe(() => {
                            const data = this.ytForm.getRawValue();
                            let url = data.privacyEnhancedMode
                                ? 'https://www.youtube-nocookie.com/embed/'
                                : 'https://www.youtube.com/embed/';
                            url = url + data.value;
                            if (!data.showPlayerControls) {
                                data.value += '?controls=0';
                            }
                            const iframe = `<iframe width="560" height="315" src="${url}" frameborder="0"
                    allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>`;
                            editor.insertContent(data.fullWidth
                                ? `<div class="evw-full" style="text-align: ${data.align}">${iframe}</div>`
                                : `<div style="text-align: ${data.align}">${iframe}</div>`);
                        });
                    }
                });
            }
        });
    }
}
WysiwygComponent.ɵfac = function WysiwygComponent_Factory(t) { return new (t || WysiwygComponent)(ɵngcc0.ɵɵdirectiveInject(COMPONENT_DATA), ɵngcc0.ɵɵdirectiveInject(ɵngcc14.FormBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc22.MatDialog), ɵngcc0.ɵɵdirectiveInject(StorageService), ɵngcc0.ɵɵdirectiveInject(FormBuilderComponent)); };
WysiwygComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WysiwygComponent, selectors: [["fb-wysiwyg"]], viewQuery: function WysiwygComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c5, true);
        ɵngcc0.ɵɵstaticViewQuery(_c6, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textarea = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.youTubeDialogTemplate = _t.first);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 7, vars: 2, consts: [[1, "mat-form-field-wrapper"], ["class", "fs-small fg-secondary", 4, "ngIf"], ["role", "textarea"], ["textarea", ""], ["youTubeDialog", ""], [1, "fs-small", "fg-secondary"], ["mat-dialog-title", ""], [3, "formGroup"], [1, "w-full"], ["matInput", "", "formControlName", "value"], [1, "mat-form-field-wrapper", "flex", "jc-between"], ["formControlName", "fullWidth"], ["formControlName", "showPlayerControls"], ["formControlName", "privacyEnhancedMode"], ["formControlName", "align"], ["value", "left"], ["value", "center"], ["value", "right"], [1, "jc-end"], ["mat-button", "", "mat-dialog-close", ""], ["mat-raised-button", "", "color", "primary", 3, "mat-dialog-close"]], template: function WysiwygComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, WysiwygComponent_p_1_Template, 3, 3, "p", 1);
        ɵngcc0.ɵɵelementStart(2, "textarea", 2, 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, WysiwygComponent_ng_template_5_Template, 46, 35, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cData.label);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ctx.cData.control.value);
    } }, directives: [ɵngcc3.NgIf, ɵngcc22.MatDialogTitle, ɵngcc14.ɵangular_packages_forms_forms_y, ɵngcc14.NgControlStatusGroup, ɵngcc14.FormGroupDirective, ɵngcc22.MatDialogContent, ɵngcc12.MatFormField, ɵngcc12.MatLabel, ɵngcc13.MatInput, ɵngcc14.DefaultValueAccessor, ɵngcc14.NgControlStatus, ɵngcc14.FormControlName, ɵngcc30.MatSlideToggle, ɵngcc27.MatSelect, ɵngcc16.MatOption, ɵngcc22.MatDialogActions, ɵngcc8.MatButton, ɵngcc22.MatDialogClose], pipes: [ɵngcc1.TranslocoPipe], styles: [""], changeDetection: 0 });
WysiwygComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [COMPONENT_DATA,] }] },
    { type: FormBuilder },
    { type: MatDialog },
    { type: StorageService },
    { type: FormBuilderComponent }
];
WysiwygComponent.propDecorators = {
    textarea: [{ type: ViewChild, args: ['textarea', { static: true },] }],
    youTubeDialogTemplate: [{ type: ViewChild, args: ['youTubeDialog', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WysiwygComponent, [{
        type: Component,
        args: [{
                selector: 'fb-wysiwyg',
                template: "<div class=\"mat-form-field-wrapper\">\n  <p class=\"fs-small fg-secondary\" *ngIf=\"cData.label\">{{(cData.label || '') | transloco}}</p>\n  <textarea #textarea role=\"textarea\">{{cData.control.value}}</textarea>\n</div>\n\n<ng-template #youTubeDialog>\n  <h1 mat-dialog-title>{{'FIELDS.WYSIWYG.EMBED_YOUTUBE' | transloco}}</h1>\n\n  <form [formGroup]=\"ytForm\">\n    <mat-dialog-content>\n      <mat-form-field class=\"w-full\">\n        <mat-label>{{'FIELDS.WYSIWYG.VIDEO_ID' | transloco}}</mat-label>\n        <input matInput formControlName=\"value\">\n      </mat-form-field>\n\n      <label class=\"mat-form-field-wrapper flex jc-between\">\n        <span>{{'FIELDS.WYSIWYG.FULL_WIDTH' | transloco}}</span>\n        <mat-slide-toggle formControlName=\"fullWidth\"></mat-slide-toggle>\n      </label>\n\n      <label class=\"mat-form-field-wrapper flex jc-between\">\n        <span>{{'FIELDS.WYSIWYG.SHOW_PLAYER_CONTROLS' | transloco}}</span>\n        <mat-slide-toggle formControlName=\"showPlayerControls\"></mat-slide-toggle>\n      </label>\n\n      <label class=\"mat-form-field-wrapper flex jc-between\">\n        <span>{{'FIELDS.WYSIWYG.PRIVACY_ENHANCED_MODE' | transloco}}</span>\n        <mat-slide-toggle formControlName=\"privacyEnhancedMode\"></mat-slide-toggle>\n      </label>\n\n      <mat-form-field class=\"w-full\">\n        <mat-label>{{'FIELDS.WYSIWYG.ALIGNMENT' | transloco}}</mat-label>\n        <mat-select formControlName=\"align\">\n          <mat-option value=\"left\">{{'FIELDS.WYSIWYG.LEFT' | transloco}}</mat-option>\n          <mat-option value=\"center\">{{'FIELDS.WYSIWYG.CENTER' | transloco}}</mat-option>\n          <mat-option value=\"right\">{{'FIELDS.WYSIWYG.RIGHT' | transloco}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </mat-dialog-content>\n\n    <mat-dialog-actions class=\"jc-end\">\n      <button mat-button mat-dialog-close>{{'GENERAL.CLOSE' | transloco}}</button>\n      <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"true\">{{'GENERAL.SAVE' | transloco}}</button>\n    </mat-dialog-actions>\n  </form>\n</ng-template>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [COMPONENT_DATA]
            }] }, { type: ɵngcc14.FormBuilder }, { type: ɵngcc22.MatDialog }, { type: StorageService }, { type: FormBuilderComponent }]; }, { textarea: [{
            type: ViewChild,
            args: ['textarea', { static: true }]
        }], youTubeDialogTemplate: [{
            type: ViewChild,
            args: ['youTubeDialog', { static: true }]
        }] }); })();

const COMPONENT_TYPE_COMPONENT_MAP = {
    [ComponentType.Input]: InputComponent,
    [ComponentType.Toggle]: ToggleComponent,
    [ComponentType.Select]: SelectComponent,
    [ComponentType.File]: FileComponent,
    [ComponentType.Image]: ImageComponent,
    [ComponentType.Gallery]: GalleryComponent,
    [ComponentType.Checkbox]: CheckboxComponent,
    [ComponentType.Autocomplete]: AutocompleteComponent,
    [ComponentType.Date]: DateFieldComponent,
    [ComponentType.Range]: RangeComponent,
    [ComponentType.Slider]: SliderComponent,
    [ComponentType.Wysiwyg]: WysiwygComponent,
    [ComponentType.Draggable]: DraggableListComponent,
    [ComponentType.Radio]: RadioComponent,
    [ComponentType.Chips]: ChipsComponent,
    [ComponentType.Textarea]: TextareaComponent
};

var SchemaType;
(function (SchemaType) {
    SchemaType["Object"] = "object";
    SchemaType["Array"] = "array";
    // Simple
    SchemaType["String"] = "string";
    SchemaType["Number"] = "number";
    SchemaType["Integer"] = "integer";
    SchemaType["Boolean"] = "boolean";
    SchemaType["Null"] = "null";
})(SchemaType || (SchemaType = {}));

// @dynamic
class SchemaValidators {
    static multipleOf(num) {
        return (control) => {
            return control.value % num === 0 ? null : { multipleOf: num };
        };
    }
}

function schemaToComponent(schemaType) {
    switch (schemaType) {
        case SchemaType.String:
            return {
                type: ComponentType.Input,
                configuration: {
                    type: 'text'
                }
            };
        case SchemaType.Number:
        case SchemaType.Integer:
            return {
                type: ComponentType.Input,
                configuration: {
                    type: 'number'
                }
            };
        case SchemaType.Boolean:
            return {
                type: ComponentType.Checkbox
            };
        case SchemaType.Array:
            return {
                type: ComponentType.Chips
            };
    }
}

// @dynamic
class Parser {
    constructor(schema, injector, state, role, definitions = {}, customFields = {}) {
        this.schema = schema;
        this.injector = injector;
        this.state = state;
        this.role = role;
        this.definitions = definitions;
        this.customFields = customFields;
        this.pointers = {};
    }
    static standardizeKey(key) {
        if (key[0] === '/') {
            key = key.slice(1, key.length);
        }
        return key;
    }
    static stringControl(definition, required) {
        const controlValidation = [];
        const validation = {};
        if (required) {
            controlValidation.push(Validators.required);
            validation.required = true;
        }
        if (definition.maxLength) {
            controlValidation.push(Validators.maxLength(definition.maxLength));
            validation.maxLength = definition.maxLength;
        }
        if (definition.minLength) {
            controlValidation.push(Validators.minLength(definition.minLength));
            validation.minLength = definition.minLength;
        }
        if (definition.pattern) {
            controlValidation.push(Validators.pattern(definition.pattern));
            validation.patter = definition.pattern;
        }
        return {
            control: new FormControl(definition.default || '', controlValidation),
            validation
        };
    }
    static numberControl(definition, required) {
        const validation = {};
        const controlValidation = [];
        if (required) {
            controlValidation.push(Validators.required);
            validation.required = true;
        }
        if (definition.minimum) {
            const minimum = definition.minimum + (definition.exclusiveMinimum ? 1 : 0);
            controlValidation.push(Validators.min(minimum));
            validation.minimum = minimum;
        }
        if (definition.maximum) {
            const maximum = definition.maximum - (definition.exclusiveMaximum ? 1 : 0);
            controlValidation.push(Validators.max(maximum));
            validation.maximum = maximum;
        }
        if (definition.multipleOf) {
            controlValidation.push(SchemaValidators.multipleOf(definition.multipleOf));
            validation.multipleOf = definition.multipleOf;
        }
        return {
            control: new FormControl(definition.default || null, controlValidation),
            validation
        };
    }
    static booleanControl(definition, required) {
        const controlValidation = [];
        const validation = {};
        if (required) {
            controlValidation.push(Validators.required);
            validation.required = true;
        }
        return {
            control: new FormControl(definition.default || false, controlValidation),
            validation
        };
    }
    buildForm(value, required = [], base = '/', addId = true) {
        const properties = this.buildProperties(this.schema.properties || {}, required, base, addId);
        this.form = properties.form;
        this.pointers = properties.pointers;
        if (value) {
            this.form.patchValue(value);
        }
        return this.form;
    }
    buildProperties(properties, required = [], base = '/', addId = true) {
        const { form, pointers } = [
            ...Object.entries(properties),
            /**
             * Add the id field as a property so that
             * it can be added to the form if needed
             */
            ...(addId
                ? [
                    [
                        'id',
                        {
                            type: 'string'
                        }
                    ]
                ]
                : [])
        ].reduce((group, [key, value]) => {
            const isRequired = required.includes(key);
            let parsed;
            switch (value.type) {
                case SchemaType.String:
                    parsed = Parser.stringControl(value, isRequired);
                    break;
                case SchemaType.Number:
                case SchemaType.Integer:
                    parsed = Parser.numberControl(value, isRequired);
                    break;
                case SchemaType.Boolean:
                    parsed = Parser.booleanControl(value, isRequired);
                    break;
                case SchemaType.Object:
                    const objectProperties = this.buildProperties(
                    /**
                     * Supporting both {type: 'object', properties: {}} and
                     * {type: 'object', items: {properties: {}}}
                     */
                    value.properties || (value.items && value.items.properties ? value.items.properties : {}), value.required || value.items && value.items.required ? value.items.required : [], base + key + '/', false);
                    for (const added in objectProperties.pointers) {
                        if (objectProperties.pointers.hasOwnProperty(added)) {
                            // @ts-ignore
                            group.pointers[added] = objectProperties.pointers[added];
                        }
                    }
                    parsed = {
                        control: objectProperties.form,
                        validation: {}
                    };
                    break;
                case SchemaType.Array:
                    parsed = this.buildArray(base, value);
                    break;
            }
            const pointerKey = base + key;
            const definition = this.getFromDefinitions(pointerKey) || {};
            // @ts-ignore
            group.form[key] = parsed.control;
            // @ts-ignore
            group.pointers[pointerKey] = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ key, type: value.type }, definition.formatOnLoad
                && { formatOnLoad: safeEval(definition.formatOnLoad) }), definition.formatOnSave
                && { formatOnSave: safeEval(definition.formatOnSave) }), definition.formatOnCreate
                && { formatOnCreate: safeEval(definition.formatOnCreate) }), definition.formatOnEdit
                && { formatOnEdit: safeEval(definition.formatOnEdit) }), parsed);
            return group;
        }, {
            form: {},
            pointers: {}
        });
        return {
            pointers,
            form: new FormGroup(form)
        };
    }
    /**
     * @param pointerKey Lookup key for the pointer
     * @param pointer Entire pointer object that should be used
     * @param definitions Entire definitions object that should be used
     * @param single Defines if the field shown in the form or in the table
     * @param arrayRoot If the field is in an array what root lookup to use
     */
    field(pointerKey, pointer, definitions = {}, single = true, arrayRoot) {
        if (!pointer) {
            console.log('Pointers: ', this.pointers);
            throw new Error(`Couldn't find pointer for ${pointerKey}.`);
        }
        const { key, type, control, validation } = pointer;
        const definition = Object.assign({ label: key }, this.getFromDefinitions(pointerKey, definitions));
        if ((definition.disableOn &&
            (Array.isArray(definition.disableOn) ?
                definition.disableOn.includes(this.state)
                : definition.disableOn === this.state)) ||
            (definition.disableForRoles &&
                (Array.isArray(definition.disableForRoles) ?
                    definition.disableForRoles.includes(this.role)
                    : definition.disableForRoles === this.role))) {
            control.disable();
        }
        /**
         * We don't show labels in the table
         */
        if (!single) {
            definition.label = '';
        }
        if (!definition.component) {
            definition.component = schemaToComponent(type);
        }
        // @ts-ignore
        const component = COMPONENT_TYPE_COMPONENT_MAP[definition.component.type] || this.customFields[definition.component.type];
        if (!component) {
            // @ts-ignore
            throw new Error(`Couldn't find a component defined for type: ${definition.component.type}`);
        }
        const portal = new ComponentPortal(component, null, createComponentInjector(this.injector, Object.assign(Object.assign({ control,
            validation,
            single, pointers: this.pointers, form: this.form }, definition), (definition.component.configuration || {}))));
        return {
            pointer: pointerKey,
            control,
            portal,
            validation,
            placeholder: definition.placeholder || '',
            label: definition.label,
            onlyOn: definition.onlyOn
        };
    }
    addArrayItem(pointer, loadHooks = false, parentArray) {
        const pointers = parentArray ? this.pointers[parentArray.pointer].arrayPointers[parentArray.index] : this.pointers;
        const target = pointers[pointer];
        const control = pointers[pointer].control;
        if (target.arrayType === SchemaType.Array ||
            target.arrayType === SchemaType.Object) {
            const properties = this.buildProperties(target.properties, target.required, pointer + '/', false);
            if (loadHooks) {
                this.loadHooks(properties.pointers);
            }
            // @ts-ignore
            target.arrayPointers.unshift(properties.pointers);
            control.controls.unshift(properties.form);
            return properties.pointers;
        }
        else {
            const cont = new FormControl('');
            control.controls.unshift(cont);
            return cont;
        }
    }
    moveArrayItem(pointer, fromIndex, toIndex, parentArray) {
        const pointers = parentArray ? this.pointers[parentArray.pointer].arrayPointers[parentArray.index] : this.pointers;
        const target = pointers[pointer];
        const control = pointers[pointer].control;
        if (target.arrayType === SchemaType.Array ||
            target.arrayType === SchemaType.Object) {
            moveItemInArray(target.arrayPointers, fromIndex, toIndex);
        }
        moveItemInArray(control.controls, fromIndex, toIndex);
    }
    removeArrayItem(pointer, index, parentArray) {
        const pointers = parentArray ? this.pointers[parentArray.pointer].arrayPointers[parentArray.index] : this.pointers;
        pointers[pointer].arrayPointers.splice(index, 1);
        pointers[pointer].control.removeAt(index);
    }
    loadHooks(pointers = this.pointers) {
        Object.values(pointers).forEach(entry => {
            /**
             * TODO:
             * For the moment formatOn methods are
             * only supported on FormControls.
             * We might want to expand on this later on.
             */
            if (entry.control instanceof FormControl && entry.formatOnLoad) {
                const adjustedValue = entry.formatOnLoad(entry.control.value);
                if (adjustedValue !== entry.control.value) {
                    entry.control.setValue(adjustedValue);
                }
            }
        });
    }
    preSaveHooks(currentState, statesToProcess = [State.Create, State.Edit], pointers = this.pointers) {
        const preSaveData = this.form.getRawValue();
        Object.values(pointers).forEach(entry => {
            /**
             * TODO:
             * For the moment formatOn methods are
             * only supported on FormControls.
             * We might want to expand on this later on.
             */
            if (entry.control instanceof FormControl) {
                let value = entry.control.value;
                if (entry.formatOnSave) {
                    value = entry.formatOnSave(value, preSaveData);
                }
                if (statesToProcess.includes(currentState)) {
                    if (currentState === State.Edit && entry.formatOnEdit) {
                        value = entry.formatOnEdit(value, preSaveData);
                    }
                    else if (entry.formatOnCreate) {
                        value = entry.formatOnCreate(value, preSaveData);
                    }
                }
                if (value !== entry.control.value) {
                    entry.control.setValue(value);
                }
            }
            if (entry.arrayPointers) {
                entry.arrayPointers.forEach(arrayPointers => this.preSaveHooks(currentState, statesToProcess, arrayPointers));
            }
        });
    }
    getFromDefinitions(key, definitions = this.definitions) {
        return definitions[Parser.standardizeKey(key)];
    }
    /**
     * TODO:
     * - Handle contains case
     * - Handle items or contains as array not object
     */
    buildArray(base, definition) {
        if (!definition.items) {
            return Object.assign({ control: new FormControl([]) }, (definition.items
                ? {
                    arrayType: definition.items.type,
                    properties: definition.items.properties,
                    required: definition.items.required,
                    validation: {}
                }
                : {
                    arrayType: SchemaType.String,
                    validation: {}
                }));
        }
        else {
            return {
                arrayType: definition.items.type,
                properties: definition.items.properties,
                required: definition.items.required,
                validation: {},
                control: new FormArray([]),
                arrayPointers: []
            };
        }
    }
}

class FormBuilderComponent {
    constructor(injector, role, customFields, cdr, service) {
        this.injector = injector;
        this.role = role;
        this.customFields = customFields;
        this.cdr = cdr;
        this.service = service;
        this.valueChanges = new EventEmitter();
        this.validityChanges = new EventEmitter();
        this.state = State.Create;
    }
    ngOnChanges(changes) {
        if (changes.data) {
            this.render();
        }
        if (changes.value && this.form) {
            this.form.patchValue(changes.value.currentValue);
        }
    }
    ngOnDestroy() {
        if (this.changeSubscription) {
            this.changeSubscription.unsubscribe();
        }
        if (this.statusSubscription) {
            this.statusSubscription.unsubscribe();
        }
    }
    process() {
        this.parser.preSaveHooks(this.state);
        return this.form.getRawValue();
    }
    save(collectionId, documentId) {
        const toExec = this.service.saveComponents.map(comp => comp.save(collectionId, documentId));
        return toExec.length ? forkJoin(toExec) : of({});
    }
    saveAndProcess(collectionId, documentId) {
        this.process();
        return this.save(collectionId, documentId);
    }
    render() {
        const value = this.data.value || {};
        const definitions = this.data.definitions || {};
        this.parser = new Parser(this.data.schema, this.injector, this.state, this.role, definitions, this.customFields);
        this.form = this.parser.buildForm(value, [], '/', false);
        this.parser.loadHooks();
        this.segments = filterAndCompileSegments(this.data.segments ||
            [{
                    title: '',
                    fields: Object.keys(this.parser.pointers),
                    columnsDesktop: 12,
                    type: SegmentType.Empty
                }], this.parser, definitions, this.injector, value);
        if (this.changeSubscription) {
            this.changeSubscription.unsubscribe();
        }
        if (this.statusSubscription) {
            this.statusSubscription.unsubscribe();
        }
        this.changeSubscription = this.form.valueChanges
            .subscribe(val => {
            this.valueChanges.emit(val);
        });
        this.statusSubscription = this.form.statusChanges
            .subscribe(val => {
            this.validityChanges.emit(val === 'VALID');
        });
        this.cdr.markForCheck();
    }
}
FormBuilderComponent.ɵfac = function FormBuilderComponent_Factory(t) { return new (t || FormBuilderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ROLE, 8), ɵngcc0.ɵɵdirectiveInject(CUSTOM_FIELDS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(FormBuilderService)); };
FormBuilderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormBuilderComponent, selectors: [["fb-form-builder"]], inputs: { state: "state", data: "data", value: "value", id: "id" }, outputs: { valueChanges: "valueChanges", validityChanges: "validityChanges" }, features: [ɵngcc0.ɵɵProvidersFeature([FormBuilderService]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 1, consts: [[1, "grid"], [4, "ngFor", "ngForOf"], [3, "cdkPortalOutlet"]], template: function FormBuilderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, FormBuilderComponent_ng_container_1_Template, 2, 1, "ng-container", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.segments);
    } }, directives: [ɵngcc3.NgForOf, ɵngcc6.CdkPortalOutlet], encapsulation: 2, changeDetection: 0 });
FormBuilderComponent.ctorParameters = () => [
    { type: Injector },
    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ROLE,] }] },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CUSTOM_FIELDS,] }] },
    { type: ChangeDetectorRef },
    { type: FormBuilderService }
];
FormBuilderComponent.propDecorators = {
    data: [{ type: Input }],
    value: [{ type: Input }],
    id: [{ type: Input }],
    valueChanges: [{ type: Output }],
    validityChanges: [{ type: Output }],
    state: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormBuilderComponent, [{
        type: Component,
        args: [{
                selector: 'fb-form-builder',
                template: "<div class=\"grid\">\n  <ng-container *ngFor=\"let segment of segments\">\n    <ng-template [cdkPortalOutlet]=\"segment.component\"></ng-template>\n  </ng-container>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                providers: [FormBuilderService]
            }]
    }], function () { return [{ type: ɵngcc0.Injector }, { type: String, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [ROLE]
            }] }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [CUSTOM_FIELDS]
            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: FormBuilderService }]; }, { valueChanges: [{
            type: Output
        }], validityChanges: [{
            type: Output
        }], state: [{
            type: Input
        }], data: [{
            type: Input
        }], value: [{
            type: Input
        }], id: [{
            type: Input
        }] }); })();

class DropzoneDirective {
    constructor(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.hoverClass = 'active';
        this.dropped = new EventEmitter();
        this.hovered = new EventEmitter();
    }
    onDrop($event) {
        $event.preventDefault();
        this.dropped.emit($event.dataTransfer.files);
        this.renderer.removeClass(this.el.nativeElement, this.hoverClass);
        this.hovered.emit(false);
    }
    onDragOver($event) {
        $event.preventDefault();
        this.renderer.addClass(this.el.nativeElement, this.hoverClass);
        this.hovered.emit(true);
    }
    onDragLeave($event) {
        $event.preventDefault();
        this.renderer.removeClass(this.el.nativeElement, this.hoverClass);
        this.hovered.emit(false);
    }
}
DropzoneDirective.ɵfac = function DropzoneDirective_Factory(t) { return new (t || DropzoneDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
DropzoneDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DropzoneDirective, selectors: [["", "fbDropzone", ""]], hostBindings: function DropzoneDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("drop", function DropzoneDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); })("dragover", function DropzoneDirective_dragover_HostBindingHandler($event) { return ctx.onDragOver($event); })("dragleave", function DropzoneDirective_dragleave_HostBindingHandler($event) { return ctx.onDragLeave($event); });
    } }, inputs: { hoverClass: "hoverClass" }, outputs: { dropped: "dropped", hovered: "hovered" } });
DropzoneDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
DropzoneDirective.propDecorators = {
    hoverClass: [{ type: Input }],
    dropped: [{ type: Output }],
    hovered: [{ type: Output }],
    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],
    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],
    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DropzoneDirective, [{
        type: Directive,
        args: [{
                selector: '[fbDropzone]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { hoverClass: [{
            type: Input
        }], dropped: [{
            type: Output
        }], hovered: [{
            type: Output
        }], onDrop: [{
            type: HostListener,
            args: ['drop', ['$event']]
        }], onDragOver: [{
            type: HostListener,
            args: ['dragover', ['$event']]
        }], onDragLeave: [{
            type: HostListener,
            args: ['dragleave', ['$event']]
        }] }); })();

class ShowFieldPipe {
    transform(fields, parser) {
        return fields.filter(field => !field.onlyOn ||
            (Array.isArray(field.onlyOn) ?
                field.onlyOn.includes(parser.state) :
                field.onlyOn === parser.state));
    }
}
ShowFieldPipe.ɵfac = function ShowFieldPipe_Factory(t) { return new (t || ShowFieldPipe)(); };
ShowFieldPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "showField", type: ShowFieldPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowFieldPipe, [{
        type: Pipe,
        args: [{
                name: 'showField'
            }]
    }], null, null); })();

class FormBuilderModule {
}
FormBuilderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormBuilderModule });
FormBuilderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormBuilderModule_Factory(t) { return new (t || FormBuilderModule)(); }, imports: [[
            CommonModule,
            ReactiveFormsModule,
            /**
             * Material
             */
            MatFormFieldModule,
            MatInputModule,
            MatButtonModule,
            MatAutocompleteModule,
            MatSelectModule,
            MatSliderModule,
            MatSlideToggleModule,
            MatCheckboxModule,
            MatChipsModule,
            MatIconModule,
            MatDatepickerModule,
            MatNativeDateModule,
            DragDropModule,
            MatDialogModule,
            MatTooltipModule,
            MatProgressSpinnerModule,
            MatExpansionModule,
            MatDividerModule,
            PortalModule,
            MatCardModule,
            MatTabsModule,
            MatRadioModule,
            /**
             * Jp Helpers
             */
            SanitizeModule,
            /**
             * Other
             */
            TranslocoModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormBuilderModule, { declarations: function () { return [FieldComponent, AutocompleteComponent, CheckboxComponent, ChipsComponent, DateFieldComponent, RangeComponent, DraggableListComponent, FileComponent, GalleryComponent, ImageComponent, InputComponent, RadioComponent, SelectComponent, SliderComponent, TextareaComponent, ToggleComponent, WysiwygComponent, SegmentComponent, AccordionComponent, CardComponent, EmptyComponent, StepperComponent, TabsComponent, DropzoneDirective, ShowFieldPipe, FormBuilderComponent]; }, imports: function () { return [CommonModule,
        ReactiveFormsModule,
        /**
         * Material
         */
        MatFormFieldModule,
        MatInputModule,
        MatButtonModule,
        MatAutocompleteModule,
        MatSelectModule,
        MatSliderModule,
        MatSlideToggleModule,
        MatCheckboxModule,
        MatChipsModule,
        MatIconModule,
        MatDatepickerModule,
        MatNativeDateModule,
        DragDropModule,
        MatDialogModule,
        MatTooltipModule,
        MatProgressSpinnerModule,
        MatExpansionModule,
        MatDividerModule,
        PortalModule,
        MatCardModule,
        MatTabsModule,
        MatRadioModule,
        /**
         * Jp Helpers
         */
        SanitizeModule,
        /**
         * Other
         */
        TranslocoModule]; }, exports: function () { return [FormBuilderComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormBuilderModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    /**
                     * Fields
                     */
                    FieldComponent,
                    AutocompleteComponent,
                    CheckboxComponent,
                    ChipsComponent,
                    DateFieldComponent,
                    RangeComponent,
                    DraggableListComponent,
                    FileComponent,
                    GalleryComponent,
                    ImageComponent,
                    InputComponent,
                    RadioComponent,
                    SelectComponent,
                    SliderComponent,
                    TextareaComponent,
                    ToggleComponent,
                    WysiwygComponent,
                    /**
                     * Segments
                     */
                    SegmentComponent,
                    AccordionComponent,
                    CardComponent,
                    EmptyComponent,
                    StepperComponent,
                    TabsComponent,
                    /**
                     * Directives
                     */
                    DropzoneDirective,
                    /**
                     * Pipes
                     */
                    ShowFieldPipe,
                    FormBuilderComponent
                ],
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                    /**
                     * Material
                     */
                    MatFormFieldModule,
                    MatInputModule,
                    MatButtonModule,
                    MatAutocompleteModule,
                    MatSelectModule,
                    MatSliderModule,
                    MatSlideToggleModule,
                    MatCheckboxModule,
                    MatChipsModule,
                    MatIconModule,
                    MatDatepickerModule,
                    MatNativeDateModule,
                    DragDropModule,
                    MatDialogModule,
                    MatTooltipModule,
                    MatProgressSpinnerModule,
                    MatExpansionModule,
                    MatDividerModule,
                    PortalModule,
                    MatCardModule,
                    MatTabsModule,
                    MatRadioModule,
                    /**
                     * Jp Helpers
                     */
                    SanitizeModule,
                    /**
                     * Other
                     */
                    TranslocoModule
                ],
                exports: [FormBuilderComponent]
            }]
    }], null, null); })();

/**
 * Public API Surface of form-builder
 */

/**
 * Generated bundle index. Do not edit.
 */

export { ADDITIONAL_CONTEXT, COMPONENT_DATA, CUSTOM_FIELDS, ComponentType, DbService, FieldComponent, FormBuilderComponent, FormBuilderModule, FormBuilderService, Parser, ROLE, STORAGE_URL, SchemaType, SegmentType, State, StorageService, cloneAbstractControl, formatFileName, formatGeneratedImages, parseTemplate, safeEval, switchItemLocations, AutocompleteComponent as ɵa, CheckboxComponent as ɵb, ChipsComponent as ɵc, DateFieldComponent as ɵd, RangeComponent as ɵe, DraggableListComponent as ɵf, FileComponent as ɵg, GalleryComponent as ɵh, ImageComponent as ɵi, InputComponent as ɵj, RadioComponent as ɵk, SelectComponent as ɵl, SliderComponent as ɵm, TextareaComponent as ɵn, ToggleComponent as ɵo, WysiwygComponent as ɵp, SegmentComponent as ɵq, SEGMENT_DATA as ɵr, AccordionComponent as ɵs, CardComponent as ɵt, EmptyComponent as ɵu, StepperComponent as ɵv, TabsComponent as ɵw, DropzoneDirective as ɵx, ShowFieldPipe as ɵy };

//# sourceMappingURL=jaspero-form-builder.js.map